/* Example using CSOM code on Node */

XMLHttpRequest = require('./XMLHttpRequest.js').XMLHttpRequest;

var window = global;

var navigator = {
    userAgent: "Node"
};

var formdigest = {
    value: 'DUMMY VALUE',
    tagName: 'INPUT',
    type: 'hidden'
};

var document = {
    documentElement: {},
    URL: 'https://company.sharepoint.com/',
    getElementsByName: function(name) {
        //console.log('getElementByName: ', name);
        if (name == '__REQUESTDIGEST') {
            return [formdigest]
        }
    },
    getElementsByTagName: function(name) {
        //console.log('getElementByTagName: ', name);
        return []
    }
};

function alert(m) {
    console.log("Alert:" + m.toString());
}

/***** Insert init.DEBUG.js here            ***************/
function ULSxSy() {
    var o = new Object;
    o.ULSTeamName = "Microsoft SharePoint Foundation";
    o.ULSFileName = "init.debug.js";
    return o;
}
// _lcid="1033" _version="14.0.4762"
// _localBinding
// Version: "14.0.4762"
// Copyright (c) Microsoft Corporation.  All rights reserved.
var L_Infobar_Send_Error_Text = "Failed to send JavaScript error report. Please see original error details below.";
var ULS;
if (!ULS)
    ULS = new Object()
ULS.OriginalOnError = window.onerror;
window.onerror = ULSOnError;

function ULSTrim(str) {
    ULSxSy: ;
    str = str.replace(/^\s*/, "");
    str = str.replace(/\s*$/, "");
    return str;
}

function ULSEncodeXML(str) {
    ULSxSy: ;
    str = String(str);
    str = str.replace(/&/g, "&amp;");
    str = str.replace(/</g, "&lt;");
    str = str.replace(/>/g, "&gt;");
    str = str.replace(/'/g, "&apos;");
    str = str.replace(/"/g, "&quot;");
    return str;
}

function ULSStripPII(url) {
    ULSxSy: ;
    if (url.indexOf('?') != -1)
        url = url.substring(0, url.indexOf('?'));
    if (window.location)
        url = url.replace(window.location.hostname, "[server]");
    return url;
}

function ULSGetFunction(fn, depth, topfn) {
    ULSxSy: ;
    var sF = fn.toString();
    var sFnNm = ULSTrim(sF.substring(0, sF.indexOf("{")));
    if (sFnNm.indexOf("function") == 0)
        sFnNm = ULSTrim(sFnNm.substring(8));
    var s = '<function ';
    if (depth >= 0)
        s += 'depth="' + depth + '" ';
    s += 'signature="' + sFnNm + '">';
    if (depth == 0 || sFnNm.indexOf("anonymous") == 0 || sFnNm.indexOf("(") == 0)
        s += '\n<![CDATA[' + sF + ']]>\n';
    s += '</function>';
    return s;
}

function ULSGetMetadataFromFrame(oCS) {
    ULSxSy: ;
    var sFunctionText = oCS.toString();
    var iOpeningBrace = sFunctionText.indexOf("{");
    if (iOpeningBrace == -1)
        return false;
    sFunctionText = sFunctionText.substr(iOpeningBrace + 1);
    var iFirstStatement = sFunctionText.search(/[^\s]/);
    if (iFirstStatement == -1)
        return false;
    var reMatch = sFunctionText.match(/ULS[^\s;]*:/);
    if (reMatch == null || reMatch.index != iFirstStatement)
        return false;
    var sLabelName = reMatch[0];
    sLabelName = sLabelName.substr(0, sLabelName.length - 1);
    try {
        var o = eval(sLabelName + "()");
        if (typeof(o) == "undefined")
            return false;
        ULS.teamName = o.ULSTeamName;
        ULS.originalFile = o.ULSFileName;
        return true;
    } catch (e) {
        return false;
    }
}

function ULSGetCallstack(callerArg) {
    ULSxSy: ;
    var stack = "";
    try {
        if (callerArg) {
            var fFoundMetadata = false;
            var oCS = callerArg;
            var d = 0;
            while (oCS && d < 20) {
                if (!fFoundMetadata)
                    fFoundMetadata = ULSGetMetadataFromFrame(oCS);
                stack += ULSGetFunction(oCS, d, callerArg) + '\n';
                oCS = oCS.caller;
                d++;
            }
        }
    } catch (e) {}
    return stack;
}

function ULSGetClientInfo() {
    ULSxSy: ;
    var client = "";
    try {
        var lang = navigator.browserLanguage;
        if (!lang) lang = navigator.language;
        if (!lang) lang = navigator.systemLanguage;
        var agt = navigator.userAgent.toLowerCase();
        var app = navigator.appName;
        var ver = parseFloat(navigator.appVersion);
        if (agt.indexOf("msie ") != -1)
            ver = parseFloat(agt.substring(agt.indexOf("msie ") + 5));
        if (agt.indexOf("firefox/") != -1) {
            app = "Firefox";
            ver = parseFloat(agt.substring(agt.indexOf("firefox/") + 8));
        }
        client += '<browser name="' + ULSEncodeXML(app) + '" version="' + ULSEncodeXML(ver) + '" />\n';
        client += '<useragent>' + ULSEncodeXML(navigator.userAgent) + '</useragent>\n';
        if (lang)
            client += '<language>' + ULSEncodeXML(lang) + '</language>\n';
        if (document.referrer) {
            var ref = ULSStripPII(document.referrer);
            client += '<referrer>' + ULSEncodeXML(ref) + '</referrer>\n';
        }
        if (window.location) {
            var loc = ULSStripPII(window.location.toString());
            client += '<location>' + ULSEncodeXML(loc) + '</location>\n';
        }
        if (ULS.Correlation)
            client += '<correlation>' + ULSEncodeXML(ULS.Correlation) + '</correlation>\n';
    } catch (e) {}
    return client;
}

function ULSHandleWebServiceResponse() {
    ULSxSy: ;
    if (ULS.request.readyState == 4 && ULS.request.status == 200) {
        ULSFinishErrorHandling();
    }
    if ((ULS.request.readyState == 0 || ULS.request.readyState == 4) && ULS.request.status > 200) {
        ULSFinishErrorHandling();
    }
}

function ULSFinishErrorHandling() {
    ULSxSy: ;
    ULS.message = null;
}

function ULSGetWebServiceUrl() {
    ULSxSy: ;
    var url = "";
    var idx1 = document.URL.indexOf('://');
    if (idx1 > 0) {
        var idx2 = document.URL.indexOf('/', idx1 + 3);
        if (idx2 > 0)
            url = document.URL.substring(0, idx2);
        else
            url = document.URL;
    }
    if (url.charAt(url.length - 1) != '/')
        url += '/';
    url += '_vti_bin/diagnostics.asmx';
    return url;
}

function ULSSendReport() {
    ULSxSy: ;
    if (XMLHttpRequest)
        ULS.request = new XMLHttpRequest();
    else
        ULS.request = new ActiveXObject("MSXML2.XMLHTTP");
    ULS.request.onreadystatechange = ULSHandleWebServiceResponse;
    ULS.request.open("POST", ULSGetWebServiceUrl(), true);
    ULS.request.setRequestHeader("Content-Type", "text/xml; charset=utf-8");
    ULS.request.setRequestHeader("SOAPAction", ULS.WebServiceNS + "SendClientScriptErrorReport");
    ULS.request.send('<?xml version="1.0" encoding="utf-8"?>' + '<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">' + '<soap:Body>' + '<SendClientScriptErrorReport xmlns="' + ULS.WebServiceNS + '">' + '<message>' + ULSEncodeXML(ULS.message) + '</message>' + '<file>' + ULSEncodeXML(ULS.file) + '</file>' + '<line>' + ULS.line + '</line>' + '<stack>' + ULSEncodeXML(ULS.callStack) + '</stack>' + '<client>' + ULSEncodeXML(ULS.clientInfo) + '</client>' + '<team>' + ULSEncodeXML(ULS.teamName) + '</team>' + '<originalFile>' + ULSEncodeXML(ULS.originalFile) + '</originalFile>' + '</SendClientScriptErrorReport>' + '</soap:Body>' + '</soap:Envelope>');
}

function ULSSendExceptionImpl(msg, url, line, oCaller) {
    ULSxSy: ;
    if (ULS && ULS.enable) {
        ULS.enable = false;
        window.onerror = ULS.OriginalOnError;
        ULS.WebServiceNS = "http://schemas.microsoft.com/sharepoint/diagnostics/";
        try {
            ULS.message = msg;
            if (url.indexOf('?') != -1)
                url = url.substr(0, url.indexOf('?'));
            ULS.file = url.substr(url.lastIndexOf('/') + 1);
            ULS.line = line;
            ULS.teamName = "";
            ULS.originalFile = "";
            ULS.callStack = '<stack>\n' + ULSGetCallstack(oCaller) + '</stack>';
            ULS.clientInfo = '<client>\n' + ULSGetClientInfo() + '</client>';
            ULSSendReport();
        } catch (e) {}
    }
    if (ULS && ULS.OriginalOnError)
        return ULS.OriginalOnError(msg, url, line)
    else
        return false;
}

function ULSOnError(msg, url, line) {
    ULSxSy: ;
    return ULSSendExceptionImpl(msg, url, line, ULSOnError.caller);
}

function ULSSendException(ex) {
    ULSxSy: ;
    var message = ex.message;
    if (typeof(message) == "undefined")
        message = ex;
    ULSSendExceptionImpl(message, document.location.href, 0, ULSSendException.caller);
}

function Browseris() {
    ULSxSy: ;
    var agt = navigator.userAgent.toLowerCase();
    this.osver = 1.0;
    if (agt) {
        var stOSVer = agt.substring(agt.indexOf("windows ") + 11);
        this.osver = parseFloat(stOSVer);
    }
    this.major = parseInt(navigator.appVersion);
    this.nav = ((agt.indexOf('mozilla') != -1) && ((agt.indexOf('spoofer') == -1) && (agt.indexOf('compatible') == -1)));
    this.nav6 = this.nav && (this.major == 5);
    this.nav6up = this.nav && (this.major >= 5);
    this.nav7up = false;
    if (this.nav6up) {
        var navIdx = agt.indexOf("netscape/");
        if (navIdx >= 0)
            this.nav7up = parseInt(agt.substring(navIdx + 9)) >= 7;
    }
    this.ie = (agt.indexOf("msie") != -1);
    this.aol = this.ie && agt.indexOf(" aol ") != -1;
    if (this.ie) {
        var stIEVer = agt.substring(agt.indexOf("msie ") + 5);
        this.iever = parseInt(stIEVer);
        this.verIEFull = parseFloat(stIEVer);
    } else
        this.iever = 0;
    this.ie4up = this.ie && (this.major >= 4);
    this.ie5up = this.ie && (this.iever >= 5);
    this.ie55up = this.ie && (this.verIEFull >= 5.5);
    this.ie6up = this.ie && (this.iever >= 6);
    this.ie7down = this.ie && (this.iever <= 7);
    this.ie7up = this.ie && (this.iever >= 7);
    this.ie8standard = this.ie && document.documentMode && (document.documentMode == 8);
    this.winnt = ((agt.indexOf("winnt") != -1) || (agt.indexOf("windows nt") != -1));
    this.win32 = ((this.major >= 4) && (navigator.platform == "Win32")) ||
        (agt.indexOf("win32") != -1) || (agt.indexOf("32bit") != -1);
    this.win64bit = (agt.indexOf("win64") != -1);
    this.win = this.winnt || this.win32 || this.win64bit;
    this.mac = (agt.indexOf("mac") != -1);
    this.w3c = this.nav6up;
    this.safari = (agt.indexOf("webkit") != -1);
    this.safari125up = false;
    this.safari3up = false;
    if (this.safari && this.major >= 5) {
        var navIdx = agt.indexOf("webkit/");
        if (navIdx >= 0)
            this.safari125up = parseInt(agt.substring(navIdx + 7)) >= 125;
        var verIdx = agt.indexOf("version/");
        if (verIdx >= 0)
            this.safari3up = parseInt(agt.substring(verIdx + 8)) >= 3;
    }
    this.firefox = this.nav && (agt.indexOf("firefox") != -1);
    this.firefox3up = false;
    this.firefox36up = false;
    if (this.firefox && this.major >= 5) {
        var ffVerIdx = agt.indexOf("firefox/");
        if (ffVerIdx >= 0) {
            var firefoxVStr = agt.substring(ffVerIdx + 8);
            this.firefox3up = parseInt(firefoxVStr) >= 3;
            this.firefox36up = parseFloat(firefoxVStr) >= 3.6;
        }
    }
}
var browseris = new Browseris();
var bis = browseris;

function byid(id) {
    ULSxSy: ;
    return document.getElementById(id);
}

function newE(tag) {
    ULSxSy: ;
    return document.createElement(tag);
}

function wpf() {
    ULSxSy: ;
    return document.forms[MSOWebPartPageFormName];
}

function startReplacement() {}

function AttachEvent(eventName, eventFunc, el) {
    ULSxSy: ;
    if (!el) el = window;
    if (eventName == 'domLoad') {
        eventName = el.addEventListener && browseris.nav ? 'DOMContentLoaded' : 'load';
    }
    if (typeof(eventFunc) == 'string') eventFunc = new Function(eventFunc);
    if (el.addEventListener) el.addEventListener(eventName, eventFunc, false);
    else el.attachEvent('on' + eventName, eventFunc);
}

function DetachEvent(eventName, eventFunc, el) {
    ULSxSy: ;
    if (!el) el = window;
    if (eventName == 'domLoad') {
        eventName = el.removeEventListener && browseris.nav ? 'DOMContentLoaded' : 'load';
    }
    if (typeof(eventFunc) == 'string') eventFunc = new Function(eventFunc);
    if (el.removeEventListener) el.removeEventListener(eventName, eventFunc, false);
    else el.detachEvent('on' + eventName, eventFunc);
}

function CancelEvent(e) {
    ULSxSy: ;
    e.cancelBubble = true;
    if (e.preventDefault) e.preventDefault();
    if (e.stopPropogation) e.stopPropogation();
    e.returnValue = false;
    return false;
}

function GetEventSrcElement(e) {
    ULSxSy: ;
    if (browseris.nav)
        return e.target;
    else
        return e.srcElement;
}

function GetEventKeyCode(e) {
    ULSxSy: ;
    if (browseris.nav)
        return e.which;
    else
        return e.keyCode;
}

function GetInnerText(e) {
    ULSxSy: ;
    if (browseris.safari && browseris.major < 5)
        return e.innerHTML;
    else if (browseris.nav)
        return e.textContent;
    else
        return e.innerText;
}
if (typeof(Sys) != "undefined" && Sys && Sys.Application) {
    Sys.Application.notifyScriptLoaded();
}
if (typeof(NotifyScriptLoadedAndExecuteWaitingJobs) == "function") {
    NotifyScriptLoadedAndExecuteWaitingJobs("owsbrows.js");
}
var g_cde = {};

function GetCachedElement(id) {
    ULSxSy: ;
    var ret = null;
    if (!(ret = g_cde[id])) {
        ret = document.getElementById(id);
        g_cde[id] = ret;
    }
    return ret;
}
var UTF8_1ST_OF_2 = 0xc0;
var UTF8_1ST_OF_3 = 0xe0;
var UTF8_1ST_OF_4 = 0xf0;
var UTF8_TRAIL = 0x80;
var HIGH_SURROGATE_BITS = 0xD800;
var LOW_SURROGATE_BITS = 0xDC00;
var SURROGATE_6_BIT = 0xFC00;
var SURROGATE_ID_BITS = 0xF800;
var SURROGATE_OFFSET = 0x10000;

function escapeProperlyCoreCore(str, bAsUrl, bForFilterQuery, bForCallback) {
    ULSxSy: ;
    var strOut = "";
    var strByte = "";
    var ix = 0;
    var strEscaped = " \"%<>\'&";
    if (typeof(str) == "undefined")
        return "";
    for (ix = 0; ix < str.length; ix++) {
        var charCode = str.charCodeAt(ix);
        var curChar = str.charAt(ix);
        if (bAsUrl && (curChar == '#' || curChar == '?')) {
            strOut += str.substr(ix);
            break;
        }
        if (bForFilterQuery && curChar == '&') {
            strOut += curChar;
            continue;
        }
        if (charCode <= 0x7f) {
            if (bForCallback) {
                strOut += curChar;
            } else {
                if ((charCode >= 97 && charCode <= 122) ||
                    (charCode >= 65 && charCode <= 90) ||
                    (charCode >= 48 && charCode <= 57) ||
                    (bAsUrl && (charCode >= 32 && charCode <= 95) && strEscaped.indexOf(curChar) < 0)) {
                    strOut += curChar;
                } else if (charCode <= 0x0f) {
                    strOut += "%0" + charCode.toString(16).toUpperCase();
                } else if (charCode <= 0x7f) {
                    strOut += "%" + charCode.toString(16).toUpperCase();
                }
            }
        } else if (charCode <= 0x07ff) {
            strByte = UTF8_1ST_OF_2 | (charCode >> 6);
            strOut += "%" + strByte.toString(16).toUpperCase();
            strByte = UTF8_TRAIL | (charCode & 0x003f);
            strOut += "%" + strByte.toString(16).toUpperCase();
        } else if ((charCode & SURROGATE_6_BIT) != HIGH_SURROGATE_BITS) {
            strByte = UTF8_1ST_OF_3 | (charCode >> 12);
            strOut += "%" + strByte.toString(16).toUpperCase();
            strByte = UTF8_TRAIL | ((charCode & 0x0fc0) >> 6);
            strOut += "%" + strByte.toString(16).toUpperCase();
            strByte = UTF8_TRAIL | (charCode & 0x003f);
            strOut += "%" + strByte.toString(16).toUpperCase();
        } else if (ix < str.length - 1) {
            var charCode = (charCode & 0x03FF) << 10;
            ix++;
            var nextCharCode = str.charCodeAt(ix);
            charCode |= nextCharCode & 0x03FF;
            charCode += SURROGATE_OFFSET;
            strByte = UTF8_1ST_OF_4 | (charCode >> 18);
            strOut += "%" + strByte.toString(16).toUpperCase();
            strByte = UTF8_TRAIL | ((charCode & 0x3f000) >> 12);
            strOut += "%" + strByte.toString(16).toUpperCase();
            strByte = UTF8_TRAIL | ((charCode & 0x0fc0) >> 6);
            strOut += "%" + strByte.toString(16).toUpperCase();
            strByte = UTF8_TRAIL | (charCode & 0x003f);
            strOut += "%" + strByte.toString(16).toUpperCase();
        }
    }
    return strOut;
}

function escapeProperly(str) {
    ULSxSy: ;
    return escapeProperlyCoreCore(str, false, false, false);
}

function escapeProperlyCore(str, bAsUrl) {
    ULSxSy: ;
    return escapeProperlyCoreCore(str, bAsUrl, false, false);
}

function escapeUrlForCallback(str) {
    ULSxSy: ;
    var iPound = str.indexOf("#");
    var iQues = str.indexOf("?");
    if ((iPound > 0) && ((iQues == -1) || (iPound < iQues))) {
        var strNew = str.substr(0, iPound);
        if (iQues > 0) {
            strNew += str.substr(iQues);
        }
        str = strNew;
    }
    return escapeProperlyCoreCore(str, true, false, true);
}

function PageUrlValidation(url) {
    ULSxSy: ;
    if ((url.substr(0, 4) == "http") ||
        (url.substr(0, 1) == "/") ||
        (url.indexOf(":") == -1)) {
        return url;
    } else {
        var L_InvalidPageUrl_Text = "Invalid page URL: ";
        alert(L_InvalidPageUrl_Text);
        return "";
    }
}

function SelectRibbonTab(tabId, force) {
    ULSxSy: ;
    var ribbon = null;
    try {
        ribbon = SP.Ribbon.PageManager.get_instance().get_ribbon();
    } catch (e) {}
    if (!ribbon) {
        if (typeof(_ribbonStartInit) == "function")
            _ribbonStartInit(tabId, false, null);
    } else if (force || ribbon.get_selectedTabId() == "Ribbon.Read") {
        ribbon.selectTabById(tabId);
    }
}

function FV4UI() {
    ULSxSy: ;
    return typeof(_fV4UI) != "undefined" && _fV4UI;
}
var itemTable = null;
var currentCtx = null;
var g_OfflineClient = null;

function TakeOfflineDisabled(scope, siteTemplateId, listBaseType, listTemplateType) {
    ULSxSy: ;
    try {
        if (g_OfflineClient == null) {
            if (document.cookie.indexOf("OfflineClientInstalled") == -1) {
                if (IsSupportedMacBrowser())
                    g_OfflineClient = CreateMacPlugin();
                else
                    g_OfflineClient = new ActiveXObject("SharePoint.OfflineClient");
                document.cookie = "OfflineClientInstalled=1";
            } else {
                if (GetCookie("OfflineClientInstalled") == "1") {
                    if (IsSupportedMacBrowser())
                        g_OfflineClient = CreateMacPlugin();
                    else
                        g_OfflineClient = new ActiveXObject("SharePoint.OfflineClient");
                }
            }
        }
        if (g_OfflineClient != null &&
            g_OfflineClient.IsOfflineAllowed(scope, siteTemplateId, listBaseType, listTemplateType)) {
            return false;
        } else {
            return true;
        };
    } catch (e) {
        document.cookie = "OfflineClientInstalled=0";
        g_OfflineClient = null;
    }
    return true;
}

function GoToHistoryLink(elm, strVersion) {
    ULSxSy: ;
    if (elm.href == null)
        return;
    var targetUrl = elm.href;
    var ch = elm.href.indexOf("?") >= 0 ? "&" : "?";
    var srcUrl = ch + "VersionNo=" + strVersion;
    var srcSourceUrl = GetSource();
    if (srcSourceUrl != null && srcSourceUrl != "")
        srcSourceUrl = "&" + "Source=" + srcSourceUrl;
    var targetUrl = elm.href + srcUrl + srcSourceUrl;
    if (isPortalTemplatePage(targetUrl))
        window.top.location = STSPageUrlValidation(targetUrl);
    else
        window.location = STSPageUrlValidation(targetUrl);
}

function GetGotoLinkUrl(elm) {
    ULSxSy: ;
    if (elm.href == null)
        return null;
    var ch = elm.href.indexOf("?") >= 0 ? "&" : "?";
    var srcUrl = GetSource();
    if (srcUrl != null && srcUrl != "")
        srcUrl = ch + "Source=" + srcUrl;
    var targetUrl = elm.href + srcUrl;
    return targetUrl;
}

function GoToLink(elm) {
    ULSxSy: ;
    var targetUrl = GetGotoLinkUrl(elm);
    if (targetUrl == null)
        return;
    if (isPortalTemplatePage(targetUrl))
        window.top.location = STSPageUrlValidation(targetUrl);
    else
        window.location = STSPageUrlValidation(targetUrl);
}

function GoToLinkOrDialogNewWindow(elm) {
    ULSxSy: ;
    if (elm.href == null)
        return;
    if (window.location.search.match("[?&]IsDlg=1"))
        window.open(elm.href);
    else
        GoToLink(elm);
}

function GoToDiscussion(url) {
    ULSxSy: ;
    var ch = url.indexOf("?") >= 0 ? "&" : "?";
    var srcUrl = GetSource();
    if (srcUrl != null && srcUrl != "")
        url += ch + "TopicsView=" + srcUrl;
    STSNavigate(url);
}

function GetCurrentEltStyle(element, cssStyle) {
    ULSxSy: ;
    if (element.currentStyle)
        return element.currentStyle[cssStyle];
    else {
        if (window && window.getComputedStyle) {
            var compStyle = window.getComputedStyle(element, null);
            if (compStyle && compStyle.getPropertyValue) {
                return compStyle.getPropertyValue(cssStyle);
            }
        } else {
            return null;
        }
    }
}

function EEDecodeSpecialChars(str) {
    ULSxSy: ;
    var decodedStr = str.replace(/&quot;/g, "\"");
    decodedStr = decodedStr.replace(/&gt;/g, ">");
    decodedStr = decodedStr.replace(/&lt;/g, "<");
    decodedStr = decodedStr.replace(/&#39;/g, "'");
    decodedStr = decodedStr.replace(/&amp;/g, "&");
    return decodedStr;
}

function DeferCall() {
    ULSxSy: ;
    if (arguments.length == 0)
        return null;
    var args = arguments;
    var fn = null;
    if (browseris.ie5up || browseris.nav6up) {
        eval("if (typeof(" + args[0] + ")=='function') { fn=" + args[0] + "; }");
    }
    if (fn == null)
        return null;
    if (args.length == 1) return fn();
    else if (args.length == 2) return fn(args[1]);
    else if (args.length == 3) return fn(args[1], args[2]);
    else if (args.length == 4) return fn(args[1], args[2], args[3]);
    else if (args.length == 5) return fn(args[1], args[2], args[3], args[4]);
    else if (args.length == 6) return fn(args[1], args[2], args[3], args[4], args[5]);
    else if (args.length == 7) return fn(args[1], args[2], args[3], args[4], args[5], args[6]);
    else if (args.length == 8) return fn(args[1], args[2], args[3], args[4], args[5], args[6], args[7]);
    else if (args.length == 9) return fn(args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);
    else if (args.length == 10) return fn(args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);
    else {
        var L_TooManyDefers_Text = "Too many arguments passed to DeferCall";
        alert(L_TooManyDefers_Text);
    }
    return null;
}
var L_ContainIllegalChar_Text = "^1 contains illegal character \'^2\'.";
var L_ContainIllegalString_Text = "^1 contains illegal characters or substring.";
var LegalUrlChars = new Array(
    false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
    true, true, false, false, true, false, false, true, true, true, false, true, true, true, true, true,
    true, true, true, true, true, true, true, true, true, true, false, true, false, true, false, false,
    true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true,
    true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true,
    true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true,
    true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
);

function AdmBuildParam(stPattern) {
    ULSxSy: ;
    var re;
    var i;
    for (i = 1; i < AdmBuildParam.arguments.length; i++) {
        re = new RegExp("\\^" + i);
        stPattern = stPattern.replace(re, AdmBuildParam.arguments[i]);
    }
    return stPattern;
}

function IndexOfIllegalCharInUrlLeafName(strLeafName) {
    ULSxSy: ;
    for (var i = 0; i < strLeafName.length; i++) {
        var ch = strLeafName.charCodeAt(i);
        if (strLeafName.charAt(i) == '.' && (i == 0 || i == (strLeafName.length - 1)))
            return i;
        if (ch < 160 && (strLeafName.charAt(i) == '/' || !LegalUrlChars[ch]))
            return i;
    }
    return -1;
}

function IndexOfIllegalCharInUrlPath(strPath) {
    ULSxSy: ;
    for (var i = 0; i < strPath.length; i++) {
        var ch = strPath.charCodeAt(i);
        if (ch < 160 && !LegalUrlChars[ch])
            return i;
    }
    return -1;
}

function UrlContainsIllegalStrings(strPath) {
    ULSxSy: ;
    if (strPath.indexOf("..") >= 0 || strPath.indexOf("//") >= 0 || strPath.indexOf("./") >= 0 || strPath.indexOf("/.") >= 0 || strPath.indexOf(".") == 0 || strPath.lastIndexOf(".") == (strPath.length - 1)) {
        return true;
    }
    return false;
}

function UrlLeafNameValidate(source, args) {
    ULSxSy: ;
    var strMessagePrefix = "";
    if (typeof(source.MessagePrefix) == "string") {
        strMessagePrefix = source.MessagePrefix;
    } else {
        strMessagePrefix = source.id;
    }
    var i = IndexOfIllegalCharInUrlLeafName(args.Value);
    if (i >= 0) {
        if (typeof(source.errormessage) == "string") {
            source.errormessage = AdmBuildParam(L_ContainIllegalChar_Text, strMessagePrefix, args.Value.charAt(i));
        }
        args.IsValid = false;
    } else if (UrlContainsIllegalStrings(args.Value)) {
        if (typeof(source.errormessage) == "string") {
            source.errormessage = AdmBuildParam(L_ContainIllegalString_Text, strMessagePrefix);
        }
        args.IsValid = false;
    } else {
        args.IsValid = true;
    }
}

function UrlPathValidate(source, args) {
    ULSxSy: ;
    var strMessagePrefix = "";
    if (typeof(source.MessagePrefix) == "string") {
        strMessagePrefix = source.MessagePrefix;
    } else {
        strMessagePrefix = source.id;
    }
    var i = IndexOfIllegalCharInUrlPath(args.Value);
    if (i >= 0) {
        if (typeof(source.errormessage) == "string") {
            source.errormessage = AdmBuildParam(L_ContainIllegalChar_Text, strMessagePrefix, args.Value.charAt(i));
        }
        args.IsValid = false;
    } else if (UrlContainsIllegalStrings(args.Value)) {
        if (typeof(source.errormessage) == "string") {
            source.errormessage = AdmBuildParam(L_ContainIllegalString_Text, strMessagePrefix);
        }
        args.IsValid = false;
    } else {
        args.IsValid = true;
    }
}

function IsCheckBoxListSelected(checkboxlist) {
    ULSxSy: ;
    if (checkboxlist == null)
        return false;
    var len = checkboxlist.length;
    if (len == null) {
        return checkboxlist.checked;
    } else {
        for (var i = 0; i < len; i++) {
            if (checkboxlist[i].checked) {
                return true;
            }
        }
    }
    return false;
}

function STSValidatorEnable(val, bEnable, bSilent) {
    ULSxSy: ;
    var objVal = document.getElementById(val);
    if (objVal == null)
        return;
    if (bSilent == true || (objVal.getAttribute("AlwaysEnableSilent") == true)) {
        objVal.enabled = (bEnable == true);
    } else {
        ValidatorEnable(objVal, bEnable);
    }
}
if (typeof(Sys) != "undefined" && Sys && Sys.Application) {
    Sys.Application.notifyScriptLoaded();
}
if (typeof(NotifyScriptLoadedAndExecuteWaitingJobs) == "function") {
    NotifyScriptLoadedAndExecuteWaitingJobs("commonvalidation.js");
}

function encodeScriptQuote(str) {
    ULSxSy: ;
    var strIn = new String(str);
    var strOut = new Array();
    var ix = 0;
    var max = strIn.length;
    for (ix = 0; ix < max; ix++) {
        var ch = strIn.charAt(ix);
        strOut.push(ch == '\'' ? "%27" : ch);
    }
    return strOut.join('');
}

function STSHtmlEncode(str) {
    ULSxSy: ;
    if (null == str || typeof(str) == 'undefined')
        return "";
    var strIn = new String(str);
    var strOut = new Array();
    var ix = 0;
    var max = strIn.length;
    for (ix = 0; ix < max; ix++) {
        var ch = strIn.charAt(ix);
        switch (ch) {
            case '<':
                strOut.push("&lt;");
                break;
            case '>':
                strOut.push("&gt;");
                break;
            case '&':
                strOut.push("&amp;");
                break;
            case '\"':
                strOut.push("&quot;");
                break;
            case '\'':
                strOut.push("&#39;");
                break;
            default:
                strOut.push(ch);
                break;
        }
    }
    return strOut.join('');
}

function StAttrQuote(st) {
    ULSxSy: ;
    st = st.toString();
    st = st.replace(/&/g, '&amp;');
    st = st.replace(/\"/g, '&quot;'); // "
    st = st.replace(/\r/g, '&#13;');
    return '"' + st + '"';
}

function STSScriptEncode(str) {
    ULSxSy: ;
    if (null == str || typeof(str) == 'undefined')
        return "";
    var strIn = new String(str);
    var strOut = new Array();
    var ix = 0;
    var max = strIn.length;
    for (ix = 0; ix < max; ix++) {
        var charCode = strIn.charCodeAt(ix);
        if (charCode > 0x0fff) {
            strOut.push("\\u" + charCode.toString(16).toUpperCase());
        } else if (charCode > 0x00ff) {
            strOut.push("\\u0" + charCode.toString(16).toUpperCase());
        } else if (charCode > 0x007f) {
            strOut.push("\\u00" + charCode.toString(16).toUpperCase());
        } else {
            var c = strIn.charAt(ix);
            switch (c) {
                case '\n':
                    strOut.push("\\n");
                    break;
                case '\r':
                    strOut.push("\\r");
                    break;
                case '\"':
                    strOut.push("\\u0022");
                    break;
                case '%':
                    strOut.push("\\u0025");
                    break;
                case '&':
                    strOut.push("\\u0026");
                    break;
                case '\'':
                    strOut.push("\\u0027");
                    break;
                case '(':
                    strOut.push("\\u0028");
                    break;
                case ')':
                    strOut.push("\\u0029");
                    break;
                case '+':
                    strOut.push("\\u002b");
                    break;
                case '/':
                    strOut.push("\\u002f");
                    break;
                case '<':
                    strOut.push("\\u003c");
                    break;
                case '>':
                    strOut.push("\\u003e");
                    break;
                case '\\':
                    strOut.push("\\\\");
                    break;
                default:
                    strOut.push(c);
            };
        }
    }
    return strOut.join('');
}

function STSScriptEncodeWithQuote(str) {
    ULSxSy: ;
    return '"' + STSScriptEncode(str) + '"';
}
var L_Language_Text = "1033";
var L_ClickOnce1_text = "You are already attempting to save this item. If you attempt to save this item again, you may create duplicate information. Would you like to save this item again?";
var L_STSRecycleConfirm_Text = "Are you sure you want to send the item(s) to the site Recycle Bin?";
var L_STSRecycleConfirm1_Text = "Are you sure you want to send this folder and all its contents to the site Recycle Bin?";
var L_STSRecycleConfirm2_Text = "Are you sure you want to send this Document Collection and all its contents to the site Recycle Bin?";
var L_STSDelConfirm_Text = "Are you sure you want to permanently delete the item(s)?";
var L_STSDelConfirm1_Text = "Are you sure you want to permanently delete this folder and all its contents?";
var L_STSDelConfirm2_Text = "Are you sure you want to permanently delete this Document Collection and all its contents?";
var L_NewDocLibTb1_Text = "The document could not be created. \nThe required application may not be installed properly, or the template for this document library cannot be opened.\n\nPlease try the following:\n1. Check the General Settings for this document library for the name of the template, and install the application necessary for opening the template. If the application was set to install on first use, run the application and then try creating a new document again.\n\n2.  If you have permission to modify this document library, go to General Settings for the library and configure a new template.";
var L_NewDocLibTb2_Text = "'New Document' requires a Microsoft SharePoint Foundation-compatible application and web browser. To add a document to this document library, click the 'Upload Document' button.";
var L_CheckoutConfirm = "You are about to check out the selected file(s).";
var L_DiscardCheckoutConfirm = "You are about to discard any changes made to the selected checked out file(s).";
var L_NewFormLibTb1_Text = "The document could not be created.\nThe required application may not be installed properly, or the template for this document library cannot be opened.\n\nPlease try the following:\n1. Check the General Settings for this document library for the name of the template, and install the application necessary for opening the template. If the application was set to install on first use, run the application and then try creating a new document again.\n\n2.  If you have permission to modify this document library, go to General Settings for the library and configure a new template.";
var L_NewFormLibTb2_Text = "This feature requires Microsoft Internet Explorer 7.0 or later and a Microsoft SharePoint Foundation-compatible XML editor such as Microsoft InfoPath.";
var L_ConfirmCheckout_Text = "You must check out this item before making changes.  Do you want to check out this item now?";
var L_MustCheckout_Text = "You must check out this item before making changes.";
var L_CheckOutRetry_Text = "Check out failed, do you want to retry to check out from server?";
var L_CannotEditPropertyForLocalCopy_Text = "You cannot edit the properties of a document while it is checked out and being modified offline.";
var L_CannotEditPropertyCheckout_Text = "You cannot edit the properties of this document while it is checked out or locked for editing by another user.";
var L_NewFormClickOnce1_Text = "New Folder";
var L_EnterValidCopyDest_Text = "Please enter a valid folder URL and a file name.  Folder URLs must begin with 'http:' or 'https:'.";
var L_ConfirmUnlinkCopy_Text = "Because this item is a copy, it may still be receiving updates from its source.  You should make sure that this item is removed from the source's list of items to update, otherwise this item may continue to receive updates.  Are you sure that you want to unlink this item?";
var L_CopyingOfflineVersionWarning_Text = "You currently have this document checked out locally.  Only versions stored on the server can be copied.  To copy the most recent minor version, click OK.  To copy the currently checked out version, click Cancel, check in the document and then retry the copy operation.";
var L_Loading_Text = "Loading...";
var L_Loading_Error_Text = "An error has occurred with the data fetch.  Please refresh the page and retry.";
var L_Inplview_PageNotYetSaved = "page not yet saved";
var L_WarnkOnce_text = "This item contains a custom recurrence pattern.  If you save your changes you will not be able to revert to the previous pattern.";
var L_WebFoldersRequired_Text = "Please wait while Explorer View is loaded. If Explorer View does not appear, your browser may not support it.";
var L_WebFoldersError_Text = "Your client does not support opening this list with Windows Explorer.";
var L_NoExplorerView_Text = "To view your documents, please navigate to the library and select the 'Open with Explorer' action. If the 'Open with Explorer' action is not available, then your system may not support it.";
var L_WikiWebPartNoClosedOrUploaded = "Closed Web Parts and Uploaded Web Parts are not supported.";
var L_AccessibleMenu_Text = "Menu";
var L_SubMenu_Text = "Submenu";
var L_NewBlogPost_Text = "This feature requires Microsoft Internet Explorer 7.0 or later and a Microsoft SharePoint Foundation-compatible blog editor such as Microsoft Word 2007 or later.";
var L_NewBlogPostFailed_Text = "Unable to connect to the blog program because it may be busy or missing. Check the program, and then try again.";
var recycleBinEnabled = 0;
var cascadeDeleteWarningMessage = "";
var bIsFileDialogView = false;
var g_ViewIdToViewCounterMap = new Array();
var g_ctxDict = new Array();

function NotifyBrowserOfAsyncUpdate(container) {
    ULSxSy: ;
    var iframeName = '__spAjaxIframe',
        iframe = document.getElementById(iframeName);
    if (iframe == null) {
        iframe = document.createElement('IFRAME');
        iframe.name = iframe.id = iframeName;
        iframe.width = iframe.height = 0;
        iframe.src = 'about:blank';
        iframe.style.display = 'none';
        document.body.appendChild(iframe);
    }
    iframe.contentWindow.document.location.replace('/_layouts/images/blank.gif');
}

function UpdateAccessibilityUI() {
    ULSxSy: ;
    var t1 = document.getElementById("TurnOnAccessibility");
    var t2 = document.getElementById("TurnOffAccessibility");
    if (IsAccessibilityFeatureEnabled()) {
        if (t1 != null)
            t1.style.display = "none";
        if (t2 != null)
            t2.style.display = "";
    } else {
        if (t1 != null)
            t1.style.display = "";
        if (t2 != null)
            t2.style.display = "none";
    }
}

function SetIsAccessibilityFeatureEnabled(f) {
    ULSxSy: ;
    if (f)
        document.cookie = "WSS_AccessibilityFeature=true;path=/;";
    else
        document.cookie = "WSS_AccessibilityFeature=false;path=/;";
    var hiddenAnchor = document.getElementById("HiddenAnchor");
    var event;
    if (browseris.ie)
        event = {
            "srcElement": hiddenAnchor,
            "fakeEvent": 1,
            "enableStatus": f
        };
    else
        event = {
            "target": hiddenAnchor,
            "fakeEvent": 1,
            "enableStatus": f
        };
    if (hiddenAnchor == null || hiddenAnchor.onclick == null)
        return;
    hiddenAnchor.onclick(event);
}

function DeleteCookie(sName) {
    ULSxSy: ;
    document.cookie = sName + "=; expires=Thu, 01-Jan-70 00:00:01 GMT";
}

function GetCookie(sName) {
    ULSxSy: ;
    var aCookie = document.cookie.split("; ");
    for (var i = 0; i < aCookie.length; i++) {
        var aCrumb = aCookie[i].split("=");
        if (sName == aCrumb[0]) {
            if (aCrumb.length > 1)
                return unescapeProperly(aCrumb[1]);
            else
                return null;
        }
    }
    return null;
}

function IsAccessibilityFeatureEnabled() {
    ULSxSy: ;
    return GetCookie("WSS_AccessibilityFeature") == "true";
}

function escapeForSync(str) {
    ULSxSy: ;
    var strOut = "";
    var ix = 0;
    var bDoingUnicode = 0;
    var strSyncEscaped = "\\&|[]";
    for (ix = 0; ix < str.length; ix++) {
        var charCode = str.charCodeAt(ix);
        var curChar = str.charAt(ix);
        if (bDoingUnicode && charCode <= 0x7f) {
            strOut += "]";
            bDoingUnicode = 0;
        }
        if (!bDoingUnicode && charCode > 0x7f) {
            strOut += "[";
            bDoingUnicode = 1;
        }
        if (strSyncEscaped.indexOf(curChar) >= 0)
            strOut += "|";
        if ((charCode >= 97 && charCode <= 122) ||
            (charCode >= 65 && charCode <= 90) ||
            (charCode >= 48 && charCode <= 57)) {
            strOut += curChar;
        } else if (charCode <= 0x0f) {
            strOut += "%0" + charCode.toString(16).toUpperCase();
        } else if (charCode <= 0x7f) {
            strOut += "%" + charCode.toString(16).toUpperCase();
        } else if (charCode <= 0x00ff) {
            strOut += "00" + charCode.toString(16).toUpperCase();
        } else if (charCode <= 0x0fff) {
            strOut += "0" + charCode.toString(16).toUpperCase();
        } else {
            strOut += charCode.toString(16).toUpperCase();
        }
    }
    if (bDoingUnicode)
        strOut += "]";
    return strOut;
}
var g_rgdwchMinEncoded = new Array([
    0x00000000,
    0x00000080,
    0x00000800,
    0x00010000,
    0x00200000,
    0x04000000,
    0x80000000
]);

function Vutf8ToUnicode(rgBytes) {
    ULSxSy: ;
    var ix = 0;
    var strResult = "";
    var dwch, wch, uch;
    var nTrailBytes, nTrailBytesOrig;
    while (ix < rgBytes.length) {
        if (rgBytes[ix] <= 0x007f) {
            strResult += String.fromCharCode(rgBytes[ix++]);
        } else {
            uch = rgBytes[ix++];
            nTrailBytes = ((uch) & 0x20) ? (((uch) & 0x10) ? 3 : 2) : 1;
            nTrailBytesOrig = nTrailBytes;
            dwch = uch & (0xff >>> (2 + nTrailBytes));
            while (nTrailBytes && (ix < rgBytes.length)) {
                --nTrailBytes;
                uch = rgBytes[ix++];
                if (uch == 0) {
                    return strResult;
                }
                if ((uch & 0xC0) != 0x80) {
                    strResult += '?';
                    break;
                }
                dwch = (dwch << 6) | ((uch) & 0x003f);
            }
            if (nTrailBytes) {
                strResult += '?';
                break;
            }
            if (dwch < g_rgdwchMinEncoded[nTrailBytesOrig]) {
                strResult += '?';
                break;
            } else if (dwch <= 0xffff) {
                strResult += String.fromCharCode(dwch);
            } else if (dwch <= 0x10ffff) {
                dwch -= SURROGATE_OFFSET;
                strResult += String.fromCharCode(
                    HIGH_SURROGATE_BITS | dwch >>> 10);
                strResult += String.fromCharCode(
                    LOW_SURROGATE_BITS | ((dwch) & 0x003FF));
            } else {
                strResult += '?';
            }
        }
    }
    return strResult;
}

function unescapeProperlyInternal(str) {
    ULSxSy: ;
    if (str == null)
        return "null";
    var ix = 0,
        ixEntity = 0;
    var strResult = "";
    var rgUTF8Bytes = new Array;
    var ixUTF8Bytes = 0;
    var hexString, hexCode;
    while (ix < str.length) {
        if (str.charAt(ix) == '%') {
            if (str.charAt(++ix) == 'u') {
                hexString = "";
                for (ixEntity = 0; ixEntity < 4 && ix < str.length; ++ixEntity) {
                    hexString += str.charAt(++ix);
                }
                while (hexString.length < 4) {
                    hexString += '0';
                }
                hexCode = parseInt(hexString, 16);
                if (isNaN(hexCode)) {
                    strResult += '?';
                } else {
                    strResult += String.fromCharCode(hexCode);
                }
            } else {
                hexString = "";
                for (ixEntity = 0; ixEntity < 2 && ix < str.length; ++ixEntity) {
                    hexString += str.charAt(ix++);
                }
                while (hexString.length < 2) {
                    hexString += '0';
                }
                hexCode = parseInt(hexString, 16);
                if (isNaN(hexCode)) {
                    if (ixUTF8Bytes) {
                        strResult += Vutf8ToUnicode(rgUTF8Bytes);
                        ixUTF8Bytes = 0;
                        rgUTF8Bytes.length = ixUTF8Bytes;
                    }
                    strResult += '?';
                } else {
                    rgUTF8Bytes[ixUTF8Bytes++] = hexCode;
                }
            }
        } else {
            if (ixUTF8Bytes) {
                strResult += Vutf8ToUnicode(rgUTF8Bytes);
                ixUTF8Bytes = 0;
                rgUTF8Bytes.length = ixUTF8Bytes;
            }
            strResult += str.charAt(ix++);
        }
    }
    if (ixUTF8Bytes) {
        strResult += Vutf8ToUnicode(rgUTF8Bytes);
        ixUTF8Bytes = 0;
        rgUTF8Bytes.length = ixUTF8Bytes;
    }
    return strResult;
}

function unescapeProperly(str) {
    ULSxSy: ;
    var strResult = null;
    if ((browseris.ie55up || browseris.nav6up) &&
        (typeof(decodeURIComponent) != "undefined")) {
        strResult = decodeURIComponent(str);
    } else {
        strResult = unescapeProperlyInternal(str);
    }
    return strResult;
}

function navigateMailToLink(strBody) {
    ULSxSy: ;
    window.location = 'mailto:?body=' + escapeProperly(strBody);
}

function navigateMailToLinkWithMessage(strTo, strBody) {
    ULSxSy: ;
    window.location = 'mailto:' + escapeProperly(strTo) + '?body=' + escapeProperly(escapeProperlyCoreCore(strBody, false, false, true));
}

function newBlogPostOnClient(strProviderId, strBlogUrl, strBlogName) {
    ULSxSy: ;
    var stsOpen;
    var fRet;
    stsOpen = StsOpenEnsureEx("SharePoint.OpenDocuments.3");
    if (stsOpen == null) {
        alert(L_NewBlogPost_Text);
        return;
    }
    try {
        fRet = stsOpen.NewBlogPost(strProviderId, strBlogUrl, strBlogName);
    } catch (e) {
        alert(L_NewBlogPostFailed_Text);
    }
}

function GetUrlFromWebUrlAndWebRelativeUrl(webUrl, webRelativeUrl) {
    ULSxSy: ;
    var retUrl = (webUrl == null || webUrl.length <= 0) ? "/" : webUrl;
    if (retUrl.charAt(retUrl.length - 1) != "/") {
        retUrl += "/";
    }
    retUrl += webRelativeUrl;
    return retUrl;
}
var g_updateFormDigestPageLoaded = new Date();

function UpdateFormDigest(serverRelativeWebUrl, updateInterval) {
    ULSxSy: ;
    try {
        if ((g_updateFormDigestPageLoaded == null) || (typeof(g_updateFormDigestPageLoaded) != "object")) {
            return;
        }
        var now = new Date();
        if (now.getTime() - g_updateFormDigestPageLoaded.getTime() < updateInterval) {
            return;
        }
        if ((serverRelativeWebUrl == null) || (serverRelativeWebUrl.length <= 0)) {
            return;
        }
        var formDigestElement = document.getElementsByName("__REQUESTDIGEST")[0];
        if ((formDigestElement == null) || (formDigestElement.tagName.toLowerCase() != "input") || (formDigestElement.type.toLowerCase() != "hidden") ||
            (formDigestElement.value == null) || (formDigestElement.value.length <= 0)) {
            return;
        }
        var request = null;
        try {
            request = new ActiveXObject("Msxml2.XMLHTTP");
        } catch (ex) {
            request = null;
        }
        if (request == null) {
            try {
                request = new XMLHttpRequest();
            } catch (ex) {
                request = null;
            }
        }
        if (request == null) {
            return;
        }
        request.open("POST", GetUrlFromWebUrlAndWebRelativeUrl(serverRelativeWebUrl, "_vti_bin/sites.asmx"), false);
        request.setRequestHeader("Content-Type", "text/xml");
        request.setRequestHeader("SOAPAction", "http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigest");
        request.send("<?xml version=\"1.0\" encoding=\"utf-8\"?>" + "<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">" + "  <soap:Body>" + "    <GetUpdatedFormDigest xmlns=\"http://schemas.microsoft.com/sharepoint/soap/\" />" + "  </soap:Body>" + "</soap:Envelope>");
        var responseText = request.responseText;
        if ((responseText == null) || (responseText.length <= 0)) {
            return;
        }
        var startTag = '<GetUpdatedFormDigestResult>';
        var endTag = '</GetUpdatedFormDigestResult>';
        var startTagIndex = responseText.indexOf(startTag);
        var endTagIndex = responseText.indexOf(endTag, startTagIndex + startTag.length);
        var newFormDigest = null;
        if ((startTagIndex >= 0) && (endTagIndex > startTagIndex)) {
            var newFormDigest = responseText.substring(startTagIndex + startTag.length, endTagIndex);
        }
        if ((newFormDigest == null) || (newFormDigest.length <= 0)) {
            return;
        }
        var oldValue = formDigestElement.value;
        formDigestElement.value = newFormDigest;
        g_updateFormDigestPageLoaded = new Date();
    } catch (ex) {}
}

function IsSupportedFirefoxOnWin() {
    ULSxSy: ;
    return (browseris.winnt || browseris.win32 || browseris.win64bit) && browseris.firefox3up;
}

function IsFirefoxOnWindowsPluginInstalled() {
    ULSxSy: ;
    return navigator.mimeTypes &&
        navigator.mimeTypes["application/x-sharepoint"] &&
        navigator.mimeTypes["application/x-sharepoint"].enabledPlugin;
}

function CreateFirefoxOnWindowsPlugin() {
    ULSxSy: ;
    var plugin = null;
    if (IsSupportedFirefoxOnWin()) {
        try {
            plugin = document.getElementById("winFirefoxPlugin");
            if (!plugin && IsFirefoxOnWindowsPluginInstalled()) {
                var pluginNode = document.createElement("object");
                pluginNode.id = "winFirefoxPlugin";
                pluginNode.type = "application/x-sharepoint";
                pluginNode.width = 0;
                pluginNode.height = 0;
                pluginNode.style.setProperty("visibility", "hidden", "");
                document.body.appendChild(pluginNode);
                plugin = document.getElementById("winFirefoxPlugin");
            }
        } catch (e) {
            plugin = null;
        }
    }
    return plugin;
}

function IsSupportedMacBrowser() {
    ULSxSy: ;
    return browseris.mac && (browseris.firefox3up || browseris.safari3up);
}

function IsBrowserPluginInstalled(mimeType) {
    ULSxSy: ;
    return navigator.mimeTypes &&
        navigator.mimeTypes[mimeType] &&
        navigator.mimeTypes[mimeType].enabledPlugin;
}

function IsMacPluginInstalled() {
    ULSxSy: ;
    var webkitPluginInstalled = IsBrowserPluginInstalled("application/x-sharepoint-webkit");
    var npapiPluginInstalled = IsBrowserPluginInstalled("application/x-sharepoint");
    if (browseris.safari3up && webkitPluginInstalled)
        return true;
    return npapiPluginInstalled;
}

function CreateMacPlugin() {
    ULSxSy: ;
    var plugin = null;
    if (IsSupportedMacBrowser()) {
        plugin = document.getElementById("macSharePointPlugin");
        if (plugin == null && IsMacPluginInstalled()) {
            var pluginMimeType = null;
            if (browseris.safari3up && IsBrowserPluginInstalled("application/x-sharepoint-webkit"))
                pluginMimeType = "application/x-sharepoint-webkit";
            else
                pluginMimeType = "application/x-sharepoint";
            var pluginNode = document.createElement("object");
            pluginNode.id = "macSharePointPlugin";
            pluginNode.type = pluginMimeType;
            pluginNode.width = 0;
            pluginNode.height = 0;
            pluginNode.style.setProperty("visibility", "hidden", "");
            document.body.appendChild(pluginNode);
            plugin = document.getElementById("macSharePointPlugin");
        }
    }
    return plugin;
}
var g_objStssync;

function GetStssyncHandler(szVersion) {
    ULSxSy: ;
    if (!IsSupportedMacBrowser()) {
        try {
            g_objStssync = new ActiveXObject("SharePoint.StssyncHandler" + szVersion);
        } catch (e) {
            g_objStssync = null;
        }
    } else {
        g_objStssync = CreateMacPlugin();
    }
}

function GetStssyncData(strType, strTextDefault, strImgPathDefault, strPrefix) {
    ULSxSy: ;
    var stsSyncData = null;
    if ((document.cookie.indexOf("stsSyncAppName") == -1) && (document.cookie.indexOf("stsSyncIconPath") == -1)) {
        if (IsSupportedMacBrowser()) {
            var plugin = GetStssyncHandler("");
            if (plugin == null || !plugin.StssyncEnabled) {
                document.cookie = "stsSyncAppName=0;";
                document.cookie = "stsSyncIconPath=0;";
                return stsSyncData;
            }
        }
        if ((browseris.ie5up && browseris.win32) || IsSupportedMacBrowser()) {
            var strAppName;
            var strIconName;
            if (strType != "")
                GetStssyncHandler(".3");
            if (!g_objStssync) {
                if (strType != "" && strType != "calendar" && strType != "contacts") {
                    document.cookie = "stsSyncAppName=0;";
                    document.cookie = "stsSyncIconPath=0;";
                    return stsSyncData;
                }
                GetStssyncHandler(".2");
                if (!g_objStssync || !(strAppName = g_objStssync.GetStssyncAppName())) {
                    document.cookie = "stsSyncAppName=0;";
                    document.cookie = "stsSyncIconPath=0;";
                    return stsSyncData;
                }
            } else {
                if (!(strAppName = g_objStssync.GetStssyncAppNameForType(strType))) {
                    document.cookie = "stsSyncAppName=0;";
                    document.cookie = "stsSyncIconPath=0;";
                    return stsSyncData;
                }
            }
            document.cookie = "stsSyncAppName=" + escapeProperly(strAppName) + ";";
            try {
                strIconName = g_objStssync.GetStssyncIconName();
                strIconName = strPrefix + strIconName;
                document.cookie = "stsSyncIconPath=" + escapeProperly(strIconName) + ";";
            } catch (e) {
                document.cookie = "stsSyncIconPath=0;";
                strIconName = strImgPathDefault;
            }
        } else {
            strAppName = strTextDefault;
            strIconName = strImgPathDefault;
            document.cookie = "stsSyncAppName=" + escapeProperly(strTextDefault);
            document.cookie = "stsSyncIconPath=" + escapeProperly(strImgPathDefault);
        }
    } else {
        strAppName = GetCookie("stsSyncAppName");
        strIconName = GetCookie("stsSyncIconPath");
        if (strAppName == '0') {
            return stsSyncData;
        }
    }
    var L_LinkToBefore_Text = "Connect to ";
    var L_LinkToAfter_Text = "";
    strAppName = L_LinkToBefore_Text + strAppName + L_LinkToAfter_Text;
    stsSyncData = new Object();
    stsSyncData.BtnText = strAppName;
    stsSyncData.BtnImagePath = strIconName;
    return stsSyncData;
}

function GetStssyncAppName(strDefault) {
    ULSxSy: ;
    var stsSyncData = GetStssyncData("", strDefault, "", "");
    return stsSyncData.BtnText;
}

function makeAbsUrl(strUrl) {
    ULSxSy: ;
    if (strUrl.length > 0 && "/" == strUrl.substr(0, 1)) {
        strUrl = window.location.protocol + "//" + window.location.host + strUrl;
    }
    return strUrl;
}

function ExportHailStorm(type, weburl, guid, webname, listname, viewurl, passport, listrooturl, folderurl, folderid) {
    ULSxSy: ;
    var strAppName = GetCookie("stsSyncAppName");
    var strIconName = GetCookie("stsSyncIconPath");
    if (strAppName != null && strAppName != '0') {
        var maxLinkLength = 500;
        var maxNameLength = 20;
        var link = "stssync://sts/?ver=1.1" + "&type=" + escapeProperly(type) + "&cmd=add-folder" + "&base-url=" + escapeForSync(weburl) + "&list-url=" + escapeForSync("/" + makeAbsUrl(viewurl).substr(weburl.length + 1) + "/") + "&guid=" + escapeProperly(guid);
        if (window.self.offlineBtnUser != undefined)
            link += "&user-id=" + offlineBtnUser;
        var names = "&site-name=" + escapeForSync(webname) + "&list-name=" + escapeForSync(listname);
        var context = "";
        if (folderurl)
            context += "&folder-url=" + escapeForSync("/" + folderurl.substr(listrooturl.length + 1));
        if (folderid)
            context += "&folder-id=" + folderid;
        if (link.length + names.length + context.length > maxLinkLength &&
            (webname.length > maxNameLength || listname.length > maxNameLength)) {
            if (webname.length > maxNameLength)
                webname = webname.substring(0, maxNameLength - 1) + "...";
            if (listname.length > maxNameLength)
                listname = listname.substring(0, maxNameLength - 1) + "...";
            names = "&site-name=" + escapeForSync(webname) + "&list-name=" + escapeForSync(listname);
        }
        link = link + names + context;
        var L_StssyncTooLong_Text = "The title of the site or list is too long. Shorten the title and try again.";
        if (link.length > maxLinkLength)
            alert(L_StssyncTooLong_Text);
        else {
            try {
                window.location.href = link;
            } catch (e) {}
        }
    }
}
var g_objDiagramLaunch;

function GetDiagramLaunchInstalled() {
    ULSxSy: ;
    var strAppName = '';
    if (document.cookie.indexOf("digInstalled") == -1) {
        try {
            g_objDiagramLaunch = new ActiveXObject("DiagramLaunch.DiagramLauncher");
            strAppName = g_objDiagramLaunch.EnsureDiagramApplication();
            document.cookie = "digInstalled=" + escapeProperly(strAppName) + ";";
        } catch (e) {
            g_objDiagramLaunch = null;
            document.cookie = "digInstalled=0;";
        }
    } else {
        strAppName = GetCookie("digInstalled");
        if (strAppName == '0')
            strAppName = '';
    }
    return strAppName;
}
var g_objProjectTaskLaunch = null;

function GetProjectTaskLaunchInstalled() {
    ULSxSy: ;
    if (document.cookie.indexOf("projInstalled") == -1) {
        var strAppName = '';
        try {
            g_objProjectTaskLaunch = new ActiveXObject("TaskLaunch.TaskLauncher");
            strAppName = g_objProjectTaskLaunch.EnsureTaskApplication();
            document.cookie = "projInstalled=" + escapeProperly(strAppName) + ";";
        } catch (e) {
            document.cookie = "projInstalled=0;";
            g_objProjectTaskLaunch = null;
        }
    } else {
        strAppName = GetCookie("projInstalled");
        if (strAppName == '0')
            strAppName = '';
    }
    return strAppName;
}
var g_expDatabase;

function GetDataBaseInstalled() {
    ULSxSy: ;
    var databaseBtnText = '';
    var databaseBtnDesc = '';
    if ((document.cookie.indexOf("databaseBtnText") == -1) || (document.cookie.indexOf("databaseBtnDesc") == -1)) {
        try {
            g_expDatabase = new ActiveXObject('SharePoint.ExportDatabase');
            if (g_expDatabase && g_expDatabase.IsDBProgramInstalled()) {
                document.cookie = "databaseBtnText=" + escapeProperly(g_expDatabase.MenuTitle) + ";";
                document.cookie = "databaseBtnDesc=" + escapeProperly(g_expDatabase.MenuDescription) + ";";
            } else {
                document.cookie = "databaseBtnText=" + '0' + ";";
                document.cookie = "databaseBtnDesc=" + '0' + ";";
                g_expDatabase = null;
            }
        } catch (e) {
            document.cookie = "databaseBtnText=" + '0' + ";";
            document.cookie = "databaseBtnDesc=" + '0' + ";";
            g_expDatabase = null;
        }
    } else {
        databaseBtnText = GetCookie("databaseBtnText");
        databaseBtnDesc = GetCookie("databaseBtnDesc");
        if (databaseBtnText != '0' && databaseBtnText != '0') {
            var dummyExpDatabase = new Object();
            dummyExpDatabase.MenuTitle = databaseBtnText;
            dummyExpDatabase.MenuDescription = databaseBtnDesc;
            return dummyExpDatabase;
        } else {
            g_expDatabase = null;
        }
    }
    return g_expDatabase;
}
var g_ssImporterObj;
var g_fSSImporter = false;

function EnsureSSImportInner() {
    ULSxSy: ;
    if (browseris.ie5up && browseris.win32) {
        try {
            g_ssImporterObj = new ActiveXObject("SharePoint.SpreadsheetLauncher.2");
            if (g_ssImporterObj)
                g_fSSImporter = true;
        } catch (e) {
            try {
                g_ssImporterObj = new ActiveXObject("SharePoint.SpreadsheetLauncher.1");
                if (g_ssImporterObj)
                    g_fSSImporter = true;
            } catch (e) {
                g_fSSImporter = false;
            }
        }
    } else if (IsSupportedMacBrowser()) {
        g_ssImporterObj = CreateMacPlugin();
        if (g_ssImporterObj)
            g_fSSImporter = true;
        else
            g_fSSImporter = false;
    }
}

function EnsureSSImporter(byPassCookies) {
    ULSxSy: ;
    byPassCookies = (typeof(byPassCookies) == undefined) ? false : byPassCookies;
    if (document.cookie.indexOf("EnsureSSImporter") == -1 || byPassCookies) {
        EnsureSSImportInner();
        document.cookie = "EnsureSSImporter=" + g_fSSImporter + ";";
    } else {
        g_fSSImporter = GetCookie("EnsureSSImporter") == "true" ? true : false;
    }
    return g_fSSImporter;
}

function ShowHideSection(sectionid, imgid) {
    ULSxSy: ;
    var group = document.getElementById(sectionid);
    var img = document.getElementById(imgid);
    if ((group == null))
        return;
    if (group.style.display != "none") {
        group.style.display = "none";
        img.src = "/_layouts/images/plus.gif";
    } else {
        group.style.display = "";
        img.src = "/_layouts/images/minus.gif";
    }
}

function ShowSection(sectionid, imgid) {
    ULSxSy: ;
    var group = document.getElementById(sectionid);
    var img = document.getElementById(imgid);
    if ((group == null))
        return;
    if (group.style.display == "none") {
        group.style.display = "";
        img.src = "/_layouts/images/minus.gif";
    }
}

function ShowHideInputFormSection(sectionid, bShow) {
    ULSxSy: ;
    var e = document.getElementById(sectionid);
    if (e != null)
        e.style.display = bShow ? "" : "none";
    for (var i = 1; i < 3; i++) {
        e = document.getElementById(sectionid + "_tablerow" + i);
        if (e != null)
            e.style.display = bShow ? "" : "none";
    }
}

function ShowHideInputFormControl(id, bHide, bDisableValidators, bSilent) {
    ULSxSy: ;
    var displaySetting = "";
    if (bHide == true) {
        displaySetting = "none";
    }
    var validators = eval(id + '_validators');
    if (validators != null) {
        for (var i = 0; i < validators.length; i++) {
            STSValidatorEnable(validators[i], !bDisableValidators, bSilent);
        }
    }
    for (var i = 1; i <= 5; i++) {
        var rowId = id + "_tablerow" + i;
        var row = document.getElementById(rowId);
        if ((row != null) && !browseris.mac) {
            row.style.display = displaySetting;
        }
    }
}

function HideMenuControl(menuControlId) {
    ULSxSy: ;
    if (typeof(menuControlId) == "undefined" || menuControlId == null)
        return;
    var menu = document.getElementById(menuControlId);
    if (typeof(menu) == "undefined" || menu == null)
        return;
    var menuItems = menu.getElementsByTagName("ie:menuitem");
    if (typeof(menuItems) == "undefined" || menuItems == null)
        return;
    for (var i = 0; i < menuItems.length; i++) {
        var menuItem = menuItems[i];
        var hiddenScript = menuItem.getAttribute("hidden");
        if (typeof(hiddenScript) == "undefined" || hiddenScript == null || !eval(hiddenScript))
            return;
    }
    menu.style.display = 'none';
}

function SetControlDisabledStatus(obj, disabledStatus) {
    ULSxSy: ;
    try {
        if (obj.setAttribute)
            obj.setAttribute('disabled', disabledStatus);
        if (!disabledStatus && obj.removeAttribute)
            obj.removeAttribute('disabled');
    } catch (e) {}
}

function SetControlDisabledStatusRecursively(obj, disabledStatus) {
    ULSxSy: ;
    if (obj == null)
        return;
    SetControlDisabledStatus(obj, disabledStatus);
    var objChildren = obj.childNodes;
    for (var i = 0; objChildren.length > i; i++) {
        SetControlDisabledStatusRecursively(objChildren.item(i), disabledStatus);
    }
}

function SetChildControlsDisabledStatus(obj, disabledStatus) {
    ULSxSy: ;
    var objChildren = obj.childNodes;
    for (var i = 0; i < objChildren.length; i++) {
        SetControlDisabledStatusRecursively(objChildren.item(i), disabledStatus);
    }
}
var g_PNGImageIds;
var g_PNGImageSources;

function displayPNGImage(id, src, width, height, alt) {
    ULSxSy: ;
    if (g_PNGImageIds == null)
        g_PNGImageIds = new Array();
    if (g_PNGImageSources == null)
        g_PNGImageSources = new Array();
    var style = null;
    document.write("<IMG id='" + id + "' ");
    if (width && width > 0)
        document.write("width='" + width + "' ");
    if (height && height > 0)
        document.write("height='" + height + "' ");
    document.write("alt='" + alt + "' ");
    if (style)
        document.write("style='" + style + "' ");
    document.write(" src='" + src + "' />");
    g_PNGImageIds.push(id);
    g_PNGImageSources.push(src);
}

function ProcessPNGImages() {
    ULSxSy: ;
    var useFilter = browseris.ie &&
        browseris.ie55up &&
        browseris.verIEFull < 7.0;
    if (g_PNGImageIds != null && useFilter) {
        for (var i = 0; i < g_PNGImageIds.length; i++) {
            var img = document.getElementById(g_PNGImageIds[i]);
            if (img != null && g_PNGImageSources[i] != null) {
                img.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src=" + g_PNGImageSources[i] + "),sizingMethod=scale);";
                img.src = "/_layouts/images/blank.gif";
            }
        }
    }
}
var CTXTYPE_EDITMENU = 0;
var CTXTYPE_VIEWSELECTOR = 1;

function ContextInfo() {
    ULSxSy: ;
    this.listBaseType = null;
    this.listTemplate = null;
    this.listName = null;
    this.view = null;
    this.listUrlDir = null;
    this.HttpPath = null;
    this.HttpRoot = null;
    this.serverUrl = null;
    this.imagesPath = null;
    this.PortalUrl = null;
    this.RecycleBinEnabled = null;
    this.isWebEditorPreview = null;
    this.rootFolderForDisplay = null;
    this.isPortalTemplate = null;
    this.isModerated = false;
    this.recursiveView = false;
    this.displayFormUrl = null;
    this.editFormUrl = null;
    this.newFormUrl = null;
    this.ctxId = null;
    this.CurrentUserId = null;
    this.isForceCheckout = false;
    this.EnableMinorVersions = false;
    this.ModerationStatus = 0;
    this.verEnabled = 0;
    this.isVersions = 0;
    this.WorkflowsAssociated = false;
    this.ExternalDataList = false;
    this.HasRelatedCascadeLists = 0;
    this.CascadeDeleteWarningMessage = null;
    this.ContentTypesEnabled = false;
    this.SendToLocationName = "";
    this.SendToLocationUrl = "";
    this.StateInitDone = false;
    this.TotalListItems = null;
    this.CurrentSelectedItems = null;
    this.LastSelectableRowIdx = null;
    this.SelectAllCbx = null;
    this.TableCbxFocusHandler = null;
    this.TableMouseoverHandler = null;
}

function ctxInitItemState(ctxCur) {
    ULSxSy: ;
    ctxCur.TotalListItems = 0;
    ctxCur.CurrentSelectedItems = 0;
    ctxCur.LastSelectableRowIdx = 0;
    ctxCur.StateInitDone = true;
}

function STSPageUrlValidation(url) {
    ULSxSy: ;
    return PageUrlValidation(url);
}

function GetSource(defaultSource) {
    ULSxSy: ;
    var str = DeferCall('GetSource2', defaultSource, null);
    if (str == null) {
        var source = GetUrlKeyValue("Source");
        if (source == "") {
            if (defaultSource != null && defaultSource != "")
                source = defaultSource;
            else
                source = window.location.href;
        }
        str = source;
    }
    return escapeProperly(STSPageUrlValidation(str));
}

function GetUrlKeyValue(keyName, bNoDecode, url) {
    ULSxSy: ;
    var keyValue = "";
    if (url == null)
        url = window.location.href + "";
    var ndx;
    ndx = url.indexOf("#");
    if (ndx >= 0) {
        url = url.substr(0, ndx);
    }
    ndx = url.indexOf("&" + keyName + "=");
    if (ndx == -1)
        ndx = url.indexOf("?" + keyName + "=");
    if (ndx != -1) {
        ndx2 = url.indexOf("&", ndx + 1);
        if (ndx2 == -1)
            ndx2 = url.length;
        keyValue = url.substring(ndx + keyName.length + 2, ndx2);
    }
    if (bNoDecode)
        return keyValue;
    else
        return unescapeProperlyInternal(keyValue);
}

function LoginAsAnother(url, bUseSource) {
    ULSxSy: ;
    document.cookie = "loginAsDifferentAttemptCount=0";
    if (bUseSource == "1") {
        GoToPage(url);
    } else {
        var ch = url.indexOf("?") >= 0 ? "&" : "?";
        url += ch + "Source=" + escapeProperly(window.location.href);
        STSNavigate(url);
    }
}

function isPortalTemplatePage(Url) {
    ULSxSy: ;
    if (GetUrlKeyValue("PortalTemplate") == "1" ||
        GetUrlKeyValue("PortalTemplate", Url) == "1" ||
        (currentCtx != null && currentCtx.isPortalTemplate))
        return true;
    else
        return false;
}

function CLVPFromEvent(evt) {
    ULSxSy: ;
    return DeferCall('CLVPFromEventReal', evt);
}

function STSNavigateToView(evt, url) {
    ULSxSy: ;
    STSNavigate(url);
}

function STSNavigate2(evt, url) {
    ULSxSy: ;
    STSNavigate(url);
}

function STSNavigate(Url) {
    ULSxSy: ;
    if (window.location.search.indexOf("IsDlg=1") != -1) {
        if (Url.indexOf("?") != -1) {
            if (Url.match("&$") != "&") {
                Url = Url + "&IsDlg=1";
            } else {
                Url = Url + "IsDlg=1";
            }
        } else {
            Url = Url + "?IsDlg=1";
        }
    }
    if (isPortalTemplatePage(Url))
        window.top.location = STSPageUrlValidation(Url);
    else
        window.location = STSPageUrlValidation(Url);
}

function GoToPage(url) {
    ULSxSy: ;
    var ch = url.indexOf("?") >= 0 ? "&" : "?";
    if (GetUrlKeyValue("Source", true, url).length == 0) {
        var srcUrl = GetSource();
        if (srcUrl != null && srcUrl != "") {
            if ((url.length + srcUrl.length) <= 1950) {
                url += ch + "Source=" + srcUrl;
            }
        }
    }
    STSNavigate(url);
}

function TrimSpaces(str) {
    ULSxSy: ;
    var start;
    var end;
    str = str.toString();
    var len = str.length;
    for (start = 0; start < len; start++) {
        if (str.charAt(start) != ' ')
            break;
    }
    if (start == len)
        return "";
    for (end = len - 1; end > start; end--) {
        if (str.charAt(end) != ' ')
            break;
    }
    end++;
    return str.substring(start, end);
}

function TrimWhiteSpaces(str) {
    ULSxSy: ;
    var start;
    var end;
    str = str.toString();
    var len = str.length;
    for (start = 0; start < len; start++) {
        ch = str.charAt(start);
        if (ch != ' ' && ch != '\t' && ch != '\n' && ch != '\r' && ch != '\f')
            break;
    }
    if (start == len)
        return "";
    for (end = len - 1; end > start; end--) {
        ch = str.charAt(end);
        if (ch != ' ' && ch != '\t' && ch != '\n' && ch != '\r' && ch != '\f')
            break;
    }
    end++;
    return str.substring(start, end);
}

function GetAttributeFromItemTable(itemTable, strAttributeName, strAttributeOldName) {
    ULSxSy: ;
    var attrValue = itemTable != null ? itemTable.getAttribute(strAttributeName) : null;
    if (attrValue == null && itemTable != null && strAttributeOldName != null)
        attrValue = itemTable.getAttribute(strAttributeOldName);
    return attrValue;
}

function ShowMtgNavigatorPane() {
    ULSxSy: ;
    document.getElementById("MeetingNavigatorPane").style.display = "block";
}

function HideMtgNavigatorPane() {
    ULSxSy: ;
    document.getElementById("MeetingNavigatorPane").style.display = "none";
}

function HideMtgDesc() {
    ULSxSy: ;
    document.getElementById("MeetingDescription").style.display = "none";
}

function GetMultipleUploadEnabled() {
    ULSxSy: ;
    try {
        if (browseris.ie5up && !browseris.mac && (new ActiveXObject('STSUpld.UploadCtl')))
            return true;
    } catch (e) {}
    return false;
}

function SetUploadPageTitle() {
    ULSxSy: ;
    if (GetUrlKeyValue("Type") == 1) {
        document.title = L_NewFormClickOnce1_Text;
        if (browseris.ie || browseris.nav6up) {
            var titleElt = document.getElementById("onetidTextTitle");
            if (titleElt != null)
                titleElt.innerHTML = L_NewFormClickOnce1_Text;
        }
    }
}

function GetSelectedValue(frmElem) {
    ULSxSy: ;
    if (frmElem && (frmElem.selectedIndex > -1)) {
        return frmElem.options[frmElem.selectedIndex].value
    } else
        return "";
}

function GetSelectedText(frmElem) {
    ULSxSy: ;
    if (frmElem && (frmElem.selectedIndex > -1)) {
        return frmElem.options[frmElem.selectedIndex].text
    } else
        return "";
}

function MtgShowTimeZone() {
    ULSxSy: ;
    if (GetCookie("MtgTimeZone") == "1") {
        MtgToggleTimeZone();
    }
}

function FormatDate(sDate, sTime, eDate, eTime) {
    ULSxSy: ;
    var L_Date_Text = "<b>Date:</b>";
    var L_Time_Text = "<b>Time:</b>";
    var L_DateSeparator = " - ";
    if (browseris.win32 && sDate == eDate)
        L_DateSeparator = " -\u200e ";
    if (sDate == eDate) {
        document.write(L_Date_Text + " " + sDate);
        if (sTime != eTime)
            document.write(" " + L_Time_Text + " " + sTime + L_DateSeparator + eTime);
        else
            document.write(" " + L_Time_Text + " " + sTime);
    } else {
        document.write(L_Date_Text + " " + sDate + " (" + sTime + ")" + L_DateSeparator + eDate + " (" + eTime + ")");
    }
}

function GetAlertText(isDetached) {
    ULSxSy: ;
    var L_DETACHEDSINGLEEXCEPT_Text = "This meeting date is no longer associated with a meeting in your calendar and scheduling program. Either this meeting date was canceled, or the link to the workspace was removed from the scheduled meeting.";
    var L_DETACHEDCANCELLEDEXCEPT_Text = "This meeting date was canceled from your calendar and scheduling program. To specify what you want to do with the associated information in the workspace, do the following: In the Meeting Series pane, point to the meeting date, and in the drop-down list, click Keep, Delete, or Move.";
    var L_DETACHEDUNLINKEDSINGLE_Text = "This meeting date is no longer linked to the associated meeting in your calendar and scheduling program. To specify what you want to do with the information in the workspace, do the following: In the Meeting Series pane, point to the meeting date, and in the drop-down list, click Keep, Delete, or Move.";
    var L_DETACHEDCANCELLEDSERIES_Text = "This meeting series was canceled from your calendar and scheduling program.";
    var L_DETACHEDUNLINKEDSERIES_Text = "This meeting series is no longer linked to the associated meeting series in your calendar and scheduling program. You can keep or delete the workspace. If you keep the workspace, you will not be able to link it to another scheduled meeting.";
    var L_DETACHEDSERIESNOWSINGLE_Text = "This meeting was changed in your calendar and scheduling program from a recurring meeting to a nonrecurring meeting. You can keep or delete the workspace. If you keep the workspace, you will not be able to link it to another scheduled meeting.";
    var L_DETACHEDSINGLENOWSERIES_Text = "This meeting was changed in your calendar and scheduling program from a nonrecurring meeting to a recurring meeting. The current workspace does not support a recurring meeting. In your scheduling program, unlink the meeting from the workspace, and then link the meeting again to a new workspace. The new workspace will automatically support a recurring meeting.";
    var L_DETACHEDNONGREGORIANCAL_Text = "This meeting was created using a calendar and scheduling program that only supports series updates to the Meeting Workspace. Changes you make to individual occurrences of meetings in that program will not appear in the workspace.";
    var L_DETACHEDPASTEXCPMODIFIED_Text = "This past meeting was modified or canceled from your calendar and scheduling program. To keep, delete or move this meeting in the workspace, use the drop-down menu next to its date in the Meeting Series pane. To update the scheduling information for this meeting in the workspace, use your scheduling program to update this specific meeting occurrence.";
    var howOrphaned = isDetached & (0x10 - 1);
    var howDetached = isDetached - howOrphaned;
    if (howOrphaned) {
        switch (howOrphaned) {
            case 1:
                return (g_meetingCount == 1) ? L_DETACHEDSINGLEEXCEPT_Text : L_DETACHEDCANCELLEDEXCEPT_Text;
            case 2:
                return L_DETACHEDCANCELLEDSERIES_Text;
            case 3:
                return L_DETACHEDCANCELLEDEXCEPT_Text;
            case 4:
                return (g_meetingCount == 1) ? L_DETACHEDSINGLEEXCEPT_Text : L_DETACHEDUNLINKEDSINGLE_Text;
            case 5:
                return L_DETACHEDUNLINKEDSERIES_Text;
            case 6:
                return L_DETACHEDSERIESNOWSINGLE_Text;
            case 7:
                return L_DETACHEDSINGLENOWSERIES_Text;
            case 8:
                return L_DETACHEDPASTEXCPMODIFIED_Text;
        }
    } else if (howDetached) {
        switch (howDetached) {
            case 16:
                return L_DETACHEDNONGREGORIANCAL_Text;
        }
    }
    return null;
}

function retrieveCurrentThemeLink() {
    ULSxSy: ;
    var cssLink;
    var links = document.getElementsByTagName("link");
    for (var i = 0; i < links.length; i++) {
        if ((links[i].type == "text/css") && (links[i].id == "onetidThemeCSS"))
            cssLink = links[i];
    }
    if (cssLink) {
        var re = /(\.\.\/)+/;
        var relativeURL = cssLink.href;
        var newURL = relativeURL.replace(re, "/");
        return newURL;
    }
}

function StBuildParam(stPattern) {
    ULSxSy: ;
    var re;
    var i;
    for (i = 1; i < StBuildParam.arguments.length; i++) {
        re = new RegExp("\\^" + i);
        stPattern = stPattern.replace(re, StBuildParam.arguments[i]);
    }
    return stPattern;
}
JSRequest = {
    QueryString: null,
    FileName: null,
    PathName: null,
    EnsureSetup: function() {
        ULSxSy: ;
        if (JSRequest.QueryString != null) return;
        JSRequest.QueryString = new Array();
        var queryString = window.location.search.substring(1);
        var pairs = queryString.split("&");
        for (var i = 0; i < pairs.length; i++) {
            var p = pairs[i].indexOf("=");
            if (p > -1) {
                var key = pairs[i].substring(0, p);
                var value = pairs[i].substring(p + 1);
                JSRequest.QueryString[key] = value;
            }
        }
        var path = JSRequest.PathName = window.location.pathname;
        var p = path.lastIndexOf("/");
        if (p > -1) {
            JSRequest.FileName = path.substring(p + 1);
        } else {
            JSRequest.PageName = path;
        }
    }
};
var ExpGroupWPListName = "WSS_ExpGroupWPList";
var ExpGroupCookiePrefix = "WSS_ExpGroup_";
var ExpGroupCookieDelimiter = "&";
var ExpGroupMaxWP = 11;
var ExpGroupMaxCookieLength = 3960;
var g_ExpGroupQueue = new Array();
var g_ExpGroupInProgress = false;
var g_ExpInitializing = false;
var g_ExpGroupTable = new Array();
var g_ExpGroupNeedsState = false;
var g_ExpGroupParseStage = false;

function ExpCollGroup(groupName, imgName, evt, noAjax) {
    ULSxSy: ;
    if (evt != null)
        g_ExpGroupNeedsState = true;
    if (document.getElementById("titl" + groupName) == null)
        return;
    viewTable = document.getElementById("titl" + groupName).parentNode;
    if (viewTable == null)
        return;
    var ctxNum = groupName.substr(0, groupName.indexOf("-"));
    var ctxCur = window["ctx" + ctxNum];
    if (!ctxCur)
        return;
    if (!ctxCur.StateInitDone)
        ctxInitItemState(ctxCur);
    if (ctxCur.SelectAllCbx == null)
        ctxCur.SelectAllCbx = getSelectAllCbxFromTable(viewTable);
    tbodyTags = viewTable.getElementsByTagName("TBODY");
    numElts = tbodyTags.length;
    len = groupName.length;
    img = document.getElementById(imgName);
    if (img == null)
        return;
    srcPath = img.src;
    index = srcPath.lastIndexOf("/");
    imgName = srcPath.slice(index + 1);
    var fOpen = false;
    if (imgName == 'plus.gif' || g_ExpInitializing) {
        fOpen = true;
        displayStr = "";
        img.src = '/_layouts/images/minus.gif';
    } else {
        fOpen = false;
        displayStr = "none";
        img.src = '/_layouts/images/plus.gif';
    }
    for (var i = 0; i < numElts; i++) {
        var childObj = tbodyTags[i];
        if ((childObj.id != null) && (childObj.id.length > len + 4) && (groupName == childObj.id.slice(4).substr(0, len))) {
            if (fOpen) {
                index = childObj.id.indexOf("_", len + 4);
                if (index != -1) {
                    index = childObj.id.indexOf("_", index + 1);
                    if (index != -1)
                        continue;
                }
            }
            var previousDisplay = childObj.style.display;
            childObj.style.display = displayStr;
            var itemCount = 0;
            if (childObj.getAttribute("selectableRows"))
                itemCount = Number(childObj.getAttribute("selectableRows"));
            if (typeof(FV4UI) != "undefined" && FV4UI() && itemCount) {
                if (!fOpen) {
                    if (previousDisplay != "none")
                        ctxCur.TotalListItems -= itemCount;
                    DeselectCollapsedGroup(ctxCur, childObj);
                    UpdateSelectAllCbx(ctxCur, true);
                } else {
                    ctxCur.TotalListItems += itemCount;
                    UpdateSelectAllCbx(ctxCur, false);
                }
            }
            if (fOpen && childObj.id.substr(0, 4) == "titl") {
                imgObj = document.getElementById("img_" + childObj.id.slice(4));
                imgObj.src = '/_layouts/images/plus.gif';
            }
            var groupID = "tbod" + groupName;
            if (childObj.id.substr(0, groupID.length) == groupID) {
                if (noAjax) {
                    for (var j = 0; j < childObj.childNodes.length; j++) {
                        var child = childObj.childNodes[j];
                        child.style.display = displayStr;
                    }
                }
                if (childObj.childNodes.length == 0) {
                    var nextTBody = childObj.nextSibling;
                    if (nextTBody != null && nextTBody.tagName == "TBODY" && nextTBody.id == "") {
                        for (var j = 0; j < nextTBody.childNodes.length; j++) {
                            var child = nextTBody.childNodes[j];
                            child.style.display = displayStr;
                            if (typeof(FV4UI) != "undefined" && FV4UI()) {
                                HandleSingleGroupByRow(ctxCur, child, fOpen);
                                UpdateSelectAllCbx(ctxCur, true);
                            }
                        }
                    }
                }
            }
        }
    }
    EnsureScript("core.js", TypeofFullName('UpdateCtxLastSelectableRow'),
        function() {
            ULSxSy: ;
            if (typeof(FV4UI) != "undefined" && FV4UI())
                UpdateCtxLastSelectableRow(ctxCur, viewTable);
        });
    if (!noAjax && !g_ExpGroupParseStage) {
        if (g_ExpGroupNeedsState && ExpGroupFetchWebPartID(groupName) != null) {
            if (fOpen) {
                AddGroupToCookie(groupName);
            } else {
                RemoveGroupFromCookie(groupName);
            }
        }
        if (fOpen) {
            tbody = document.getElementById("tbod" + groupName + "_");
            if (tbody != null) {
                isLoaded = tbody.getAttribute("isLoaded");
                if (isLoaded == "false") {
                    ExpGroupFetchData(groupName, evt);
                }
            }
        }
    }
}

function ExpGroupFetchData(groupName, evt) {
    ULSxSy: ;
    var loadString = "<tr><td colspan=\"100\" class=\"ms-gbload\">" + L_Loading_Text + "</td></tr>";
    ExpGroupRenderData(loadString, groupName, "false");
    if (!g_ExpGroupInProgress) {
        var groupString = ExpGroupFetchGroupString(groupName);
        if (groupString == null) {
            var loadString = "<tr><td></td><td class=\"ms-gbload\">" + L_Loading_Error_Text + "</td></tr>";
            ExpGroupRenderData(loadString, groupName, "false");
            if (g_ExpGroupQueue.length > 0) {
                ExpGroupFetchData(g_ExpGroupQueue.shift());
            }
            return;
        }
        if (typeof(InitAllClvps) == "undefined" && evt != null)
            g_ExpInitializing = true;
        else {
            g_ExpInitializing = false;
            g_ExpGroupInProgress = true;
        }
        if (!ExpGroupCallServer(groupString, groupName, evt)) {
            if (g_ExpGroupQueue.length > 0 && evt == null) {
                ExpGroupFetchData(g_ExpGroupQueue.shift());
            }
        }
    } else {
        g_ExpGroupQueue.push(groupName);
    }
}

function ExpGroupCallServer(groupString, groupName, evt) {
    ULSxSy: ;
    if (evt != null) {
        if (evt == "PageLoad") {
            var obj = new Object();
            obj.fakeEvent = true; {
                var defd;
                try {
                    defd = typeof(inplview.ExpGroup);
                } catch (e) {
                    defd = 'undefined';
                }
                if (defd != 'undefined') {
                    inplview.ExpGroup(obj, groupName);
                } else {
                    var str = "inplview.ExpGroup";
                    var rg = str.split('.');
                    if (rg.length > 1) {
                        var fnd = function() {
                            ULSxSy: ;
                            inplview.ExpGroup(obj, groupName);
                        };
                        EnsureScript(rg[0], defd, fnd);
                    }
                }
            };
        } else
            ExpGroup(evt, groupName);
    } else {
        var viewCounter = groupName.substring(0, groupName.indexOf("-"));
        var ctx = window["ctx" + viewCounter];
        var webPartID = ExpGroupFetchWebPartID(groupName);
        if (webPartID != null) {
            var functionName = "ExpGroupCallServer" + webPartID;
            if (ctx != null && ctx.clvp != null) {
                var strFilter = ctx.clvp.FilterString();
                if (strFilter != null) {
                    groupString += "|" + strFilter;
                }
            }
            var functionCall = functionName + "('" + groupString + "','" + groupName + "')";
            eval(functionCall);
        }
    }
}

function ExpGroup(evt, groupName) {
    ULSxSy: ;
    if (typeof(InitAllClvps) != 'undefined') {
        {
            var defd;
            try {
                defd = typeof(inplview.ExpGroup);
            } catch (e) {
                defd = 'undefined';
            }
            if (defd != 'undefined') {
                inplview.ExpGroup(evt, groupName);
            } else {
                var str = "inplview.ExpGroup";
                var rg = str.split('.');
                if (rg.length > 1) {
                    var fnd = function() {
                        ULSxSy: ;
                        inplview.ExpGroup(evt, groupName);
                    };
                    EnsureScript(rg[0], defd, fnd);
                }
            }
        };
    } else {
        SodDispatchEvent("inplview", typeof(InitAllClvps), evt);
    }
}

function DoPagingCallback(webPartID, pagingParam) {
    ULSxSy: ;
    if (webPartID != null) {
        var functionName = "DoPagingCallback" + webPartID;
        var functionCall = functionName + "('" + pagingParam + "')";
        eval(functionCall);
    }
}

function ExpGroupReceiveData(htmlToRender, groupName) {
    ULSxSy: ;
    var ctxId = "ctx" + groupName.substring(0, groupName.indexOf("-"));
    var indexBeginCTXName = htmlToRender.indexOf("CTXName=\"");
    if (indexBeginCTXName != -1) {
        if (ctxId != "ctx1") {
            htmlToRender = htmlToRender.replace(/ CTXName=\"ctx1\" /g, " CTXName=\"" + ctxId + "\" ");
        }
    }
    var needOuterWrap = false;
    if (htmlToRender.length < 4) {
        needOuterWrap = true;
    } else if (htmlToRender.substring(0, 3) != "<tr") {
        needOuterWrap = true;
    }
    if (needOuterWrap) {
        htmlToRender = "<TR><TD>" + htmlToRender + "</TD></TR>";
    }
    ExpGroupRenderData(htmlToRender, groupName, "true");
    ProcessImn();
    g_ExpGroupInProgress = false;
    if (g_ExpGroupQueue.length > 0) {
        ExpGroupFetchData(g_ExpGroupQueue.shift());
    }
}

function ExpGroupRenderData(htmlToRender, groupName, isLoaded) {
    ULSxSy: ;
    var tbody = document.getElementById("tbod" + groupName + "_");
    var wrapDiv = document.createElement("DIV");
    var rg = groupName.split("-");
    wrapDiv.innerHTML = "<TABLE><TBODY id=\"tbod" + groupName + "_\" isLoaded=\"" + isLoaded + "\">" + htmlToRender + "</TBODY></TABLE>";
    tbody.parentNode.replaceChild(wrapDiv.firstChild.firstChild, tbody);
}

function ExpGroupFetchGroupString(groupName) {
    ULSxSy: ;
    titlTbody = document.getElementById("titl" + groupName);
    if (titlTbody == null) {
        return null;
    } else {
        var groupString = titlTbody.getAttribute("groupString");
        return groupString;
    }
}

function ExpGroupFetchWebPartID(groupName) {
    ULSxSy: ;
    var viewCounter = groupName.substring(0, groupName.indexOf("-"));
    var lookupEntry = document.getElementById("GroupByWebPartID" + viewCounter);
    if (lookupEntry == null)
        return null;
    return lookupEntry.getAttribute("webPartID");
}

function RenderActiveX(str) {
    ULSxSy: ;
    document.write(str);
}

function OnItem(elm) {
    ULSxSy: ;
    DeferCall('OnItemDeferCall', elm);
}

function OnChildItem(elm) {
    ULSxSy: ;
    var i;
    for (i = 0; i < elm.childNodes.length; i++) {
        var child = elm.childNodes[i];
        if (child.nodeType == 1 && child.tagName == "TABLE" && child.getAttribute("NameOrTitle"))
            break;
        if (child.nodeType == 1 && child.tagName == "DIV" && child.style.display != "none" && child.style.visibility != "hidden") {
            OnItem(child);
            break;
        }
    }
}

function OnLink(elm) {
    ULSxSy: ;
    DeferCall('OnLinkDeferCall', elm);
}

function MMU_PopMenuIfShowing(menuElement) {
    ULSxSy: ;
    DeferCall('MMU_PopMenuIfShowingDeferCall', menuElement);
}

function OnMouseOverFilter(elm) {
    ULSxSy: ;
    DeferCall('OnMouseOverFilterDeferCall', elm);
}

function OnChildColumn(elm) {
    ULSxSy: ;
    var i;
    for (i = 0; i < elm.childNodes.length; i++) {
        var child = elm.childNodes[i];
        if (child.nodeType == 1 && child.tagName == "DIV" && child.getAttribute("CtxNum") != null) {
            OnMouseOverFilter(child);
            break;
        }
    }
}

function MMU_EcbTableMouseOverOut(ecbTable, fMouseOver) {
    ULSxSy: ;
    DeferCall('MMU_EcbTableMouseOverOutDeferCall', ecbTable, fMouseOver);
}

function OnMouseOverAdHocFilter(elm, fieldStr) {
    ULSxSy: ;
    DeferCall('OnMouseOverAdHocFilterDeferCall', elm, fieldStr);
}

function MMU_EcbLinkOnFocusBlur(menu, ecbLink, fOnFocus) {
    ULSxSy: ;
    DeferCall('MMU_EcbLinkOnFocusBlurDeferCall', menu, ecbLink, fOnFocus);
}

function GetElementByClassName(elem, classname) {
    ULSxSy: ;
    if (elem.className) {
        if (elem.className.indexOf(classname) > -1)
            return elem;
    }
    var temp;
    for (var i = 0; i < elem.childNodes.length; i++) {
        temp = GetElementByClassName(elem.childNodes[i], classname);
        if (temp != null)
            return temp;
    }
    return null;
}

function AddWhiteBG() {
    ULSxSy: ;
    if (searcharea.className.indexOf(" " + whitebgclass) == -1) {
        var cn = searcharea.className.trim() + " " + whitebgclass;
        cn = cn.trim();
        searcharea.className = cn;
    }
}

function RemoveWhiteBG() {
    ULSxSy: ;
    if (locked)
        return;
    searcharea.className = searcharea.className.replace(" " + whitebgclass, "");
}
var locked = false;

function LockBG() {
    ULSxSy: ;
    locked = !locked;
    if (locked)
        AddWhiteBG();
    else
        RemoveWhiteBG();
}
var searcharea;
var searchbox;
var searchimage;
var whitebgclass;

function InitSearchBoxStyleEvents(sarea, sbox, simage_class, wbgclass) {
    ULSxSy: ;
    searcharea = document.getElementById(sarea);
    searchbox = document.getElementById(sbox);
    searchimage = GetElementByClassName(searcharea, simage_class);
    whitebgclass = wbgclass;
    if (searchbox == null || searchimage == null)
        return;
    searchbox.onfocus = LockBG;
    searchbox.onmouseover = AddWhiteBG;
    searchbox.onblur = LockBG;
    searchbox.onmouseout = RemoveWhiteBG;
    searchimage.onmouseover = AddWhiteBG;
    searchimage.onmouseout = RemoveWhiteBG;
}

function IsFullNameDefined(fullName) {
    ULSxSy: ;
    if (!fullName) {
        return false;
    }
    var names = fullName.split(".");
    var len = names.length;
    var obj = window;
    for (var i = 0; i < len; i++) {
        obj = obj[names[i]];
        if (typeof(obj) == "undefined") {
            return false;
        }
    }
    return true;
}

function TypeofFullName(fullName) {
    ULSxSy: ;
    if (!fullName) {
        return "undefined";
    }
    var names = fullName.split(".");
    var len = names.length;
    var obj = window;
    for (var i = 0; i < len; i++) {
        obj = obj[names[i]];
        if (typeof(obj) == "undefined") {
            return "undefined";
        }
    }
    return typeof(obj);
}
var _v_dictSod = [];
var Sods = {
    missing: 1,
    loading: 2,
    pending: 3,
    loaded: 4
};
var _v_qsod = [];
var _v_sodctx = {
    "document": document,
    "window": window
};

function Sod(url) {
    ULSxSy: ;
    this.url = url;
    this.loaded = false;
    this.depkeys = null;
    this.state = Sods.missing;
    this.qfn = null;
}

function RegisterSod(key, url) {
    ULSxSy: ;
    key = NormalizeSodKey(key);
    var sod = new Sod(url);
    _v_dictSod[key] = sod;
}

function RegisterSodDep(key, dep) {
    ULSxSy: ;
    key = NormalizeSodKey(key);
    var sod = _v_dictSod[key];
    if (sod == null)
        return;
    if (sod.depkeys == null)
        sod.depkeys = [];
    sod.depkeys.push(dep);
}

function LoadSodByKey(key, fn) {
    ULSxSy: ;
    var sod = _v_dictSod[key];
    if (fn != null && sod != null) {
        if (sod.qfn == null)
            sod.qfn = [];
        sod.qfn.push(fn);
    }
    return LoadSod(sod);
}

function LoadSod(sod) {
    ULSxSy: ;
    if (sod == null)
        return Sods.missing;
    if (sod.state == Sods.loaded || sod.state == Sods.loading) {
        return sod.state;
    }
    sod.state = Sods.pending;
    var mll = [];
    if (sod.depkeys != null) {
        var i;
        var fDepLoaded = true;
        var am = sod.depkeys.length;
        for (i = 0; i < am; i++) {
            var sodDep = _v_dictSod[sod.depkeys[i]];
            if (sodDep == null)
                continue;
            if (sodDep.state != Sods.loaded) {
                fDepLoaded = false;
                mll.push(sodDep);
            }
        }
        if (!fDepLoaded) {
            _v_qsod.push(sod);
            am = mll.length;
            for (i = 0; i < am; i++) {
                var sodDep = mll[i];
                if (sodDep.state != Sods.loaded && sodDep.state != Sods.loading)
                    LoadSod(sodDep);
            }
            return sod.state;
        }
    }
    if (sod.state == Sods.loaded || sod.state == Sods.loading) {
        return sod.state;
    }
    sod.state = Sods.loading;
    var s = document.createElement("SCRIPT");
    s.type = "text/javascript";
    s.src = sod.url;
    var fn = GetOnLoad(sod, s);
    if (browseris.ie)
        s.onreadystatechange = fn;
    else
        s.onload = fn;
    document.getElementsByTagName("HEAD")[0].appendChild(s);
    return sod.state;
}

function GetOnLoad(sod, s) {
    ULSxSy: ;
    var fn = function() {
        ULSxSy: ;
        var floaded = false;
        if (typeof(s.readyState) != 'undefined')
            floaded = s.readyState == "complete" || s.readyState == "loaded";
        else
            floaded = true;
        if (floaded) {
            s.onreadystatechange = null;
            s.onload = null;
            var sUrl = sod.url;
            var index = sUrl.lastIndexOf("/");
            if (index > -1)
                sUrl = sUrl.substr(index + 1);
            index = sUrl.indexOf("?");
            if (index > -1)
                sUrl = sUrl.substr(0, index);
            sUrl = sUrl.toLowerCase();
            sUrl = sUrl.replace(".debug.js", ".js");
            var fn2 = function() {
                ULSxSy: ;
                sod.state = Sods.loaded;
                while (_v_qsod.length > 0) {
                    var sodParent = _v_qsod.pop();
                    if (sodParent.state == Sods.pending) {
                        LoadSod(sodParent);
                        break;
                    }
                }
                if (sod.qfn != null) {
                    while (sod.qfn.length > 0) {
                        var fn3 = sod.qfn.shift();
                        fn3();
                    }
                }
            };
            if (sUrl.indexOf(".js") > 0) {
                ExecuteOrDelayUntilScriptLoaded(fn2, sUrl);
            } else {
                fn2();
            }
        }
    };
    return fn;
}

function EnsureScript(key, typ, fn) {
    ULSxSy: ;
    if (typ != 'undefined') {
        if (fn != null)
            fn();
        return true;
    }
    key = NormalizeSodKey(key);
    LoadSodByKey(key, fn);
    return false;
}

function EnsureScriptFunc(key, typ, fn) {
    ULSxSy: ;
    EnsureScript(key, TypeofFullName(typ), fn);
}

function EnsureScriptParams() {
    ULSxSy: ;
    if (arguments.length < 2) {
        return;
    }
    var args = arguments;
    var key = Array.prototype.shift.call(args);
    var func = Array.prototype.shift.call(args);
    var fn = function() {
        ULSxSy: ;
        var fParts = func.split(".");
        var funcRef = window;
        for (var i = 0, len = fParts.length; i < len; i++) {
            funcRef = funcRef[fParts[i]];
        }
        funcRef.apply(null, args);
    }
    EnsureScriptFunc(key, func, fn);
}

function NormalizeSodKey(key) {
    ULSxSy: ;
    var lowerCaseKey = key.toLowerCase();
    var lckl = lowerCaseKey.length;
    if (lckl >= 3 && ".js" == lowerCaseKey.substr(lckl - 3)) {
        key = lowerCaseKey;
    } else if (lowerCaseKey.indexOf(".resx") > 0) {
        var index = lowerCaseKey.indexOf(".resx");
        key = key.substr(0, index + 5).toLowerCase() + key.substr(index + 5);
    }
    return key;
}

function SodCloneEvent(evt) {
    ULSxSy: ;
    var e;
    if (browseris.ie) {
        e = document.createEventObject(evt);
    } else {
        e = document.createEvent("MouseEvents");
        e.initMouseEvent("click", true, true, window,
            0, 0, 0, 0, 0, false, false, false, false, 0, null);
    }
    return e;
}

function SodDispatchEvent(key, typ, evt) {
    ULSxSy: ;
    var e = SodCloneEvent(evt);
    var fn;
    if (browseris.ie) {
        fn = function() {
            ULSxSy: ;
            e.srcElement.fireEvent("onclick", e);
        };
    } else {
        var t = evt.target;
        fn = function() {
            ULSxSy: ;
            t.dispatchEvent(e);
        };
    }
    if (!EnsureScript(key, typ, fn)) {
        if (browseris.ie)
            evt.cancelBubble = true;
        else
            evt.stopPropagation();
    }
}

function AddTabHeadHandler(tid, fn) {
    ULSxSy: ;
    var li = document.getElementById(tid);
    if (li != null) {
        var a = li.getElementsByTagName('A')[0];
        AddEvtHandler(a, 'onclick', fn);
    }
}

function LoadWPAdderOnDemand() {
    ULSxSy: ;
    if (typeof(loadWPAdderCallback) == 'function') {
        {
            var defd;
            try {
                defd = typeof(WPAdderClass.load);
            } catch (e) {
                defd = 'undefined';
            }
            if (defd != 'undefined') {
                WPAdderClass.load(loadWPAdderCallback);
            } else {
                var str = "WPAdderClass.load";
                var rg = str.split('.');
                if (rg.length > 1) {
                    var fnd = function() {
                        ULSxSy: ;
                        WPAdderClass.load(loadWPAdderCallback);
                    };
                    EnsureScript(rg[0], defd, fnd);
                }
            }
        };
    }
}

function showSaveConflictDialog(lastModifiedUserId, continueStatusHtml, mergeChangesUrl, mergeChangesStatusHtml, discardScript, overwriteScript) {
    ULSxSy: ; {
        var defd;
        try {
            defd = typeof(ribbon.showSaveConflictDialog);
        } catch (e) {
            defd = 'undefined';
        }
        if (defd != 'undefined') {
            ribbon.showSaveConflictDialog(lastModifiedUserId, continueStatusHtml, mergeChangesUrl, mergeChangesStatusHtml, discardScript, overwriteScript);
        } else {
            var str = "ribbon.showSaveConflictDialog";
            var rg = str.split('.');
            if (rg.length > 1) {
                var fnd = function() {
                    ULSxSy: ;
                    ribbon.showSaveConflictDialog(lastModifiedUserId, continueStatusHtml, mergeChangesUrl, mergeChangesStatusHtml, discardScript, overwriteScript);
                };
                EnsureScript(rg[0], defd, fnd);
            }
        }
    };
}

function ClkElmt(e) {
    ULSxSy: ;
    if (browseris.ie)
        e.click();
    else
        FFClick(e);
}

function EnsureSelectionHandlerOnFocus(evt, cbx, ctxNum) {
    ULSxSy: ;
    DeferCall("EnsureSelectionHandlerOnFocusDeferred", evt, cbx, ctxNum);
}

function EnsureSelectionHandler(evt, tab, ctxNum) {
    ULSxSy: ;
    DeferCall("EnsureSelectionHandlerDeferred", evt, tab, ctxNum);
}

function StopEvt(evt) {
    ULSxSy: ;
    if (!browseris.ie)
        evt.stopPropagation();
}

function FFGetElementsById(doc, tabId) {
    ULSxSy: ;
    var rg = new Array();
    var ele = doc.getElementById(tabId);
    while (ele != null) {
        rg.push(ele);
        ele.id = "";
        ele = doc.getElementById(tabId);
    }
    var i;
    for (i = 0; i < rg.length; i++) {
        rg[i].id = tabId;
    }
    return rg;
}

function GetElementsByName(str) {
    ULSxSy: ;
    var rg = document.getElementsByName(str);
    if (rg.length == 0 && window.XMLHttpRequest) {
        rg = FFGetElementsById(document, str);
    }
    return rg;
}

function AddEvtHandler(ele, strEvt, func) {
    ULSxSy: ;
    if (browseris.ie)
        ele.attachEvent(strEvt, func);
    else
        ele.addEventListener(strEvt.substr(2), func, false);
}

function HideListViewRows(sid) {
    ULSxSy: ;
    var t = document.getElementById(sid);
    if (t == null)
        return;
    resetSelectAllCbx(t);
    var strHash = window.location.hash;
    if (strHash.length <= 56 || strHash.indexOf("InplviewHash=") != 1)
        return;
    strHash = strHash.substr(14, 42);
    strHash = strHash.replace(/--/g, "-");
    if (sid.length == 77)
        sid = sid.substr(39);
    else {
        var ctxId;
        var ctx;
        if (sid.indexOf("onetidDoclibViewTbl") != 0)
            return;
        sid = sid.substr(19);
        if (sid == '0') {
            if (t.className.indexOf("ms-emptyView") >= 0)
                return;
            for (ctxId in g_ctxDict) {
                ctx = g_ctxDict[ctxId];
                sid = ctx.view;
                break;
            }
        } else {
            ctx = g_ctxDict['ctx' + sid];
            sid = ctx.view;
        }
    }
    if (strHash != sid)
        return;
    if (t.className.length > 0)
        t.className += " s4-hide-tr";
    else
        t.className = "s4-hide-tr";
}

function resetSelectAllCbx(tab) {
    ULSxSy: ;
    var selectAllCbx = getSelectAllCbxFromTable(tab);
    if (selectAllCbx)
        selectAllCbx.checked = false;
}

function getSelectAllCbxFromTable(tab) {
    ULSxSy: ;
    if (tab == null)
        return null;
    var rows = tab.rows;
    if (rows && rows.length > 0) {
        var headerRow = rows[0];
        if (!headerRow.className.indexOf("ms-viewheadertr")) {
            var cells = headerRow.cells;
            if (cells.length > 0) {
                var cbx = cells[0].getElementsByTagName("INPUT")[0];
                if (cbx)
                    return cbx;
            }
        }
    }
    return null;
}

function WpClick(evt) {
    ULSxSy: ;
    var s = GetEventSrcElement(evt);
    var p = s;
    while (p != null && (p.className == null || p.className.indexOf('s4-wpcell') < 0)) {
        if (p.tagName == 'A')
            return;
        if (p.tagName == 'DIV' && p.className != null && p.className.indexOf('s4-ctx') != -1)
            return;
        if (p.tagName == 'TH' && p.className != null && p.className.indexOf('ms-vh2') != -1)
            return;
        p = p.parentNode;
    }
    if (typeof(ChevronContainer) != "undefined" && ChevronContainer != null) {
        RemoveCtxImg(ChevronContainer);
    }
    if (p != null) {
        {
            var defd;
            try {
                defd = typeof(ribbon.SelectWp);
            } catch (e) {
                defd = 'undefined';
            }
            if (defd != 'undefined') {
                ribbon.SelectWp(p);
            } else {
                var str = "ribbon.SelectWp";
                var rg = str.split('.');
                if (rg.length > 1) {
                    var fnd = function() {
                        ULSxSy: ;
                        ribbon.SelectWp(p);
                    };
                    EnsureScript(rg[0], defd, fnd);
                }
            }
        };
    }
}

function WpKeyUp(evt) {
    ULSxSy: ;
    var focusElt = GetEventSrcElement(evt);
    if (evt.keyCode == 32 && focusElt && focusElt.tagName == "INPUT" &&
        (HasCssClass(focusElt, "s4-selectAllCbx") || HasCssClass(focusElt, "s4-itm-cbx")))
        WpClick(evt);
}

function WzClick(evt, zid) {
    ULSxSy: ;
    var s = GetEventSrcElement(evt);
    var p = s;
    while (p != null) {
        var z = p.getAttribute("ZoneID");
        if (z == zid)
            break;
        if (p.tagName == 'A')
            return;
        p = p.parentNode;
    }
    if (p != null) {
        {
            var defd;
            try {
                defd = typeof(ribbon.SelectWz);
            } catch (e) {
                defd = 'undefined';
            }
            if (defd != 'undefined') {
                ribbon.SelectWz(p, zid);
            } else {
                var str = "ribbon.SelectWz";
                var rg = str.split('.');
                if (rg.length > 1) {
                    var fnd = function() {
                        ULSxSy: ;
                        ribbon.SelectWz(p, zid);
                    };
                    EnsureScript(rg[0], defd, fnd);
                }
            }
        };
    }
}

function WpCbxSelect(evt) {
    ULSxSy: ;
    var cbx = GetEventSrcElement(evt);
    var currentlySelected = cbx.checked;
    if (!currentlySelected)
        WpClick(evt);
    else {
        var defd;
        try {
            defd = typeof(ribbon.DeselectWpWz);
        } catch (e) {
            defd = 'undefined';
        }
        if (defd != 'undefined') {
            ribbon.DeselectWpWz();
        } else {
            var str = "ribbon.DeselectWpWz";
            var rg = str.split('.');
            if (rg.length > 1) {
                var fnd = function() {
                    ULSxSy: ;
                    ribbon.DeselectWpWz();
                };
                EnsureScript(rg[0], defd, fnd);
            }
        }
    };
    TrapMenuClick(evt);
    if (evt.type != "keyup")
        cbx.className = "ms-WPHeaderCbxHidden";
}

function WpCbxKeyHandler(evt) {
    ULSxSy: ;
    var kCode;
    if (browseris.ie)
        kCode = evt.keyCode;
    else
        kCode = evt.which;
    if (kCode == 13)
        WpCbxSelect(evt);
}

function PopoutMenuMaybeSwapImage(anchorId, iconId, src) {
    ULSxSy: ;
    var anchor = document.getElementById(anchorId);
    if (anchor && typeof(anchor) != 'undefined') {
        if (anchor.rel == '_spPopoutMenuIsOpen')
            return;
        SwapImage(iconId, src);
    }
}

function PopoutMenuMaybeSwapImageClustered(anchorId, iconId, src, x, y, height, width) {
    ULSxSy: ;
    var anchor = document.getElementById(anchorId);
    if (anchor && typeof(anchor) != 'undefined') {
        if (anchor.rel == '_spPopoutMenuIsOpen')
            return;
        var span = document.getElementById(iconId);
        var img = span.firstChild;
        SwapImageInternal(img, src);
        span.style.height = height + "px";
        span.style.width = width + "px";
        img.style.top = "-" + y + "px";
        img.style.left = "-" + x + "px";
    }
}

function SwapImage(id, src) {
    ULSxSy: ;
    var img = document.getElementById(id);
    SwapImageInternal(img, src);
}

function SwapImageInternal(img, src) {
    ULSxSy: ;
    if (img && typeof(img) != 'undefined')
        img.src = src;
}

function GetViewportHeight() {
    ULSxSy: ;
    if (typeof(window.innerHeight) != 'undefined')
        viewportHeight = window.innerHeight;
    else
        viewportHeight = document.documentElement.clientHeight;
    return viewportHeight;
}

function GetViewportWidth() {
    ULSxSy: ;
    if (typeof(window.innerWidth) != 'undefined')
        viewportWidth = window.innerWidth;
    else
        viewportWidth = document.documentElement.clientWidth;
    return viewportWidth;
}
var g_viewportHeight = null,
    g_viewportWidth = null,
    g_wpadderHeight = 0,
    g_setWidth, g_setWidthInited = false,
    g_workspaceResizedHandlers = [],
    g_setScrollPos = false;
var g_frl = false;

function FixRibbonAndWorkspaceDimensionsForResize() {
    ULSxSy: ;
    if (g_frl)
        return;
    var vph = GetViewportHeight();
    var vpw = GetViewportWidth();
    if (g_viewportHeight == vph && g_viewportWidth == vpw) {
        return;
    }
    g_viewportHeight = vph;
    g_viewportWidth = vpw;
    window.setTimeout(FixRibbonAndWorkspaceDimensions, 0);
}

function FixRibbonAndWorkspaceDimensions() {
    ULSxSy: ;
    g_frl = true;
    var elmRibbon = GetCachedElement("s4-ribbonrow");
    var elmWorkspace = GetCachedElement("s4-workspace");
    var elmTitleArea = GetCachedElement("s4-titlerow");
    var elmBodyTable = GetCachedElement("s4-bodyContainer");
    if (!elmRibbon || !elmWorkspace || !elmBodyTable) {
        return;
    }
    if (!g_setWidthInited) {
        var setWidth = true;
        if (elmWorkspace.className.indexOf("s4-nosetwidth") > -1)
            setWidth = false;
        g_setWidth = setWidth;
        g_setWidthInited = true;
    } else {
        var setWidth = g_setWidth;
    }
    var baseRibbonHeight = RibbonIsMinimized() ? 44 : 135;
    var ribbonHeight = baseRibbonHeight + g_wpadderHeight;
    if (GetCurrentEltStyle(elmRibbon, "visibility") == "hidden") {
        ribbonHeight = 0;
    }
    elmRibbon.style.height = ribbonHeight + "px";
    var vph = g_viewportHeight;
    if (null === vph) {
        vph = GetViewportHeight();
        g_viewportHeight = vph;
    }
    var newWorkspaceHeight = vph - elmRibbon.offsetHeight - AbsTop(elmRibbon);
    if (newWorkspaceHeight < 0)
        newWorkspaceHeight = 0;
    elmWorkspace.style.height = newWorkspaceHeight + "px";
    if (setWidth) {
        elmWorkspace.style.width = document.documentElement.clientWidth + "px";
        if (elmBodyTable.offsetWidth < elmWorkspace.clientWidth)
            elmBodyTable.style.width = elmWorkspace.clientWidth + "px";
        if (elmTitleArea) {
            elmTitleArea.style.width = Math.max(elmBodyTable.offsetWidth - 1, 0) + "px";
            elmTitleArea.className += " ms-titlerowborder";
        }
    }
    var isIE7 = browseris.ie && browseris.iever == 7 && !browseris.ie8standard;
    if (!g_setScrollPos) {
        if (browseris.firefox && browseris.firefox36up)
            window.scroll(0, 0);
        if (window.location.search.match("[?&]IsDlg=1")) {
            if (!isIE7 || elmWorkspace.scrollHeight < elmWorkspace.clientHeight)
                elmWorkspace.style.overflowY = "auto";
        }
        var scrollElem = document.getElementById("_maintainWorkspaceScrollPosition");
        if (scrollElem != null && scrollElem.value != null) {
            elmWorkspace.scrollTop = scrollElem.value;
        }
        g_setScrollPos = true;
    }
    var handlers = [].concat(g_workspaceResizedHandlers);
    for (var i = 0, wLen = handlers.length; i < wLen; i++) {
        handlers[i]();
    }
    g_frl = false;
}

function RibbonIsMinimized() {
    ULSxSy: ;
    if (g_spribbon.isInited) {
        return g_spribbon.isMinimized;
    } else {
        if (typeof(_ribbon) == "undefined" || null === _ribbon)
            return true;
        else
            return _ribbon.buildMinimized;
    }
}
var g_spribbon = new Object();
g_spribbon.isMinimized = true;
g_spribbon.isInited = false;
g_spribbon.minimizedHeight = "44px";
g_spribbon.maximizedHeight = "135px";

function OnRibbonMinimizedChanged(ribbonMinimized) {
    ULSxSy: ;
    var ribbonElement = GetCachedElement("s4-ribbonrow");
    var titleElement = GetCachedElement("s4-titlerow");
    if (ribbonElement) {
        ribbonElement.className = ribbonElement.className.replace("s4-ribbonrowhidetitle", "");
        if (titleElement) {
            titleElement.className = titleElement.className.replace("s4-titlerowhidetitle", "");
            if (ribbonMinimized) {
                titleElement.style.display = "block";
            } else {
                titleElement.style.display = "none";
            }
        }
    }
    var wasInited = g_spribbon.isInited;
    g_spribbon.isInited = true;
    var lastState = g_spribbon.isMinimized;
    g_spribbon.isMinimized = ribbonMinimized;
    if (lastState != ribbonMinimized || !wasInited)
        FixRibbonAndWorkspaceDimensions();
}

function setInnerText(elem, text) {
    ULSxSy: ;
    var doc = elem.ownerDocument;
    if (doc.createTextNode) {
        var textNode = doc.createTextNode(text);
        elem.innerHTML = '';
        elem.appendChild(textNode);
    } else {
        elem.innerText = text;
    }
}

function setInnerText(elem, text) {
    ULSxSy: ;
    var doc = elem.ownerDocument;
    if (doc.createTextNode) {
        var textNode = doc.createTextNode(text);
        elem.innerHTML = '';
        elem.appendChild(textNode);
    } else {
        elem.innerText = text;
    }
}

function CatchCreateError(strIgnore1, strIgnore2, strIgnore3) {
    ULSxSy: ;
    return true;
}
if (typeof(ExpandBody) == "undefined") {
    var preventSafariParseError = true;

    function ExpandBody(guid, anchor) {
        ULSxSy: ;
        var frm = document.forms[MSOWebPartPageFormName];
        frm.CAML_Expand.value = frm.CAML_Expand.value.concat(guid);
        frm.action = frm.action.concat("#" + anchor);
        frm.submit();
        return false;
    }
}
if (typeof(CollapseBody) == "undefined") {
    var preventSafariParseError = true;

    function CollapseBody(guid, anchor) {
        ULSxSy: ;
        var frm = document.forms[MSOWebPartPageFormName];
        var reg = new RegExp("\{", "g");
        guid = guid.replace(reg, "\\\{");
        reg = new RegExp("\}", "g");
        guid = guid.replace(reg, "\\\}");
        reg = new RegExp(guid, "g");
        frm.CAML_Expand.value = frm.CAML_Expand.value.replace(reg, "");
        frm.CAML_ShowOriginalEmailBody.value = frm.CAML_ShowOriginalEmailBody.value.replace(reg, "");
        frm.action = frm.action.concat("#" + anchor);
        frm.submit();
        return false;
    }
}
if (typeof(ShowQuotedText) == "undefined") {
    var preventSafariParseError = true;

    function ShowQuotedText(guid, anchor) {
        ULSxSy: ;
        var frm = document.forms[MSOWebPartPageFormName];
        frm.CAML_ShowOriginalEmailBody.value = frm.CAML_ShowOriginalEmailBody.value.concat(guid);
        if (frm.action.indexOf("#") > 0) {
            frm.action = frm.action.substr(0, frm.action.indexOf("#"));
        }
        frm.action = frm.action.concat("#" + anchor);
        frm.submit();
        return false;
    }
}
if (typeof(HideQuotedText) == "undefined") {
    var preventSafariParseError = true;

    function HideQuotedText(guid, anchor) {
        ULSxSy: ;
        var frm = document.forms[MSOWebPartPageFormName];
        var reg = new RegExp("\{", "g");
        guid = guid.replace(reg, "\\\{");
        reg = new RegExp("\}", "g");
        guid = guid.replace(reg, "\\\}");
        reg = new RegExp(guid, "g");
        frm.CAML_ShowOriginalEmailBody.value = frm.CAML_ShowOriginalEmailBody.value.replace(reg, "");
        if (frm.action.indexOf("#") > 0) {
            frm.action = frm.action.substr(0, frm.action.indexOf("#"));
        }
        frm.action = frm.action.concat("#" + anchor);
        frm.submit();
        return false;
    }
}

function GetSelectedItemsDict(ctx) {
    ULSxSy: ;
    if (ctx != null && ctx.dictSel != null) {
        return ctx.dictSel;
    }
    return null;
}

function RemoveOnlyPagingArgs(strUrl) {
    ULSxSy: ;
    var rePagedFlag = /&*Paged=TRUE/gi;
    strUrl = strUrl.replace(rePagedFlag, "");
    var rePagedPrevFlag = /&*PagedPrev=TRUE/gi;
    strUrl = strUrl.replace(rePagedPrevFlag, "");
    var rePagedArgs = /&p_[^&]*/gi;
    strUrl = strUrl.replace(rePagedArgs, "");
    var rePagedRow = /&PageFirstRow=[^&]*/gi;
    strUrl = strUrl.replace(rePagedRow, "");
    var rePagedLastRow = /&PageLastRow=[^&]*/gi;
    strUrl = strUrl.replace(rePagedLastRow, "");
    return strUrl;
}

function RemovePagingArgs(strUrl) {
    ULSxSy: ;
    strUrl = RemoveOnlyPagingArgs(strUrl);
    var reFilter1 = /\?Filter=1&*/gi;
    strUrl = strUrl.replace(reFilter1, "?");
    var reFilter2 = /&Filter=1/gi;
    strUrl = strUrl.replace(reFilter2, "");
    var reOrphanedQMark = /\?$/;
    strUrl = strUrl.replace(reOrphanedQMark, "");
    return strUrl;
}
var v_stsOpenDoc2 = null;
var v_strStsOpenDoc2 = null;

function StsOpenEnsureEx2(szProgId) {
    ULSxSy: ;
    if (v_stsOpenDoc2 == null || v_strStsOpenDoc2 != szProgId) {
        v_stsOpenDoc2 = null;
        v_strStsOpenDoc2 = null;
        if (window.ActiveXObject) {
            try {
                v_stsOpenDoc2 = new ActiveXObject(szProgId);
                v_strStsOpenDoc2 = szProgId;
            } catch (e) {
                v_stsOpenDoc2 = null;
                v_strStsOpenDoc2 = null;
            };
        } else if (IsSupportedMacBrowser() && szProgId.indexOf("SharePoint.OpenDocuments") >= 0) {
            var plugin = CreateMacPlugin();
            if (plugin != null) {
                v_stsOpenDoc2 = plugin;
                v_strStsOpenDoc2 = "SharePoint.MacPlugin";
            }
        } else if (IsSupportedFirefoxOnWin() && szProgId.indexOf("SharePoint.OpenDocuments") >= 0) {
            var plugin = CreateFirefoxOnWindowsPlugin();
            if (plugin != null) {
                v_stsOpenDoc2 = plugin;
                v_strStsOpenDoc2 = "SharePoint.FFWinPlugin";
            }
        }
    }
    return v_stsOpenDoc2;
}

function StURLSetVar2(stURL, stVar, stValue) {
    ULSxSy: ;
    var stNewSet = stVar + "=" + stValue;
    var curl = new CUrl(stURL);
    var stURL = curl.query;
    var ichQ = stURL.indexOf("?");
    if (ichQ != -1) {
        var ich = stURL.indexOf("?" + stVar + "=", ichQ);
        if (ich == -1) {
            ich = stURL.indexOf("&" + stVar + "=", ichQ);
            if (ich != -1)
                stNewSet = "&" + stNewSet;
        } else {
            stNewSet = "?" + stNewSet;
        }
        if (ich != -1) {
            var re = new RegExp("[&?]" + stVar + "=[^&]*", "");
            stURL = stURL.replace(re, stNewSet);
        } else {
            stURL = stURL + "&" + stNewSet;
        }
    } else {
        stURL = stURL + "?" + stNewSet;
    }
    curl.query = stURL;
    return curl.ToString();
}

function CUrl(strUrl) {
    ULSxSy: ;
    var ichQ = strUrl.indexOf('?');
    var ichHash = strUrl.indexOf('#');
    if (ichHash >= 0 && ichHash < ichQ)
        ichHash = -1;
    this.path = strUrl;
    this.query = '';
    this.hash = '';
    if (ichQ >= 0) {
        this.path = strUrl.substr(0, ichQ);
        if (ichHash >= ichQ)
            this.query = strUrl.substr(ichQ, ichHash - ichQ);
        else
            this.query = strUrl.substr(ichQ);
    }
    if (ichHash >= 0) {
        if (ichQ < 0)
            this.path = strUrl.substr(0, ichHash);
        this.hash = strUrl.substr(ichHash);
    }
}
CUrl.prototype.ToString = CUrlToString;

function CUrlToString() {
    ULSxSy: ;
    var s = this.path + this.query + this.hash;
    return s;
}

function RemoveQueryParameterFromUrl(stURL, stParameterName) {
    ULSxSy: ;
    var re = new RegExp("[&?]" + stParameterName + "=[^&]*", "");
    stURL = stURL.replace(re, "");
    if (stURL.indexOf("?") == -1) {
        var ich = stURL.indexOf("&");
        if (ich != -1)
            stURL = stURL.substring(0, ich) + "?" + stURL.substring(ich + 1);
    }
    return stURL;
}

function HasValidUrlPrefix(url) {
    ULSxSy: ;
    var urlLower = url.toLowerCase();
    if (-1 == urlLower.search("^http://") && -1 == urlLower.search("^https://"))
        return false;
    return true;
}

function AbsLeft(obj) {
    ULSxSy: ;
    var x = obj.offsetLeft;
    var parent = obj.offsetParent;
    while (parent != null && parent.tagName != "BODY") {
        x += parent.offsetLeft;
        parent = parent.offsetParent;
    }
    if (parent != null)
        x += parent.offsetLeft;
    return x;
}

function AbsTop(obj) {
    ULSxSy: ;
    var y = obj.offsetTop;
    var parent = obj.offsetParent;
    while (parent != null && parent.tagName != "BODY") {
        y += parent.offsetTop;
        parent = parent.offsetParent;
    }
    if (parent != null)
        y += parent.offsetTop;
    return y;
}
var deleteInstance = 0;

function DeleteItemConfirmation() {
    ULSxSy: ;
    var message = "";
    if (typeof(ItemIsCopy) != "undefined")
        if (ItemIsCopy)
            message = L_NotifyThisIsCopy_Text;
    if (cascadeDeleteWarningMessage != "") {
        message += cascadeDeleteWarningMessage;
    }
    if (recycleBinEnabled == 1 && deleteInstance != 1)
        message += L_STSRecycleConfirm_Text;
    else
        message += L_STSDelConfirm_Text;
    return confirm(message);
}

function DeleteInstanceConfirmation() {
    ULSxSy: ;
    deleteInstance = 1;
    return DeleteItemConfirmation()
}

function CancelMultiPageConfirmation(redirectUrl) {
    ULSxSy: ;
    var L_DeletePartialResponse1_text = "A partial survey response has been saved.  Click OK to delete the partial survey response. If you want to continue this survey later click Cancel.  Your partial response can be found in the All Responses survey view.\n\nDo you want to send this partial response to the site Recycle Bin?";
    var L_DeletePartialResponse2_text = "A partial survey response has been saved.  Click OK to delete the partial survey response. If you want to continue this survey later click Cancel.  Your partial response can be found in the All Responses survey view.\n\nDo you want to delete the partial response?";
    var message = "";
    if (recycleBinEnabled == 1)
        message = L_DeletePartialResponse1_text;
    else
        message = L_DeletePartialResponse2_text;
    if (confirm(message) == true)
        return true;
    else
        STSNavigate(redirectUrl);
    return false;
}

function RestoreItemVersionConfirmation() {
    ULSxSy: ;
    var L_Version_Restore_Confirm_Text = "You are about to replace the current version with the selected version.";
    var message = L_Version_Restore_Confirm_Text;
    return confirm(message);
}

function DeleteItemVersionConfirmation(bRecycleBinEnabled) {
    ULSxSy: ;
    var L_Version_Delete_Confirm_Text = "Are you sure you want to delete this version?";
    var L_Version_Recycle_Confirm_Text = "Are you sure you want to send this version to the site Recycle Bin?";
    if (bRecycleBinEnabled)
        return confirm(L_Version_Recycle_Confirm_Text);
    else
        return confirm(L_Version_Delete_Confirm_Text);
}

function DeleteUserInfoItemConfirmation() {
    ULSxSy: ;
    var L_User_Delete_Confirm_Text = "You are about to delete this user.";
    var message = L_User_Delete_Confirm_Text;
    return confirm(message);
}

function UnlinkCopyConfirmation(strItemUrl) {
    ULSxSy: ;
    return confirm(L_ConfirmUnlinkCopy_Text);
}

function SupportsNavigateHttpFolder() {
    ULSxSy: ;
    return (browseris.ie5up && browseris.win32);
}

function MtgDeletePageConfirm() {
    ULSxSy: ;
    var L_DeleteGlobalConfirm_Text = "This page will be deleted from all meetings associated with this workspace.  ";
    var L_DeleteConfirm_Text = "Are you sure you want to delete this page?";
    var text;
    if (document.getElementById("MtgTlPart_PageType").value == 'MtgTlPart_LocalPage')
        text = L_DeleteConfirm_Text;
    else
        text = L_DeleteGlobalConfirm_Text + L_DeleteConfirm_Text;
    return confirm(text);
}

function IsImgLibJssLoaded() {
    ULSxSy: ;
    if (typeof(fImglibJssLoaded) != "undefined")
        return fImglibJssLoaded;
    return false;
}

function GetFirstChildElement(e) {
    ULSxSy: ;
    for (var i = 0; i < e.childNodes.length; i++) {
        if (e.childNodes[i].nodeType == 1)
            return e.childNodes[i];
    }
    return null;
}

function TestGCObject(GCObject) {
    ULSxSy: ;
    if (((browseris.ie55up) && (typeof(GCObject) == "undefined")) || (GCObject == null) || (GCObject.object == null))
        return false;
    return true;
}

function MMU_GetMenuFromClientId(clientId) {
    ULSxSy: ;
    return document.getElementById(clientId);
}

function MMU_EcbLinkOnKeyDown(menu, ecbLink, e) {
    ULSxSy: ;
    if (e == null) {
        e = window.event;
        if (e == null)
            return;
    }
    var hasHref = ((ecbLink.href != null) && (ecbLink.href.length > 0));
    if (((e.shiftKey || !hasHref) && (GetEventKeyCode(e) == 13)) || ((e.altKey) && (GetEventKeyCode(e) == 40))) {
        var image = byid(ecbLink.id + "_ti");
        if (image == null) {
            var serverClientId = ecbLink.getAttribute("serverclientid");
            if ((serverClientId != null) && (serverClientId.length > 0)) {
                image = byid(serverClientId + "_ti");
            }
        }
        if ((image != null) && (image.getAttribute("onclick") != null)) {
            image.onclick();
        } else {
            if (ecbLink.getAttribute("onclick") != null)
                ecbLink.onclick();
        }
        return false;
    } else {
        return true;
    }
}
var firstCalled = true;
var _callbackinitdelayed = false;

function DeferWebFormInitCallback() {
    ULSxSy: ;
    if (typeof(WebForm_InitCallback) == 'function')
        window['_WebForm_InitCallback'] = window['WebForm_InitCallback'];
    window['WebForm_InitCallback'] = function() {
        ULSxSy: ;
        if (firstCalled) {
            firstCalled = false;
            _callbackinitdelayed = true;
            _spBodyOnLoadFunctionNames.push('WebForm_InitCallback');
        } else {
            _callbackinitdelayed = false;
            if (typeof(window._WebForm_InitCallback) == 'function')
                window._WebForm_InitCallback();
        }
    }
    if (typeof(WebForm_DoCallback) == 'function')
        window['_WebForm_DoCallback'] = window['WebForm_DoCallback'];
    window['WebForm_DoCallback'] = function(eventTarget, eventArgument, eventCallback, context, errorCallback, useAsync) {
        ULSxSy: ;
        if (_callbackinitdelayed) {
            _callbackinitdelayed = false;
            if (_spBodyOnLoadFunctionNames != null) {
                var count = _spBodyOnLoadFunctionNames.length;
                for (var i = 0; i < count; i++) {
                    if (_spBodyOnLoadFunctionNames[i] == "WebForm_InitCallback") {
                        _spBodyOnLoadFunctionNames.splice(i, 1);
                        break;
                    }
                }
            }
            if (typeof(window._WebForm_InitCallback) == 'function')
                window._WebForm_InitCallback();
        }
        window._WebForm_DoCallback(eventTarget, eventArgument, eventCallback, context, errorCallback, useAsync);
    }
}

function _ribbonShouldFixRtlHeaders(isRtl) {
    ULSxSy: ;
    return browseris.ie && browseris.iever == 7 && !browseris.ie8standard && isRtl;
}
var IMNControlObj = null;
var bIMNControlInited = false;
var IMNDictionaryObj = null;
var bIMNSorted = false;
var bIMNOnloadAttached = false;
var IMNOrigScrollFunc = null;
var bIMNInScrollFunc = false;
var IMNSortableObj = null;
var IMNHeaderObj = null;
var IMNNameDictionaryObj = null;
var IMNShowOfflineObj = null;

function GetCurrentEvent(objEvent) {
    ULSxSy: ;
    if (!IsSupportedMacBrowser())
        return window.event;
    if (objEvent)
        return objEvent;
    return window.event;
}

function GetEventTarget(objEvent) {
    ULSxSy: ;
    if (!IsSupportedMacBrowser())
        return objEvent.srcElement;
    if (objEvent.srcElement)
        return objEvent.srcElement;
    return objEvent.target;
}

function EnsureIMNControl() {
    ULSxSy: ;
    if (!bIMNControlInited) {
        if (typeof(g_presenceEnabled) != "undefined" && g_presenceEnabled) {
            if (IsSupportedMacBrowser()) {
                IMNControlObj = CreateMacPlugin();
            } else if (browseris.ie5up) {
                if (window.ActiveXObject) {
                    try {
                        IMNControlObj = new ActiveXObject("Name.NameCtrl.1");
                        if (IMNControlObj) {
                            if (IsSupportedMacBrowser())
                                IMNControlObj.OnStatusChange = "IMNOnStatusChange";
                            else
                                IMNControlObj.OnStatusChange = IMNOnStatusChange;
                        }
                    } catch (e) {
                        IMNControlObj = null;
                    }
                }
            }
        }
        bIMNControlInited = true;
    }
    return IMNControlObj;
}

function IMNImageInfo() {
    ULSxSy: ;
    this.img = null;
    this.alt = '';
}
var L_IMNOnline_Text = "Available";
var L_IMNOffline_Text = "Offline";
var L_IMNAway_Text = "Away";
var L_IMNBusy_Text = "Busy";
var L_IMNDoNotDisturb_Text = "Do not disturb";
var L_IMNIdle_Text = "May be away";
var L_IMNBlocked_Text = "Blocked";
var L_IMNOnline_OOF_Text = "Available (OOF)";
var L_IMNOffline_OOF_Text = "Offline (OOF)";
var L_IMNAway_OOF_Text = "Away (OOF)";
var L_IMNBusy_OOF_Text = "Busy (OOF)";
var L_IMNDoNotDisturb_OOF_Text = "Do not disturb (OOF)";
var L_IMNIdle_OOF_Text = "May be away (OOF)";

function IMNGetStatusImage(state, showoffline) {
    ULSxSy: ;
    var img = "blank.gif";
    var alt = "";
    switch (state) {
        case 0:
            img = "imnon.png";
            alt = L_IMNOnline_Text;
            break;
        case 11:
            img = "imnonoof.png";
            alt = L_IMNOnline_OOF_Text;
            break;
        case 1:
            if (showoffline) {
                img = "imnoff.png";
                alt = L_IMNOffline_Text;
            } else {
                img = "blank.gif";
                alt = "";
            }
            break;
        case 12:
            if (showoffline) {
                img = "imnoffoof.png";
                alt = L_IMNOffline_OOF_Text;
            } else {
                img = "blank.gif";
                alt = "";
            }
            break;
        case 2:
            img = "imnaway.png";
            alt = L_IMNAway_Text;
            break;
        case 13:
            img = "imnawayoof.png";
            alt = L_IMNAway_OOF_Text;
            break;
        case 3:
            img = "imnbusy.png";
            alt = L_IMNBusy_Text;
            break;
        case 14:
            img = "imnbusyoof.png";
            alt = L_IMNBusy_OOF_Text;
            break;
        case 4:
            img = "imnaway.png";
            alt = L_IMNAway_Text;
            break;
        case 5:
            img = "imnbusy.png";
            alt = L_IMNBusy_Text;
            break;
        case 6:
            img = "imnaway.png";
            alt = L_IMNAway_Text;
            break;
        case 7:
            img = "imnbusy.png";
            alt = L_IMNBusy_Text;
            break;
        case 8:
            img = "imnaway.png";
            alt = L_IMNAway_Text;
            break;
        case 9:
            img = "imndnd.png";
            alt = L_IMNDoNotDisturb_Text;
            break;
        case 15:
            img = "imndndoof.png";
            alt = L_IMNDoNotDisturb_OOF_Text;
            break;
        case 10:
            img = "imnbusy.png";
            alt = L_IMNBusy_Text;
            break;
        case 16:
            img = "imnidle.png";
            alt = L_IMNIdle_Text;
            break;
        case 17:
            img = "imnidleoof.png";
            alt = L_IMNIdle_OOF_Text;
            break;
        case 18:
            img = "imnblocked.png";
            alt = L_IMNBlocked_Text;
            break;
        case 19:
            img = "imnidlebusy.png";
            alt = L_IMNBusy_Text;
            break;
        case 20:
            img = "imnidlebusyoof.png";
            alt = L_IMNBusy_OOF_Text;
            break;
    }
    var imnInfo = new IMNImageInfo();
    imnInfo.img = img;
    imnInfo.alt = alt;
    return imnInfo;
}

function IMNGetHeaderImage() {
    ULSxSy: ;
    var imnInfo = new IMNImageInfo();
    imnInfo.img = "imnhdr.gif";;
    imnInfo.alt = "";
    return imnInfo;
}

function IMNIsOnlineState(state) {
    ULSxSy: ;
    if (state == 1) {
        return false;
    }
    return true;
}

function IMNSortList(j, oldState, state) {
    ULSxSy: ;
    var objTable = null;
    var objRow = null;
    if (IMNSortableObj && IMNSortableObj[j]) {
        objRow = document.getElementById(j);
        while (objRow && !(objRow.tagName == "TR" &&
            typeof(objRow.Sortable) != "undefined")) {
            objRow = objRow.parentNode;
        }
        objTable = objRow;
        while (objTable && objTable.tagName != "TABLE") {
            objTable = objTable.parentNode;
        }
        if (objTable != null && objRow != null) {
            if (objTable.rows[1].style.display == "none") {
                for (i = 1; i < 4; i++) {
                    objTable.rows[i].style.display = "block";
                }
            }
            if (!IMNIsOnlineState(oldState) && IMNIsOnlineState(state)) {
                objTable.rows[2].style.display = "none";
                i = 3;
                while (objTable.rows[i].id != "Offline" && objTable.rows[i].innerText < objRow.innerText)
                    i++;
                objTable.moveRow(objRow.rowIndex, i);
                if (objTable.rows[objTable.rows.length - 3].id == "Offline") {
                    objTable.rows[objTable.rows.length - 2].style.display = "block";
                }
            } else if (IMNIsOnlineState(oldState) && !IMNIsOnlineState(state)) {
                if (objRow.rowIndex == 3 &&
                    objTable.rows[objRow.rowIndex + 1].id == "Offline") {
                    objTable.rows[2].style.display = "block";
                }
                if (objTable.rows[objTable.rows.length - 3].id == "Offline") {
                    objTable.rows[objTable.rows.length - 2].style.display = "none";
                }
                i = objTable.rows.length - 2;
                while (objTable.rows[i - 1].id != "Offline" && objTable.rows[i].innerText > objRow.innerText)
                    i--;
                objTable.moveRow(objRow.rowIndex, i);
            }
        }
    }
}

function IMNOnStatusChange(name, state, id) {
    ULSxSy: ;
    if (IMNDictionaryObj) {
        var img = IMNGetStatusImage(state, IMNSortableObj[id] ||
            IMNShowOfflineObj[id]);
        if (IMNDictionaryObj[id] != state) {
            if (bIMNSorted)
                IMNSortList(id, IMNDictionaryObj[id], state);
            IMNUpdateImage(id, img);
            IMNDictionaryObj[id] = state;
        }
    }
}

function IMNUpdateImage(id, imgInfo) {
    ULSxSy: ;
    var obj = document.images[id];
    if (obj) {
        var img = imgInfo.img;
        var alt = imgInfo.alt;
        var oldImg = obj.src;
        if (typeof(obj.src) == "undefined")
            oldImg = obj.item(0).src;
        var index = oldImg.lastIndexOf("/");
        var newImg = oldImg.slice(0, index + 1);
        newImg += img;
        if (oldImg == newImg && img != 'blank.gif')
            return;
        if (obj.altbase) {
            obj.alt = obj.altbase;
        } else {
            obj.alt = alt;
        }
        var useFilter = browseris.ie &&
            browseris.ie55up &&
            browseris.verIEFull < 7.0;
        var isPng = (newImg.toLowerCase().indexOf(".png") > 0);
        if (useFilter) {
            if (isPng) {
                obj.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src=" + newImg + "),sizingMethod=scale,enabled=true);";
                obj.src = "/_layouts/images/blank.gif";
            } else {
                obj.style.filter = "";
                obj.src = newImg;
            }
        } else {
            obj.src = newImg;
        }
    }
}

function IMNHandleAccelerator(objEvent) {
    ULSxSy: ;
    if (IMNControlObj) {
        var currEvent = GetCurrentEvent(objEvent);
        if (currEvent.altKey && currEvent.shiftKey &&
            currEvent.keyCode == 121) {
            IMNControlObj.DoAccelerator();
        }
    }
}

function IMNImageOnClick(objEvent) {
    ULSxSy: ;
    if (IMNControlObj) {
        IMNShowOOUIKyb(objEvent);
        IMNControlObj.DoAccelerator();
    }
}

function IMNGetOOUILocation(obj) {
    ULSxSy: ;
    var objRet = new Object;
    var objSpan = obj;
    var objOOUI = obj;
    var oouiX = 0,
        oouiY = 0,
        objDX = 0;
    var fRtl = document.dir == "rtl";
    while (objSpan && objSpan.tagName != "SPAN" && objSpan.tagName != "TABLE") {
        if (objSpan.tagName == "TD" && objSpan.className.indexOf("ms-vb") >= 0)
            break;
        objSpan = objSpan.parentNode;
    }
    if (objSpan) {
        var childNode = objSpan.tagName == "TABLE" ?
            objSpan.rows(0).cells(0).firstChild :
            objSpan.firstChild;
        while (childNode != null) {
            if (childNode.tagName == "IMG" && childNode.id) {
                objOOUI = childNode;
                break;
            }
            if (childNode.tagName == "A" &&
                childNode.childNodes.length > 0 &&
                childNode.firstChild.tagName == "IMG" &&
                childNode.firstChild.id) {
                objOOUI = childNode.firstChild;
                break;
            }
            childNode = childNode.nextSibling;
        }
    }
    obj = objOOUI;
    oouiY = objOOUI.getBoundingClientRect().top - 5;
    oouiX = objOOUI.getBoundingClientRect().left - 5;
    try {
        var currentWindow = window;
        while (currentWindow && currentWindow != currentWindow.parent) {
            var iframe = currentWindow.frameElement;
            var iframebcr = iframe ? iframe.getBoundingClientRect() : null;
            var iframetop = iframebcr ? iframebcr.top : 0;
            var iframeleft = iframebcr ? iframebcr.left : 0;
            oouiY += iframetop;
            oouiX += iframeleft;
            currentWindow = currentWindow.parent;
        }
    } catch (e) {};
    objRet.objSpan = objSpan;
    objRet.objOOUI = objOOUI;
    objRet.oouiX = oouiX;
    objRet.oouiY = oouiY;
    return objRet;
}

function IMNShowOOUIMouse(objEvent) {
    ULSxSy: ;
    IMNShowOOUI(objEvent, 0);
}

function IMNShowOOUIKyb(objEvent) {
    ULSxSy: ;
    IMNShowOOUI(objEvent, 1);
}

function IMNShowOOUI(objEvent, inputType) {
    ULSxSy: ;
    if ((browseris.ie5up) || IsSupportedMacBrowser()) {
        var currEvent = GetCurrentEvent(objEvent);
        var obj = GetEventTarget(currEvent);
        var objSpan = obj;
        var objOOUI = obj;
        var oouiX = 0,
            oouiY = 0;
        if (EnsureIMNControl() && IMNNameDictionaryObj) {
            var objRet = IMNGetOOUILocation(obj);
            objSpan = objRet.objSpan;
            objOOUI = objRet.objOOUI;
            oouiX = objRet.oouiX;
            oouiY = objRet.oouiY;
            var name = IMNNameDictionaryObj[objOOUI.id];
            if (objSpan)
                objSpan.onkeydown = IMNHandleAccelerator;
            IMNControlObj.ShowOOUI(name, inputType, oouiX, oouiY);
        }
    }
}

function IMNHideOOUI() {
    ULSxSy: ;
    if (IMNControlObj) {
        IMNControlObj.HideOOUI();
        return false;
    }
    return true;
}

function IMNScroll() {
    ULSxSy: ;
    if (!bIMNInScrollFunc) {
        bIMNInScrollFunc = true;
        IMNHideOOUI();
    }
    bIMNInScrollFunc = false;
    if (IMNOrigScrollFunc == IMNScroll)
        return true;
    return IMNOrigScrollFunc ? IMNOrigScrollFunc() : true;
}
var imnCount = 0;
var imnElems;
var imnElemsCount = 0;
var imnMarkerBatchSize = 4;
var imnMarkerBatchDelay = 40;

function ProcessImn() {
    ULSxSy: ;
    imnCount = 0;
    imnElems = document.getElementsByName("imnmark");
    imnElemsCount = imnElems.length;
    if (EnsureIMNControl() && IMNControlObj.PresenceEnabled) {
        ProcessImnMarkers();
    } else {
        RemoveImnAnchors();
    }
}

function RemoveImnAnchors() {
    ULSxSy: ;
    for (var i = 0; i < imnElemsCount; i++) {
        var imnImg = imnElems[i];
        var imnAnchor = imnImg.parentNode;
        var beforeElem = imnAnchor.nextSibling;
        var parentElem = imnAnchor.parentNode;
        if ((imnAnchor != null) && (imnAnchor.tagName == "A") && (imnAnchor.childNodes.length == 1) && (parentElem != null)) {
            if (beforeElem != null)
                parentElem.insertBefore(imnImg, beforeElem);
            else
                parentElem.appendChild(imnImg);
            parentElem.removeChild(imnAnchor);
        }
    }
}

function ProcessImnMarkers() {
    ULSxSy: ;
    for (var i = 0; i < imnMarkerBatchSize; ++i) {
        if (imnCount == imnElemsCount)
            return;
        if (IsSupportedMacBrowser())
            IMNRC(imnElems[imnCount].getAttribute("sip"), imnElems[imnCount]);
        else
            IMNRC(imnElems[imnCount].sip, imnElems[imnCount]);
        imnCount++;
    }
    setTimeout("ProcessImnMarkers()", imnMarkerBatchDelay);
}

function IMNRC(name, elem) {
    ULSxSy: ;
    if (name == null || name == '')
        return;
    if (typeof(g_presenceEnabled) == "undefined" || !g_presenceEnabled)
        return;
    if ((browseris.ie5up) || IsSupportedMacBrowser()) {
        var obj = (elem) ? elem : window.event.srcElement;
        var objSpan = obj;
        var id = obj.id;
        if (!IMNDictionaryObj) {
            IMNDictionaryObj = new Object();
            IMNNameDictionaryObj = new Object();
            IMNSortableObj = new Object();
            IMNShowOfflineObj = new Object();
            if (!IMNOrigScrollFunc) {
                IMNOrigScrollFunc = window.onscroll;
                window.onscroll = IMNScroll;
            }
        }
        if (IMNDictionaryObj) {
            if (!IMNNameDictionaryObj[id]) {
                IMNNameDictionaryObj[id] = name;
            }
            if (typeof(IMNDictionaryObj[id]) == "undefined") {
                IMNDictionaryObj[id] = 1;
            }
            if (!IMNSortableObj[id] &&
                (typeof(obj.Sortable) != "undefined")) {
                IMNSortableObj[id] = obj.Sortable;
                if (!bIMNOnloadAttached) {
                    if (EnsureIMNControl() && IMNControlObj.PresenceEnabled)
                        AttachEvent("load", IMNSortTable, window);
                    bIMNOnloadAttached = true;
                }
            }
            if (!IMNShowOfflineObj[id] &&
                (typeof(obj.ShowOfflinePawn) != "undefined")) {
                IMNShowOfflineObj[id] = obj.ShowOfflinePawn;
            }
            if (EnsureIMNControl() && IMNControlObj.PresenceEnabled) {
                var state = 1,
                    img;
                state = IMNControlObj.GetStatus(name, id);
                if (IMNIsOnlineState(state) || IMNSortableObj[id] ||
                    IMNShowOfflineObj[id]) {
                    img = IMNGetStatusImage(state, IMNSortableObj[id] ||
                        IMNShowOfflineObj[id]);
                    IMNUpdateImage(id, img);
                    IMNDictionaryObj[id] = state;
                }
            }
        }
        var objRet = IMNGetOOUILocation(obj);
        SetImnOnClickHandler(objRet.objOOUI);
        objSpan = objRet.objSpan;
        if (objSpan) {
            objSpan.onmouseover = IMNShowOOUIMouse;
            objSpan.onfocusin = IMNShowOOUIKyb;
            objSpan.onmouseout = IMNHideOOUI;
            objSpan.onfocusout = IMNHideOOUI;
        }
    }
}

function SetImnOnClickHandler(imgNode) {
    ULSxSy: ;
    var parent = imgNode.parentNode;
    if (parent.tagName == "A") {
        if (typeof(parent.onclick) == "undefined") {
            parent.onclick = IMNImageOnClickHandler;
        }
    } else {
        var anchor = document.createElement("a");
        anchor.onclick = IMNImageOnClickHandler;
        anchor.className = "ms-imnlink";
        anchor.href = "javascript:;";
        parent.insertBefore(anchor, imgNode);
        anchor.appendChild(imgNode);
    }
}

function IMNImageOnClickHandler(objEvent) {
    ULSxSy: ;
    IMNImageOnClick(objEvent);
    return false;
}

function IMNSortTable() {
    ULSxSy: ;
    var id;
    for (id in IMNDictionaryObj) {
        IMNSortList(id, 1, IMNDictionaryObj[id]);
    }
    bIMNSorted = true;
}

function IMNRegisterHeader(objEvent) {
    ULSxSy: ;
    if ((browseris.ie5up) || IsSupportedMacBrowser()) {
        var currEvent = GetCurrentEvent(objEvent);
        var obj = GetEventTarget(currEvent);
        if (!IMNHeaderObj) {
            IMNHeaderObj = new Object();
        }
        if (IMNHeaderObj) {
            var id = obj.id;
            IMNHeaderObj[id] = id;
            var img;
            img = IMNGetHeaderImage();
            IMNUpdateImage(id, img);
        }
    }
}
var _spBodyOnLoadFunctionNames;
var _spBodyOnLoadCalled = false;
if (_spBodyOnLoadFunctionNames == null) {
    _spBodyOnLoadFunctionNames = new Array();
    _spBodyOnLoadFunctionNames.push("_spBodyOnLoad");
    _spBodyOnLoadFunctionNames.push("_spRestoreScrollForDiv_rscr");
}
var _spOriginalFormAction;
var _spEscapedFormAction;
var _spFormOnSubmitCalled = false;
var _spBodyOnPageShowRegistered = false;

function _spBodyOnPageShow(evt) {
    ULSxSy: ;
    _spFormOnSubmitCalled = false;
}

function _spResetFormOnSubmitCalledFlag(sender, e) {
    ULSxSy: ;
    _spFormOnSubmitCalled = false;
}

function _ribbonReadyForInit() {
    ULSxSy: ;
    return _spBodyOnLoadCalled;
}
var _spBodyOnLoadCalled = false;

function _spBodyOnLoadWrapper() {
    ULSxSy: ;
    _spBodyOnLoadCalled = true;
    if (!_spBodyOnPageShowRegistered &&
        typeof(browseris) != "undefined" && !browseris.ie &&
        typeof(window.addEventListener) == 'function') {
        window.addEventListener('pageshow', _spBodyOnPageShow, false);
        _spBodyOnPageShowRegistered = true;
    }
    if (typeof(Sys) != "undefined" &&
        typeof(Sys.WebForms) != "undefined" &&
        typeof(Sys.WebForms.PageRequestManager) != "undefined") {
        var pageRequestMgr = Sys.WebForms.PageRequestManager.getInstance();
        if (!_spPageLoadedRegistered && pageRequestMgr != null) {
            pageRequestMgr.add_pageLoaded(_spPageLoaded);
            _spPageLoadedRegistered = true;
        }
    }
    if (!_spPageLoadedRegistered) {
        _spPageLoaded();
    }
    _spFormOnSubmitCalled = false;
    if (typeof(Sys) != "undefined" &&
        typeof(Sys.Net) != "undefined" &&
        typeof(Sys.Net.WebRequestManager) != "undefined") {
        Sys.Net.WebRequestManager.add_invokingRequest(_spResetFormOnSubmitCalledFlag);
    }
    if (typeof(NotifyBodyLoadedAndExecuteWaitingJobs) != "undefined") {
        NotifyBodyLoadedAndExecuteWaitingJobs();
    }
    ExecuteOrDelayUntilScriptLoaded(ProcessDefaultOnLoad, "core.js");
    if (typeof(g_prefetch) == "undefined" || g_prefetch == 1) {
        var prefetch = _spGetQueryParam("prefetch");
        if (prefetch != 0)
            _spPreFetch();
    }
}

function _spPreFetch() {
    ULSxSy: ;
    window.setTimeout(function() {
            ULSxSy: ;
            if (_v_dictSod) {
                var sodCore = _v_dictSod["core.js"];
                if (typeof(sodCore) != "undefined" && sodCore) {
                    LoadSod(sodCore);
                }
                if (typeof(ribbon) == "undefined") {
                    var sod = _v_dictSod["ribbon"];
                    if (typeof(sod) != "undefined" && sod) {
                        LoadSod(sod);
                    }
                }
            }
        },
        0);
    if (typeof(_ribbon) != "undefined" && _ribbon) {
        window.setTimeout(function() {
                ULSxSy: ;
                if (document.images && IsFullNameDefined('_spPageContextInfo.currentLanguage')) {
                    imgRibbon32x32 = new Image();
                    imgRibbon32x32.src = "/_layouts/" + _spPageContextInfo.currentLanguage + "/images/formatmap32x32.png";
                    imgRibbon16x16 = new Image();
                    imgRibbon16x16.src = "/_layouts/" + _spPageContextInfo.currentLanguage + "/images/formatmap16x16.png";
                }
            },
            0);
    }
}

function _spGetQueryParam(p) {
    ULSxSy: ;
    var q = window.location.search.substring(1);
    if (q && q.length > 2) {
        var params = q.split("&");
        var l = params.length;
        for (var i = 0; i < l; i++) {
            var pair = params[i].split("=");
            if (pair[0].toLowerCase() == p)
                return pair[1];
        }
    }
}
var _spSuppressFormOnSubmitWrapper = false;

function _spFormOnSubmitWrapper() {
    ULSxSy: ;
    if (_spSuppressFormOnSubmitWrapper) {
        return true;
    }
    if (_spFormOnSubmitCalled) {
        return false;
    }
    if (typeof(_spFormOnSubmit) == "function") {
        var retval = _spFormOnSubmit();
        var testval = false;
        if (typeof(retval) == typeof(testval) && retval == testval) {
            return false;
        }
    }
    _spFormOnSubmitCalled = true;
    return true;
}
var _inlineEditString = null;
var _spPageLoadedRegistered = false;

function _spPageLoaded() {
    ULSxSy: ;
    _spOriginalFormAction = null;
    EscapeFormAction();
    RefreshInplViewState();
    RefreshHeroButtonState();
    InlineEditSetDefaultFocus();
}

function InlineEditSetDefaultFocus() {
    ULSxSy: ;
    if (_inlineEditString != null) {
        var index = _inlineEditString.indexOf("#");
        if (index <= 0)
            return;
        var iidVal = _inlineEditString.substring(0, index);
        var trs = document.getElementsByTagName("TR");
        for (var i = 0; i < trs.length; i++) {
            if (trs[i].getAttribute("automode") == iidVal) {
                var nodeWalkStr = _inlineEditString.substring(index + 1);
                var nodeWalks = nodeWalkStr.split(",");
                var node = trs[i];
                for (var j = 0; j < nodeWalks.length; j++) {
                    if (node == null)
                        break;
                    node = node.firstChild;
                    for (var k = 0; k < nodeWalks[j]; k++) {
                        if (node == null)
                            break;
                        node = node.nextSibling;
                    }
                }
                if (node != null)
                    focusControl(node);
                break;
            }
        }
        _inlineEditString = null;
    }
}

function focusControl(targetControl) {
    ULSxSy: ;
    if (Sys.Browser.agent === Sys.Browser.InternetExplorer) {
        var focusTarget = targetControl;
        if (focusTarget && (typeof(focusTarget.contentEditable) !== "undefined")) {
            oldContentEditableSetting = focusTarget.contentEditable;
            focusTarget.contentEditable = false;
        } else {
            focusTarget = null;
        }
        try {
            targetControl.focus();
        } catch (e) {}
        if (focusTarget) {
            focusTarget.contentEditable = oldContentEditableSetting;
        }
    } else {
        targetControl.focus();
    }
}

function EscapeFormAction() {
    ULSxSy: ;
    if (document.forms.length > 0 && !_spOriginalFormAction) {
        _spOriginalFormAction = document.forms[0].action;
        var url = window.location.href;
        var index = url.indexOf("://");
        if (index >= 0) {
            var temp = url.substring(index + 3);
            index = temp.indexOf("/");
            if (index >= 0)
                url = temp.substring(index);
            if (url.length > 2 && url.charAt(0) == '/' && url.charAt(1) == '/') {
                url = url.substring(1);
            }
        }
        _spEscapedFormAction = escapeUrlForCallback(url);
        document.forms[0].action = _spEscapedFormAction;
        document.forms[0]._initialAction = document.forms[0].action;
    }
}

function RefreshHeroButtonState() {
    ULSxSy: ;
    if (typeof(_spWebPartComponents) != "undefined") {
        for (var wp in _spWebPartComponents) {
            if (wp.length > 7) {
                var strId = wp.substr(7);
                var heroButton = window["heroButtonWebPart" + strId];
                if (typeof(heroButton) != "undefined" && heroButton != null && heroButton == true) {
                    var ele = document.getElementById("Hero-" + strId);
                    if (ele != null)
                        ele.style.display = "";
                }
            }
        }
    }
}

function RefreshInplViewState() {
    ULSxSy: ;
    if (typeof(ctx) != "undefined" && ctx.clvp != null && (ctx.clvp.tab == null ||
        (ctx.clvp.tab != null && (ctx.clvp.tab.parentNode == null ||
            ctx.clvp.tab.parentNode.innerHTML == null)))) {
        FixDroppedOrPastedClvps(null);
        if (ctx.dictSel != null) {
            ctx.dictSel = [];
            ctx.CurrentSelectedItems = 0;
        }
    }
}

function RestoreToOriginalFormAction() {
    ULSxSy: ;
    if (_spOriginalFormAction != null) {
        if (_spEscapedFormAction == document.forms[0].action) {
            document.forms[0].action = _spOriginalFormAction;
            document.forms[0]._initialAction = document.forms[0].action;
        }
        _spOriginalFormAction = null;
        _spEscapedFormAction = null;
    }
}

function DefaultFocus() {
    ULSxSy: ;
    if (typeof(_spUseDefaultFocus) != "undefined") {
        var elements = document.getElementsByName("_spFocusHere");
        var elem = null;
        if (elements == null || elements.length <= 0) {
            elem = document.getElementById("_spFocusHere");
        } else if (elements != null && elements.length > 0) {
            elem = elements[0];
        }
        if (elem != null) {
            var aLinks = elem.getElementsByTagName("a");
            if (aLinks != null && aLinks.length > 0) {
                for (var i = 0; i < aLinks.length; i++) {
                    if (aLinks[i].style.visibility != "hidden") {
                        try {
                            aLinks[i].focus();
                        } catch (e) {}
                        break;
                    }
                }
            }
        }
    }
}

function ProcessDefaultOnLoad() {
    ULSxSy: ;
    ProcessPNGImages();
    UpdateAccessibilityUI();
    window.setTimeout('ProcessImn()', 10);
    ProcessOnLoadFunctions(_spBodyOnLoadFunctionNames);
    if (typeof(_spUseDefaultFocus) != "undefined")
        DefaultFocus();
}

function ProcessOnLoadFunctions(onLoadFunctionNames) {
    ULSxSy: ;
    for (var i = 0; i < onLoadFunctionNames.length; i++) {
        var expr = "if(typeof(" + onLoadFunctionNames[i] + ")=='function'){" + onLoadFunctionNames[i] + "();}";
        eval(expr);
    }
    onLoadFunctionNames = [];
}

function CoreInvoke(fn) {
    ULSxSy: ;
    var args = Array.prototype.slice.call(arguments, 1);
    var _corefn = function() {
        ULSxSy: ;
        window[fn].apply(null, args);
    };
    if (TypeofFullName(fn) == 'function')
        return window[fn].apply(null, args);
    else {
        EnsureScript("core.js", 'undefined', _corefn);
        return false;
    }
}

function ToggleDeveloperDashboard() {
    ULSxSy: ;
    if (GetCookie('WSS_DeveloperDashboard') == "true") {
        document.cookie = 'WSS_DeveloperDashboard=false';
        window.location.reload(true);
    } else {
        document.cookie = 'WSS_DeveloperDashboard=true';
        window.location.reload(true);
    }
}

function ToggleTrace() {
    ULSxSy: ;
    if (GetCookie('WSS_DeveloperDashboardTrace') == "true") {
        document.cookie = 'WSS_DeveloperDashboardTrace=false';
        window.location.reload(true);
    } else {
        document.cookie = 'WSS_DeveloperDashboardTrace=true';
        window.location.reload(true);
    }
}

function DevDashMoveTrace() {
    ULSxSy: ;
    var traceDiv = document.getElementById("__asptrace");
    var devDashDiv = document.getElementById("DeveloperDashboard");
    if (typeof(devDashDiv) != 'undefined' && devDashDiv) {
        if (typeof(traceDiv) != 'undefined' && traceDiv) {
            var traceParent = traceDiv.parentNode;
            if (typeof(traceParent) != 'undefined' && traceParent) {
                traceParent.removeChild(traceDiv);
                devDashDiv.appendChild(traceDiv);
            }
        }
    }
}

function SetSqlWindowText(textTitle, text, stackTitle, stack, ioTitle, io) {
    ULSxSy: ;
    var sqlWindow = document.sqlWindow;
    if (!sqlWindow || sqlWindow.closed) {
        sqlWindow = window.open('', '', 'width=800,height=770,status=yes,location=no,scrollbar=yes,resize=yes');
        document.sqlWindow = sqlWindow;
    }
    var sqlDocument = sqlWindow.document;
    var sqlText = sqlDocument.getElementById("sqlText");
    var sqlStack = sqlDocument.getElementById("sqlStack");
    if (typeof(sqlText) == 'undefined' || !sqlText) {
        sqlDocument.open();
        sqlDocument.write('<html><head><link rel="stylesheet" type="text/css" href="/_layouts/1033/styles/layouts.css"/></head><body><div class="ms-developerdashboard"><table width="100%"><tr><td style="font-weight:bold">');
        sqlDocument.write(textTitle);
        sqlDocument.write('</td></tr><tr><td><textarea id="sqlText" rows="18" cols="94"></textarea></td></tr>');
        if (typeof(stack) != 'undefined' && stack) {
            sqlDocument.write('<tr><td style="font-weight:bold">');
            sqlDocument.write(stackTitle);
            sqlDocument.write('</td></tr><tr><td><textarea id="sqlStack" rows="14" cols="94"></textarea></td></tr>');
        }
        if (typeof(io) != 'undefined' && io) {
            sqlDocument.write('<tr><td style="font-weight:bold">');
            sqlDocument.write(ioTitle);
            sqlDocument.write('</td></tr><tr><td><textarea id="sqlIO" rows="8" cols="94"></textarea></td></tr>');
        }
        sqlDocument.write('</table></div></body></html>');
        sqlDocument.close();
        sqlText = sqlDocument.getElementById("sqlText");
        sqlStack = sqlDocument.getElementById("sqlStack");
        sqlIO = sqlDocument.getElementById("sqlIO");
    }
    sqlText.value = text;
    if (typeof(sqlStack) != 'undefined' && sqlStack)
        sqlStack.value = stack;
    if (typeof(sqlIO) != 'undefined' && sqlIO)
        sqlIO.value = io;
    sqlWindow.focus();
}
var flyoutsAllowed = false;

function enableFlyoutsAfterDelay() {
    ULSxSy: ;
    setTimeout("flyoutsAllowed=true;", 25);
}

function overrideMenu_HoverStatic(item) {
    ULSxSy: ;
    if (!flyoutsAllowed) {
        setTimeout(delayMenu_HoverStatic(item), 50);
    } else {
        var node = Menu_HoverRoot(item);
        var data = Menu_GetData(item);
        if (!data) return;
        __disappearAfter = data.disappearAfter;
        Menu_Expand(node, data.horizontalOffset, data.verticalOffset);
    }
}

function delayMenu_HoverStatic(item) {
    ULSxSy: ;
    return (function() {
        ULSxSy: ;
        overrideMenu_HoverStatic(item);
    });
}
var g_ExecuteOrWaitJobs = new Object();

function ExecuteOrDelayUntilEventNotified(func, eventName) {
    ULSxSy: ;
    var executed = false;
    var eventInfo = g_ExecuteOrWaitJobs[eventName];
    if (eventInfo == null || typeof(eventInfo) == "undefined") {
        eventInfo = new Object();
        eventInfo.notified = false;
        eventInfo.jobs = new Array();
        eventInfo.jobs.push(func);
        g_ExecuteOrWaitJobs[eventName] = eventInfo;
    } else {
        if (eventInfo.notified) {
            func();
            executed = true;
        } else {
            eventInfo.jobs.push(func);
        }
    }
    return executed;
}

function NotifyEventAndExecuteWaitingJobs(eventName) {
    ULSxSy: ;
    if (!g_ExecuteOrWaitJobs)
        return;
    var eventInfo = g_ExecuteOrWaitJobs[eventName];
    if (eventInfo == null || typeof(eventInfo) == "undefined") {
        eventInfo = new Object();
        eventInfo.notified = true;
        eventInfo.jobs = new Array();
        g_ExecuteOrWaitJobs[eventName] = eventInfo;
    } else {
        if (eventInfo.jobs != null) {
            for (var i = 0; i < eventInfo.jobs.length; i++) {
                var func = eventInfo.jobs[i];
                func();
            }
        }
        eventInfo.notified = true;
        eventInfo.jobs = new Array();
    }
}

function ExecuteOrDelayUntilScriptLoaded(func, depScriptFileName) {
    ULSxSy: ;
    depScriptFileName = depScriptFileName.toLowerCase();
    var eventName = "sp.scriptloaded-" + depScriptFileName;
    return ExecuteOrDelayUntilEventNotified(func, eventName);
}

function NotifyScriptLoadedAndExecuteWaitingJobs(scriptFileName) {
    ULSxSy: ;
    scriptFileName = scriptFileName.toLowerCase();
    var eventName = "sp.scriptloaded-" + scriptFileName;
    NotifyEventAndExecuteWaitingJobs(eventName);
}

function ExecuteOrDelayUntilBodyLoaded(func) {
    ULSxSy: ;
    var eventName = "sp.bodyloaded";
    return ExecuteOrDelayUntilEventNotified(func, eventName);
}

function NotifyBodyLoadedAndExecuteWaitingJobs() {
    ULSxSy: ;
    var eventName = "sp.bodyloaded";
    NotifyEventAndExecuteWaitingJobs(eventName);
}

function FFClick(elm) {
    ULSxSy: ;
    var evt = document.createEvent("MouseEvents");
    evt.initMouseEvent("click", true, true, window,
        0, 0, 0, 0, 0, false, false, false, false, 0, null);
    elm.dispatchEvent(evt);
}
var L_ErrorMessage_InitializeError = "Could not download the Silverlight application.";
var L_ErrorMessage_PluginNotLoadedError = "Could not download the Silverlight application or the Silverlight Plugin did not load.";

function _spOnSilverlightError(webPartId, sender, args) {
    ULSxSy: ;
    if (args.errorType == "InitializeError") {
        _spSetSLErrorMessage(webPartId, L_ErrorMessage_InitializeError);
    }
}

function _spSetSLPluginNotLoadedErrorMessage(webPartId) {
    ULSxSy: ;
    _spSetSLErrorMessage(webPartId, L_ErrorMessage_PluginNotLoadedError);
}

function _spSetSLErrorMessage(webPartId, strErrorMessage) {
    ULSxSy: ;
    var strSilverlightErrorDivId = "SilverlightRuntimeErrorMessage_" + webPartId;
    var strDefaultConfigurationMessageDivId = "WebPartDefaultConfigurationMessage_" + webPartId;
    var strSilverlightObjectDivId = "SilverlightObjectDiv_" + webPartId;
    document.getElementById(strSilverlightObjectDivId).style.display = "none";
    document.getElementById(strSilverlightErrorDivId).style.display = "block";
    document.getElementById(strSilverlightErrorDivId).innerHTML = strErrorMessage;
    document.getElementById(strDefaultConfigurationMessageDivId).style.display = "block";
}
var cuiKeyHash = {};
cuiKeyHash[219] = 91;
cuiKeyHash[221] = 93;
cuiKeyHash[51] = 35;
cuiKeyHash[186] = 59;
cuiKeyHash[187] = 61;
cuiKeyHash[188] = 44;
cuiKeyHash[189] = 45;
cuiKeyHash[190] = 46;
cuiKeyHash[191] = 47;
cuiKeyHash[222] = 39;

function _processKeyCodes(val) {
    ULSxSy: ;
    if (cuiKeyHash[val])
        return cuiKeyHash[val];
    return val;
}
var g_fhs;

function _ribbonScaleHeader(elmTopBars, isRtl) {
    ULSxSy: ;
    var elmTopBar2 = elmTopBars.childNodes[1];
    var len = elmTopBar2.childNodes.length;
    var elmTabHeaders = null;
    var elmTabRowRight = null;
    if (typeof(isRtl) == 'undefined')
        isRtl = false;
    if (typeof(g_fhs) == 'undefined') {
        if (typeof(_ribbonShouldFixRtlHeaders) == 'function')
            g_fhs = _ribbonShouldFixRtlHeaders(isRtl);
        else
            g_fhs = false;
    }
    for (var i = 0; i < len; i++) {
        var child = elmTopBar2.childNodes[i];
        if (child.className.indexOf('ms-cui-tts') != -1)
            elmTabHeaders = child;
        else if (child.className.indexOf('ms-cui-TabRowRight') != -1)
            elmTabRowRight = child;
    }
    if (elmTabHeaders && 'undefined' == typeof(elmTabHeaders._widthAdded) && g_fhs)
        _ribbonFixHeaderWidth(elmTabHeaders);
    if (!elmTabHeaders || !elmTabRowRight)
        return;
    elmTabRowRight.style.display = 'block';
    var needsScaling = _ribbonNeedsHeaderScaling(elmTopBar2, elmTabHeaders, elmTabRowRight, isRtl);
    if (needsScaling) {
        _ribbonHeaderScaleDown(elmTabHeaders);
        if (_ribbonNeedsHeaderScaling(elmTopBar2, elmTabHeaders, elmTabRowRight, isRtl)) {
            _ribbonHeaderScaleDown(elmTabHeaders);
        }
    } else {
        if (_ribbonGetScaleStep(elmTabHeaders) == 0)
            return;
        _ribbonHeaderScaleUp(elmTabHeaders);
        if (_ribbonNeedsHeaderScaling(elmTopBar2, elmTabHeaders, elmTabRowRight, isRtl)) {
            _ribbonHeaderScaleDown(elmTabHeaders);
            return;
        }
        if (_ribbonGetScaleStep(elmTabHeaders) == 0)
            return;
        _ribbonHeaderScaleUp(elmTabHeaders);
        if (_ribbonNeedsHeaderScaling(elmTopBar2, elmTabHeaders, elmTabRowRight, isRtl))
            _ribbonHeaderScaleDown(elmTabHeaders);
    }
    if (_ribbonNeedsHeaderScaling(elmTopBar2, elmTabHeaders, elmTabRowRight, isRtl)) {
        elmTabRowRight.style.display = 'none';
    }
}

function _ribbonNeedsHeaderScaling(elmTopBar2, elmTabHeaders, elmTabRowRight, isRtl) {
    ULSxSy: ;
    if (elmTabHeaders.offsetWidth > 0 &&
        elmTabRowRight.offsetWidth > 0 &&
        _ribbonElementsWrap(elmTabHeaders, elmTabRowRight, isRtl)) {
        return true;
    }
    if (!g_fhs && _ribbonChildNodesWrapped(elmTabRowRight, isRtl))
        return true;
    if (_ribbonChildNodesWrapped(elmTopBar2, isRtl))
        return true;
    return _ribbonChildNodesWrapped(elmTabHeaders, isRtl);
}

function _ribbonChildNodesWrapped(elmParent, isRtl) {
    ULSxSy: ;
    if (elmParent.offsetWidth == 0)
        return false;
    var elms = new Array();
    var length = elmParent.childNodes.length;
    for (var i = 0; i < length; i++) {
        var elmChild = elmParent.childNodes[i];
        if (elmChild &&
            elmChild.nodeName != '#text' &&
            elmChild.offsetWidth > 0 &&
            elmChild.offsetHeight > 0) {
            elms.push(elmChild);
        }
    }
    length = elms.length;
    for (var i = 0; i < length; i++) {
        var elmChild = elms[i];
        var elmSibling = elms[i + 1];
        if (typeof(elmSibling) != 'undefined' && elmSibling &&
            _ribbonElementsWrap(elmChild, elmSibling, isRtl)) {
            return true;
        }
    }
    return false;
}

function _ribbonElementsWrap(elmLeft, elmRight, isRtl) {
    ULSxSy: ;
    if (!isRtl && (elmLeft.offsetLeft + elmLeft.offsetWidth > elmRight.offsetLeft))
        return true;
    else if (isRtl && (elmRight.offsetLeft + elmRight.offsetWidth > elmLeft.offsetLeft))
        return true;
    return false;
}

function _ribbonGetScaleStep(elm) {
    ULSxSy: ;
    if ('undefined' == typeof(elm._scaleStep)) {
        elm._scaleStep = 0;
        if (elm.className.indexOf('ms-cui-tts-scale1') != -1)
            elm._scaleStep = 1;
        else if (elm.className.indexOf('ms-cui-tts-scale2') != -1)
            elm._scaleStep = 2;
    }
    return elm._scaleStep;
}

function _ribbonSetScaleStep(elm, value) {
    ULSxSy: ;
    elm._scaleStep = value;
}

function _ribbonHeaderScaleDown(elmTabHeaders) {
    ULSxSy: ;
    var scaleStep = _ribbonGetScaleStep(elmTabHeaders);
    if (scaleStep == 0) {
        _ribbonHeaderScaleIndex(elmTabHeaders, 1);
    } else if (scaleStep == 1 || scaleStep == 2) {
        _ribbonHeaderScaleIndex(elmTabHeaders, 2);
    }
}

function _ribbonHeaderScaleUp(elmTabHeaders) {
    ULSxSy: ;
    var scaleStep = _ribbonGetScaleStep(elmTabHeaders);
    if (scaleStep == 1)
        _ribbonHeaderScaleIndex(elmTabHeaders, 0);
    else if (scaleStep == 2) {
        _ribbonHeaderScaleIndex(elmTabHeaders, 1);
    }
}
var g_ribbonHeaderScaleClass = ['ms-cui-tts', 'ms-cui-tts-scale-1', 'ms-cui-tts-scale-2'];

function _ribbonHeaderScaleIndex(elmTabHeaders, index) {
    ULSxSy: ;
    elmTabHeaders.className = g_ribbonHeaderScaleClass[index];
    _ribbonSetScaleStep(elmTabHeaders, index);
    _ribbonFixHeaderWidth(elmTabHeaders);
}

function _ribbonFixHeaderWidth(elmTabHeaders) {
    ULSxSy: ;
    if (!g_fhs)
        return;
    var width = _ribbonCalculateWidth(elmTabHeaders);
    elmTabHeaders.style.width = width + 'px';
    elmTabHeaders._widthAdded = true;
}

function _ribbonCalculateWidth(elmTabHeaders) {
    ULSxSy: ;
    var width = 0;
    var tabs = elmTabHeaders.childNodes;
    var length = tabs.length;
    for (var i = 0; i < length; i++) {
        var elm = tabs[i];
        if (elm &&
            elm.nodeName == 'LI' &&
            elm.offsetWidth > 0) {
            var ctxlGroup = elm.childNodes[1];
            if (ctxlGroup && ctxlGroup.nodeName == 'UL') {
                var groupWidth = _ribbonCalculateWidth(ctxlGroup);
                ctxlGroup.style.width = groupWidth + 'px';
                width = width + groupWidth + 4;
            } else {
                width = width + elm.offsetWidth + 2;
            }
        }
    }
    return width;
}

function _ribbonOnStartInit(ribbonInfo) {
    ULSxSy: ;
    OnRibbonMinimizedChanged(ribbonInfo.initialTabId == "Ribbon.Read");
    var _elmRibbon = document.getElementById("Ribbon");
    if (!_elmRibbon || (ribbonInfo && ribbonInfo.buildMinimized))
        return;
    var _elmTabCont = document.createElement("div");
    _elmTabCont.className = "ms-cui-tabContainer";
    var _elmBlankTab = document.createElement("ul");
    _elmBlankTab.id = "Ribbon.BlankTab";
    _elmBlankTab.className = "ms-cui-tabBody";
    _elmBlankTab.innerHTML = "<span class=\"ms-ribbontabswitchloading\"><img src=\"/_layouts/images/loadingcirclests16.gif\" alt=\"\"/><span>" + L_Loading_Text + "</span></span>";
    _elmTabCont.appendChild(_elmBlankTab);
    _elmRibbon.appendChild(_elmTabCont);
}
var L_Status_Text = " Status";
var L_StatusBarRed_Text = "Very Important";
var L_StatusBarYellow_Text = "Important";
var L_StatusBarGreen_Text = "Success";
var L_StatusBarBlue_Text = "Information";
var StatusIdWithTopPriority = null;
var StatusColorWithTopPriority = null;
var StatusPriority = {
    red: 4,
    yellow: 3,
    green: 2,
    blue: 1
};
var StatusBarClassNames = {
    4: "s4-status-s4",
    3: "s4-status-s3",
    2: "s4-status-s2",
    1: "s4-status-s1"
};
var StatusTitle = {
    4: L_StatusBarRed_Text,
    3: L_StatusBarYellow_Text,
    2: L_StatusBarGreen_Text,
    1: L_StatusBarBlue_Text
};
var g_uniqueIndex = 0;

function getUniqueIndex() {
    ULSxSy: ;
    g_uniqueIndex++;
    return g_uniqueIndex;
}

function addStatus(strTitle, strHtml, atBegining) {
    ULSxSy: ;
    var sb = document.getElementById("pageStatusBar");
    if (sb != null) {
        sb.setAttribute("aria-live", "polite");
        sb.setAttribute("aria-relevant", "all");
        var st = _createStatusMarkup(strTitle, strHtml, true);
        if (!atBegining)
            sb.appendChild(st);
        else {
            var refs = sb.getElementsByTagName("SPAN");
            var ref = refs.length > 0 ? refs[0] : null;
            if (ref != null)
                sb.insertBefore(st, ref);
            else
                sb.appendChild(st);
        }
        if (sb.childNodes.length == 1) {
            StatusIdWithTopPriority = st.id;
            StatusColorWithTopPriority = 1;
        }
        sb.style.display = "block";
        return st.id;
    }
}

function appendStatus(sid, strTitle, strHtml) {
    ULSxSy: ;
    var sb = document.getElementById("pageStatusBar");
    var stRef = document.getElementById(sid);
    if (sb != null && stRef != null) {
        var st = null;
        if (stRef.lastChild && stRef.lastChild.tagName == "BR") {
            stRef.removeChild(stRef.lastChild);
            st = _createStatusMarkup(strTitle, strHtml, true);
        } else {
            st = _createStatusMarkup(strTitle, strHtml, false);
        }
        if (stRef.nextSibling != null)
            sb.insertBefore(st, stRef.nextSibling);
        else
            sb.appendChild(st);
        return st.id;
    }
}

function _createStatusMarkup(strTitle, strHtml, bWithBR) {
    ULSxSy: ;
    var st = document.createElement("SPAN");
    st.id = "status_" + getUniqueIndex();
    var rg = [];
    rg.push("<span id='");
    rg.push(st.id);
    rg.push("_hiddenPriMsg");
    rg.push("' class='ms-hidden'>");
    rg.push(StatusTitle[1] + L_Status_Text);
    rg.push("</span>");
    if (strTitle.length != 0) {
        rg.push("<b>");
        rg.push(strTitle);
        rg.push("</b>&#160;");
    }
    rg.push("<span id='");
    rg.push(st.id);
    rg.push("_body");
    rg.push("'>");
    rg.push(strHtml);
    rg.push("</span>&#160;&#160;");
    if (bWithBR)
        rg.push("<br/>");
    st.innerHTML = rg.join("");
    st.setAttribute("role", "alert");
    st.priorityColor = 1;
    st.title = StatusTitle[1];
    st.tabIndex = 0;
    return st;
}

function removeAllStatus(hide) {
    ULSxSy: ;
    var sb = document.getElementById("pageStatusBar");
    if (sb != null) {
        sb.innerHTML = "";
        sb.className = StatusBarClassNames[1];
        StatusColorWithTopPriority = null;
        StatusIdWithTopPriority = null;
        if (hide)
            sb.style.display = "none";
    }
}

function setStatusPriColor(sid, strColor) {
    ULSxSy: ;
    var st = document.getElementById(sid);
    if (st != null && typeof(strColor) == 'string') {
        if (strColor in StatusPriority) {
            st.priorityColor = StatusPriority[strColor];
            st.title = StatusTitle[st.priorityColor];
        } else {
            st.priorityColor = 1;
            st.title = StatusTitle[1];
        }
        var hiddenSpan = st.firstChild;
        if (hiddenSpan != null && hiddenSpan.id == (sid + "_hiddenPriMsg")) {
            hiddenSpan.innerHTML = st.title + L_Status_Text;
        }
        if (sid == StatusIdWithTopPriority) {
            if (st.priorityColor >= StatusColorWithTopPriority)
                StatusColorWithTopPriority = st.priorityColor;
            else
                _selectStatusWithTopPriority();
        } else {
            if (st.priorityColor > StatusColorWithTopPriority) {
                StatusIdWithTopPriority = sid;
                StatusColorWithTopPriority = st.priorityColor;
            }
        }
        var sb = document.getElementById("pageStatusBar");
        if (sb)
            sb.className = StatusBarClassNames[StatusColorWithTopPriority];
    }
}

function _selectStatusWithTopPriority() {
    ULSxSy: ;
    var sb = document.getElementById("pageStatusBar");
    if (sb != null) {
        var statusId = null;
        var statusColor = 1;
        var statuses = sb.childNodes;
        var statusesLen = statuses.length;
        var status = null;
        for (var i = 0; i < statusesLen; i++) {
            status = statuses[i];
            if (status.priorityColor > statusColor) {
                statusColor = status.priorityColor;
                statusId = status.id;
            }
        }
        StatusIdWithTopPriority = statusId;
        StatusColorWithTopPriority = statusColor;
    }
}

function updateStatus(sid, strHtml) {
    ULSxSy: ;
    var bid = sid + "_body";
    var b = document.getElementById(bid);
    if (b)
        b.innerHTML = strHtml;
}

function removeStatus(sid) {
    ULSxSy: ;
    var st = document.getElementById(sid);
    if (st != null) {
        if (st.lastChild && st.lastChild.tagName == "BR") {
            var prevSt = st.previousSibling;
            if (prevSt && prevSt.lastChild && prevSt.lastChild.tagName != "BR") {
                var br = document.createElement("BR");
                prevSt.appendChild(br);
            }
        }
        st.parentNode.removeChild(st);
        var sb = document.getElementById("pageStatusBar");
        if (sb) {
            if (sb.getElementsByTagName("SPAN").length == 0) {
                sb.className = StatusBarClassNames[1];
                StatusColorWithTopPriority = null;
                StatusIdWithTopPriority = null;
                sb.style.display = "none";
            } else {
                if (sid == StatusIdWithTopPriority) {
                    _selectStatusWithTopPriority();
                    sb.className = StatusBarClassNames[StatusColorWithTopPriority];
                }
            }
        }
    }
}
var g_dlgWndTop = null;

function _dlgWndTop() {
    ULSxSy: ;
    if (g_dlgWndTop) {
        return g_dlgWndTop;
    }
    try {
        var parentIsDialogTop = window.parent.g_DialogWindowTop;
        if (parentIsDialogTop) {
            g_dlgWndTop = window.parent;
        }
    } catch (e) {} finally {
        if (!g_dlgWndTop) {
            window.self.g_DialogWindowTop = true;
            g_dlgWndTop = window.self;
        }
    }
    return g_dlgWndTop;
}

function commonShowModalDialog(url, features, callback, args) {
    ULSxSy: ;
    if (document.getElementById("__spPickerHasReturnValue") != null)
        document.getElementById("__spPickerHasReturnValue").value = "";
    if (document.getElementById("__spPickerReturnValueHolder") != null)
        document.getElementById("__spPickerReturnValueHolder").value = "";
    commonModalDialogReturnValue.clear();
    var rv;
    if (window.showModalDialog && !browseris.safari125up) {
        rv = window.showModalDialog(url, args, features);
        if (callback) {
            invokeModalDialogCallback(callback, rv);
        }
    } else {
        var defaultWidth = 500,
            defaultHeight = 550,
            defaultScrollbars = "yes";
        if (!features) features = "width=" + defaultWidth + ",height=" + defaultHeight;
        else {
            function assocArray() {
                ULSxSy: ;
                return new Array();
            }

            function assocArray_add(array, key, value) {
                ULSxSy: ;
                array.push(key);
                array[key] = value;
            }

            function assocArray_keys(array) {
                ULSxSy: ;
                var keys = new Array();
                for (var i = 0; i < array.length; i++) keys.push(array[i]);
                return keys;
            }
            var feats = assocArray(),
                fre, split;
            if (features.search(/^(\s*\w+\s*:\s*.+?\s*)(;\s*\s*\w+\s*:\s*.+?\s*)*(;\s*)?$/) != -1) {
                fre = /^\s*(\w+)\s*:\s*(.+?)\s*$/;
                split = features.split(/\s*;\s*/);
            } else {
                fre = /^\s*(\w+)\s*=\s*(.+?)\s*$/;
                split = features.split(/\s*,\s*/);
            }
            for (var feat in split) {
                var kv = fre.exec(split[feat]);
                if (kv && kv.length == 3) assocArray_add(feats, kv[1].toLowerCase(), kv[2]);
            }
            if (!feats["width"]) assocArray_add(feats, "width", feats["dialogwidth"] || defaultWidth);
            if (!feats["height"]) assocArray_add(feats, "height", feats["dialogheight"] || defaultHeight);
            if (!feats["scrollbars"]) assocArray_add(feats, "scrollbars", feats["scroll"] || defaultScrollbars);
            features = '';
            var keys = assocArray_keys(feats);
            for (var i in keys) {
                if (features) features += ",";
                features += keys[i] + "=" + feats[keys[i]];
            }
        }
        var modalDialog = window.open(url, '_blank', features + ',modal=yes,dialog=yes');
        modalDialog.dialogArguments = args;
        window.onfocus = function() {
            ULSxSy: ;
            var bHasReturnValue = ((document.getElementById("__spPickerHasReturnValue") != null) &&
                (document.getElementById("__spPickerHasReturnValue").value == "1")) || commonModalDialogReturnValue.isSet();
            if (modalDialog && !modalDialog.closed && !bHasReturnValue) {
                modalDialog.focus();
            } else {
                window.onfocus = null;
                if (callback) {
                    invokeModalDialogCallback(callback, rv);
                }
            }
        }
        if (!browseris.ie) {
            if (window.frameElement != null) {
                window.fndlgClose = callback;
            }
        }
    }
    return rv;
}

function invokeModalDialogCallback(callback, rv) {
    ULSxSy: ;
    if (typeof(rv) != "undefined" && rv != null) {
        callback(rv);
    } else if (commonModalDialogReturnValue.isSet()) {
        rv = commonModalDialogReturnValue.get();
        callback(rv);
        commonModalDialogReturnValue.clear();
    } else if (document.getElementById("__spPickerHasReturnValue") != null &&
        document.getElementById("__spPickerHasReturnValue").value == "1" &&
        document.getElementById("__spPickerReturnValueHolder") != null) {
        rv = document.getElementById("__spPickerReturnValueHolder").value;
        callback(rv);
    }
    return rv;
}

function setModalDialogReturnValue(wnd, returnValue) {
    ULSxSy: ;
    if (wnd.opener != null &&
        typeof(returnValue) == 'string' &&
        wnd.opener.document.getElementById('__spPickerHasReturnValue') != null &&
        wnd.opener.document.getElementById('__spPickerReturnValueHolder') != null) {
        wnd.opener.document.getElementById('__spPickerHasReturnValue').value = '1';
        wnd.opener.document.getElementById('__spPickerReturnValueHolder').value = returnValue;
    } else {
        setModalDialogObjectReturnValue(wnd, returnValue);
    }
    if (browseris.safari125up) {
        if (wnd.opener != null && wnd.opener.fndlgClose != null)
            wnd.opener.fndlgClose(returnValue);
    }
}

function setModalDialogObjectReturnValue(wnd, returnValue) {
    ULSxSy: ;
    if (wnd.showModalDialog && !browseris.safari125up) {
        wnd.returnValue = returnValue;
    } else if (wnd.opener != null) {
        wnd.opener.commonModalDialogReturnValue.set(returnValue);
    }
}

function CommonGlobalDialogReturnValue() {
    ULSxSy: ;
    var hasRetVal = false;
    var retVal = null;
    this.set = function(obj) {
        ULSxSy: ;
        if (typeof(obj) != "undefined") {
            this.retVal = obj;
            this.hasRetval = true;
        }
    }
    this.isSet = function() {
        ULSxSy: ;
        return this.hasRetval;
    }
    this.get = function() {
        ULSxSy: ;
        if (this.hasRetval) return this.retVal;
    }
    this.clear = function() {
        ULSxSy: ;
        this.hasRetval = false;
        this.retVal = null;
    }
}
var commonModalDialogReturnValue = new CommonGlobalDialogReturnValue();

function commonModalDialogOpen(url, options, callback, args) {
    ULSxSy: ;
    var fn = function() {
        ULSxSy: ;
        options.url = url;
        options.dialogReturnValueCallback = callback;
        options.args = args;
        var dlg = SP.UI.ModalDialog.showModalDialog(options);
        dlg.get_frameElement().commonModalDialogClose = commonModalDialogClose;
    };
    var defd;
    try {
        defd = typeof(SP.UI.ModalDialog.showModalDialog);
    } catch (e) {
        defd = "undefined"
    }
    EnsureScript("SP.UI.Dialog.js", defd, fn);
}

function commonModalDialogClose(dialogResult, returnValue) {
    ULSxSy: ;
    var dlg = _dlgWndTop().g_childDialog;
    if (dlg) {
        dlg.set_returnValue(returnValue);
        dlg.close(dialogResult);
    }
}

function commonModalDialogGetArguments() {
    ULSxSy: ;
    var dlg = _dlgWndTop().g_childDialog;
    if (dlg && typeof(dlg.get_args) != "undefined")
        return dlg.get_args();
    return null;
}

function ShowPopupDialog(dlgUrl) {
    ULSxSy: ;
    ShowPopupDialogWithCallback(dlgUrl, PopupDialogCallback);
}

function ShowPopupDialogWithCallback(dlgUrl, dialogCallback) {
    ULSxSy: ;
    var fn = function() {
        ULSxSy: ;
        if (FV4UI()) {
            var dlgOptions = {};
            dlgOptions.url = dlgUrl;
            dlgOptions.dialogReturnValueCallback = dialogCallback;
            var dlg = SP.UI.ModalDialog.showModalDialog(dlgOptions);
            dlg.get_frameElement().commonModalDialogClose = commonModalDialogClose;
        } else {
            STSNavigate(dlgUrl);
        }
    };
    var defd;
    try {
        defd = typeof(SP.UI.ModalDialog.showModalDialog);
    } catch (e) {
        defd = "undefined"
    }
    EnsureScript("SP.UI.Dialog.js", defd, fn);
}

function PopupDialogCallback(dialogResult, returnValue) {
    ULSxSy: ;
    if (dialogResult == 1) {
        STSNavigate(_dlgWndTop().location.href);
    }
}

function SelectField(view, selectID) {
    ULSxSy: ;
    CoreInvoke('_SelectField', view, selectID);
}

function FilterField(view, fieldName, fieldValue, selOption) {
    ULSxSy: ;
    CoreInvoke('_FilterField', view, fieldName, fieldValue, selOption);
}

function SetControlValue(controlId, value) {
    ULSxSy: ;
    CoreInvoke('_SetControlValue', controlId, value);
}

function SubmitFormPost(url, bForceSubmit, bDemoteIntoFormBody) {
    ULSxSy: ;
    CoreInvoke('_SubmitFormPost', url, bForceSubmit, bDemoteIntoFormBody);
}

function GoToPageRelative(url) {
    ULSxSy: ;
    CoreInvoke('_GoToPageRelative', url);
}

function EnterFolder(url) {
    ULSxSy: ;
    CoreInvoke('_EnterFolder', url);
}

function HandleFolder(ele, objEvent, url, fTransformServiceOn, fShouldTransformExtension,
    fTransformHandleUrl, strHtmlTrProgId, iDefaultItemOpen, strProgId, strHtmlType, strServerFileRedirect,
    strCheckoutUser, strCurrentUser, strRequireCheckout, strCheckedoutTolocal, strPermmask) {
    ULSxSy: ;
    CoreInvoke('_HandleFolder', ele, objEvent, url, fTransformServiceOn, fShouldTransformExtension,
        fTransformHandleUrl, strHtmlTrProgId, iDefaultItemOpen, strProgId, strHtmlType, strServerFileRedirect,
        strCheckoutUser, strCurrentUser, strRequireCheckout, strCheckedoutTolocal, strPermmask);
}

function VerifyFolderHref(ele, objEvent, url, strHtmlTrProgId, iDefaultItemOpen, strProgId, strHtmlType, strServerFileRedirect) {
    ULSxSy: ;
    CoreInvoke('_VerifyFolderHref', ele, objEvent, url, strHtmlTrProgId, iDefaultItemOpen, strProgId, strHtmlType, strServerFileRedirect);
}

function VerifyHref(ele, objEvent, iDefaultItemOpen, strProgId, strServerFileRedirect) {
    ULSxSy: ;
    CoreInvoke('_VerifyHref', ele, objEvent, iDefaultItemOpen, strProgId, strServerFileRedirect);
}

function DispEx(ele, objEvent, fTransformServiceOn, fShouldTransformExtension,
    fTransformHandleUrl, strHtmlTrProgId, iDefaultItemOpen, strProgId, strHtmlType, strServerFileRedirect,
    strCheckoutUser, strCurrentUser, strRequireCheckout, strCheckedoutTolocal, strPermmask) {
    ULSxSy: ;
    CoreInvoke('_DispEx', ele, objEvent, fTransformServiceOn, fShouldTransformExtension,
        fTransformHandleUrl, strHtmlTrProgId, iDefaultItemOpen, strProgId, strHtmlType, strServerFileRedirect,
        strCheckoutUser, strCurrentUser, strRequireCheckout, strCheckedoutTolocal, strPermmask);
}

function EditItemWithCheckoutAlert(event, Url, bCheckout, bIsCheckedOutToLocal, strDocument, strhttpRoot,
    strCurrentUser, strCheckoutUser) {
    ULSxSy: ;
    CoreInvoke('_EditItemWithCheckoutAlert', event, Url, bCheckout, bIsCheckedOutToLocal, strDocument, strhttpRoot,
        strCurrentUser, strCheckoutUser);
}

function STSNavigateWithCheckoutAlert(Url, bCheckout, bIsCheckedOutToLocal, strDocument, strhttpRoot,
    strCurrentUser, strCheckoutUser) {
    ULSxSy: ;
    CoreInvoke('_STSNavigateWithCheckoutAlert', Url, bCheckout, bIsCheckedOutToLocal, strDocument, strhttpRoot,
        strCurrentUser, strCheckoutUser);
}

function NewItem2(evt, url) {
    ULSxSy: ;
    CoreInvoke('_NewItem2', evt, url);
}

function NewItem(url) {
    ULSxSy: ;
    CoreInvoke('_NewItem', url);
}

function EditItem2(evt, url) {
    ULSxSy: ;
    CoreInvoke('_EditItem2', evt, url);
}

function EditItem(url) {
    ULSxSy: ;
    CoreInvoke('_EditItem', url);
}

function RefreshPageTo(evt, url, bForceSubmit) {
    ULSxSy: ;
    CoreInvoke('_RefreshPageTo', evt, url, bForceSubmit);
}

function AddGroupToCookie(groupName) {
    ULSxSy: ;
    CoreInvoke('_AddGroupToCookie', groupName);
}

function RemoveGroupFromCookie(groupName) {
    ULSxSy: ;
    CoreInvoke('_RemoveGroupFromCookie', groupName);
}

function ExpGroupBy(formObj) {
    ULSxSy: ;
    CoreInvoke('_ExpGroupBy', formObj);
}

function DispDocItem(ele, strProgId) {
    ULSxSy: ;
    CoreInvoke('_DispDocItem', ele, strProgId);
}

function DispDocItemExWithServerRedirect(ele, objEvent, fTransformServiceOn, fShouldTransformExtension,
    fTransformHandleUrl, strProgId, iDefaultItemOpen, strServerFileRedirect) {
    ULSxSy: ;
    CoreInvoke('_DispDocItemExWithServerRedirect', ele, objEvent, fTransformServiceOn,
        fShouldTransformExtension, fTransformHandleUrl, strProgId, iDefaultItemOpen, strServerFileRedirect);
}

function DispDocItemEx(ele, fTransformServiceOn, fShouldTransformExtension, fTransformHandleUrl, strProgId) {
    ULSxSy: ;
    CoreInvoke('_DispDocItemEx', ele, fTransformServiceOn, fShouldTransformExtension, fTransformHandleUrl, strProgId);
}

function PortalPinToMyPage(eForm, portalUrl, instanceID) {
    ULSxSy: ;
    CoreInvoke('_PortalPinToMyPage', eForm, portalUrl, instanceID);
}

function PortalPinToMyPage(eForm, portalUrl, instanceId, listTitle, listDescription, listViewUrl, baseType, serverTemplate) {
    ULSxSy: ;
    CoreInvoke('_PortalPinToMyPage', eForm, portalUrl, instanceId, listTitle, listDescription, listViewUrl, baseType, serverTemplate);
}

function MoveToViewDate(strdate, view_type, ctxid) {
    ULSxSy: ;
    CoreInvoke('_MoveToViewDate', strdate, view_type, ctxid);
}

function MoveToDate(strdate, ctxid) {
    ULSxSy: ;
    CoreInvoke('_MoveToDate', strdate, ctxid);
}

function ClickDay(date) {
    ULSxSy: ;
    CoreInvoke('_ClickDay', date);
}

function GetMonthView(str) {
    ULSxSy: ;
    CoreInvoke('_GetMonthView', str);
}

function OptLoseFocus(opt) {
    ULSxSy: ;
    CoreInvoke('_OptLoseFocus', opt);
}

function SetCtrlFromOpt(ctrl, opt) {
    ULSxSy: ;
    CoreInvoke('_SetCtrlFromOpt', ctrl, opt);
}

function ChangeLayoutMode(p1, p2) {
    ULSxSy: ;
    CoreInvoke('_ChangeLayoutMode', p1, p2);
}

function MSOLayout_ChangeLayoutMode(p1, p2) {
    ULSxSy: ;
    ChangeLayoutMode(p1, p2);
}

function WebPartMenuKeyboardClick(elem, expectedKeyCode1, expectedKeyCode2, event) {
    ULSxSy: ;
    CoreInvoke('_WebPartMenuKeyboardClick', elem, expectedKeyCode1, expectedKeyCode2, event);
}

function ShowToolPane2Wrapper(p1, p2, p3) {
    ULSxSy: ;
    CoreInvoke('_ShowToolPane2Wrapper', p1, p2, p3);
}

function EditInSPD(strDocument, bRefresh) {
    ULSxSy: ;
    CoreInvoke('_EditInSPD', strDocument, bRefresh);
}

function SetupFixedWidthWebParts() {
    ULSxSy: ;
    CoreInvoke('_SetupFixedWidthWebParts');
}

function ToggleAllItems(evt, cbx, ctxNum) {
    ULSxSy: ;
    CoreInvoke('_ToggleAllItems', evt, cbx, ctxNum);
}

function CommandUIExecuteCommand(commandId) {
    ULSxSy: ;
    CoreInvoke('_CommandUIExecuteCommand', commandId);
}

function PopMenuFromChevron(e) {
    ULSxSy: ;
    CoreInvoke('_PopMenuFromChevron', e);
}

function NavigateToSubNewAspx(strHttpRoot, strArgs) {
    ULSxSy: ;
    CoreInvoke('_NavigateToSubNewAspx', strHttpRoot, strArgs);
}

function NavigateToManagePermsPage(strHttpRoot, strListId, strFileRef) {
    ULSxSy: ;
    CoreInvoke('_NavigateToManagePermsPage', strHttpRoot, strListId, strFileRef);
}

function DoNavigateToTemplateGallery(strSaveLocUrl, strTGUrl) {
    ULSxSy: ;
    CoreInvoke('_DoNavigateToTemplateGallery', strSaveLocUrl, strTGUrl);
}

function RefreshPage(dialogResult) {
    ULSxSy: ;
    CoreInvoke('_RefreshPage', dialogResult);
}

function OpenPopUpPage(url, callback, width, height) {
    ULSxSy: ;
    CoreInvoke('_OpenPopUpPage', url, callback, width, height);
}

function OpenCreateWebPageDialog(url) {
    ULSxSy: ;
    CoreInvoke('_OpenCreateWebPageDialog', url);
}

function EditLink2(elm, ctxNum) {
    ULSxSy: ;
    CoreInvoke('_EditLink2', elm, ctxNum);
}

function GoBack(defViewUrl) {
    ULSxSy: ;
    CoreInvoke('_GoBack', defViewUrl);
}

function ReplyItem(url, threading, guid, subject) {
    ULSxSy: ;
    CoreInvoke('_ReplyItem', url, threading, guid, subject);
}

function ExportToDatabase(strSiteUrl, strListID, strViewID, fUseExistingDB) {
    ULSxSy: ;
    CoreInvoke('_ExportToDatabase', strSiteUrl, strListID, strViewID, fUseExistingDB);
}

function ExportList(using) {
    ULSxSy: ;
    CoreInvoke('_ExportList', using);
}

function ClearSearchTerm(guidView) {
    ULSxSy: ;
    CoreInvoke('_ClearSearchTerm', guidView);
}

function SubmitSearchForView(ViewGuid) {
    ULSxSy: ;
    CoreInvoke('_SubmitSearchForView', ViewGuid);
}

function SubmitSearchRedirect(strUrl) {
    ULSxSy: ;
    CoreInvoke('_SubmitSearchRedirect', strUrl);
}

function AlertAndSetFocus(msg, fieldName) {
    ULSxSy: ;
    CoreInvoke('_AlertAndSetFocus', msg, fieldName);
}

function AlertAndSetFocusForDropdown(msg, fieldName) {
    ULSxSy: ;
    CoreInvoke('_AlertAndSetFocusForDropdown', msg, fieldName);
}

function AddSilverlightWebPart(item, zoneNum, zoneIndex) {
    ULSxSy: ;
    CoreInvoke('_AddSilverlightWebPart', item, zoneNum, zoneIndex);
}

function UserSelectionOnClick(chk, viewCounter) {
    ULSxSy: ;
    CoreInvoke('_UserSelectionOnClick', chk, viewCounter);
}

function OnIframeLoad() {
    ULSxSy: ;
    CoreInvoke('_OnIframeLoad');
}

function OnFocusFilter(elm) {
    ULSxSy: ;
    CoreInvoke('_OnFocusFilter', elm);
}

function TopHelpButtonClick(strParam) {
    ULSxSy: ;
    CoreInvoke('_TopHelpButtonClick', strParam);
}

function HelpWindowKey(strKey) {
    ULSxSy: ;
    CoreInvoke('_HelpWindowKey', strKey);
}

function HelpWindowUrl(strUrl) {
    ULSxSy: ;
    CoreInvoke('_HelpWindowUrl', strUrl);
}

function HelpWindow() {
    ULSxSy: ;
    CoreInvoke('_HelpWindow');
}

function OnClickFilter(obj, e) {
    ULSxSy: ;
    return CoreInvoke('_OnClickFilter', obj, e);
}

function GCActivateAndFocus(GCObject) {
    ULSxSy: ;
    CoreInvoke('_GCActivateAndFocus', GCObject);
}

function GCNavigateToNonGridPage() {
    ULSxSy: ;
    CoreInvoke('_GCNavigateToNonGridPage');
}

function _EnsureJSClass(nsStr, isNamespace) {
    ULSxSy: ;
    var parts = nsStr.split(".");
    var prevNS;
    for (var i = 0, pLen = parts.length; i < pLen; i++) {
        var ns = parts[i];
        if (typeof(prevNS) == "undefined") {
            prevNS = window;
        }
        if (typeof(prevNS[ns]) == "undefined") {
            prevNS[ns] = new Object();
        }
        prevNS = prevNS[ns];
        if (isNamespace) {
            prevNS.__namespace = true;
        }
    }
}

function _EnsureJSNamespace(nsStr) {
    ULSxSy: ;
    _EnsureJSClass(nsStr, true);
}
_EnsureJSNamespace("SP");
_EnsureJSClass("SP.SOD");
SP.SOD.execute = EnsureScriptParams;
SP.SOD.executeFunc = EnsureScriptFunc;
SP.SOD.registerSod = RegisterSod;
SP.SOD.registerSodDep = RegisterSodDep;
SP.SOD.executeOrDelayUntilScriptLoaded = ExecuteOrDelayUntilScriptLoaded;
SP.SOD.executeOrDelayUntilEventNotified = ExecuteOrDelayUntilEventNotified;
SP.SOD.notifyScriptLoadedAndExecuteWaitingJobs = NotifyScriptLoadedAndExecuteWaitingJobs;
SP.SOD.notifyEventAndExecuteWaitingJobs = NotifyEventAndExecuteWaitingJobs;
SP.SOD.get_prefetch = function() {
    ULSxSy: ;
    return g_prefetch;
}
SP.SOD.set_prefetch = function(prefetch) {
    ULSxSy: ;
    g_prefetch = prefetch;
}
_EnsureJSNamespace("SP.UI");
_EnsureJSClass("SP.UI.Workspace");
SP.UI.Workspace.add_resized = function(handler) {
    ULSxSy: ;
    g_workspaceResizedHandlers.push(handler);
};
SP.UI.Workspace.remove_resized = function(handler) {
    ULSxSy: ;
    var match = -1;
    for (var i = 0, wLen = g_workspaceResizedHandlers.length; i < wLen; i++) {
        if (handler == g_workspaceResizedHandlers[i]) {
            match = i;
            break;
        }
    }
    if (match != -1) {
        g_workspaceResizedHandlers.splice(match, 1);
    }
};
_EnsureJSClass("SP.UI.ModalDialog");
var _SP_UI_ModalDialog = SP.UI.ModalDialog;
_SP_UI_ModalDialog.ShowPopupDialog = ShowPopupDialog;
_SP_UI_ModalDialog.OpenPopUpPage = OpenPopUpPage;
_SP_UI_ModalDialog.commonModalDialogOpen = commonModalDialogOpen;
_SP_UI_ModalDialog.commonModalDialogClose = commonModalDialogClose;
_SP_UI_ModalDialog.RefreshPage = RefreshPage;
if (typeof(Sys) != "undefined" && Sys && Sys.Application) {
    Sys.Application.notifyScriptLoaded();
}
NotifyScriptLoadedAndExecuteWaitingJobs("init.js");



/***** Insert microsoftajax.DEBUG.js here   ***************/
// Name:        MicrosoftAjax.debug.js
// Assembly:    System.Web.Extensions
// Version:     4.0.0.0
// FileVersion: 4.0.20526.0
//-----------------------------------------------------------------------
// Copyright (C) Microsoft Corporation. All rights reserved.
//-----------------------------------------------------------------------
// MicrosoftAjax.js
// Microsoft AJAX Framework.

Function.__typeName = 'Function';
Function.__class = true;
Function.createCallback = function Function$createCallback(method, context) {
    /// <summary locid="M:J#Function.createCallback" />
    /// <param name="method" type="Function"></param>
    /// <param name="context" mayBeNull="true"></param>
    /// <returns type="Function"></returns>
    var e = Function._validateParams(arguments, [{
        name: "method",
        type: Function
    }, {
        name: "context",
        mayBeNull: true
    }]);
    if (e) throw e;
    return function() {
        var l = arguments.length;
        if (l > 0) {
            var args = [];
            for (var i = 0; i < l; i++) {
                args[i] = arguments[i];
            }
            args[l] = context;
            return method.apply(this, args);
        }
        return method.call(this, context);
    }
}
Function.createDelegate = function Function$createDelegate(instance, method) {
    /// <summary locid="M:J#Function.createDelegate" />
    /// <param name="instance" mayBeNull="true"></param>
    /// <param name="method" type="Function"></param>
    /// <returns type="Function"></returns>
    var e = Function._validateParams(arguments, [{
        name: "instance",
        mayBeNull: true
    }, {
        name: "method",
        type: Function
    }]);
    if (e) throw e;
    return function() {
        return method.apply(instance, arguments);
    }
}
Function.emptyFunction = Function.emptyMethod = function Function$emptyMethod() {
    /// <summary locid="M:J#Function.emptyMethod" />
}
Function.validateParameters = function Function$validateParameters(parameters, expectedParameters, validateParameterCount) {
    /// <summary locid="M:J#Function.validateParameters" />
    /// <param name="parameters"></param>
    /// <param name="expectedParameters"></param>
    /// <param name="validateParameterCount" type="Boolean" optional="true"></param>
    /// <returns type="Error" mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "parameters"
    }, {
        name: "expectedParameters"
    }, {
        name: "validateParameterCount",
        type: Boolean,
        optional: true
    }]);
    if (e) throw e;
    return Function._validateParams(parameters, expectedParameters, validateParameterCount);
}
Function._validateParams = function Function$_validateParams(params, expectedParams, validateParameterCount) {
    var e, expectedLength = expectedParams.length;
    validateParameterCount = validateParameterCount || (typeof(validateParameterCount) === "undefined");
    e = Function._validateParameterCount(params, expectedParams, validateParameterCount);
    if (e) {
        e.popStackFrame();
        return e;
    }
    for (var i = 0, l = params.length; i < l; i++) {
        var expectedParam = expectedParams[Math.min(i, expectedLength - 1)],
            paramName = expectedParam.name;
        if (expectedParam.parameterArray) {
            paramName += "[" + (i - expectedLength + 1) + "]";
        } else if (!validateParameterCount && (i >= expectedLength)) {
            break;
        }
        e = Function._validateParameter(params[i], expectedParam, paramName);
        if (e) {
            e.popStackFrame();
            return e;
        }
    }
    return null;
}
Function._validateParameterCount = function Function$_validateParameterCount(params, expectedParams, validateParameterCount) {
    var i, error,
        expectedLen = expectedParams.length,
        actualLen = params.length;
    if (actualLen < expectedLen) {
        var minParams = expectedLen;
        for (i = 0; i < expectedLen; i++) {
            var param = expectedParams[i];
            if (param.optional || param.parameterArray) {
                minParams--;
            }
        }
        if (actualLen < minParams) {
            error = true;
        }
    } else if (validateParameterCount && (actualLen > expectedLen)) {
        error = true;
        for (i = 0; i < expectedLen; i++) {
            if (expectedParams[i].parameterArray) {
                error = false;
                break;
            }
        }
    }
    if (error) {
        var e = Error.parameterCount();
        e.popStackFrame();
        return e;
    }
    return null;
}
Function._validateParameter = function Function$_validateParameter(param, expectedParam, paramName) {
    var e,
        expectedType = expectedParam.type,
        expectedInteger = !! expectedParam.integer,
        expectedDomElement = !! expectedParam.domElement,
        mayBeNull = !! expectedParam.mayBeNull;
    e = Function._validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName);
    if (e) {
        e.popStackFrame();
        return e;
    }
    var expectedElementType = expectedParam.elementType,
        elementMayBeNull = !! expectedParam.elementMayBeNull;
    if (expectedType === Array && typeof(param) !== "undefined" && param !== null &&
        (expectedElementType || !elementMayBeNull)) {
        var expectedElementInteger = !! expectedParam.elementInteger,
            expectedElementDomElement = !! expectedParam.elementDomElement;
        for (var i = 0; i < param.length; i++) {
            var elem = param[i];
            e = Function._validateParameterType(elem, expectedElementType,
                expectedElementInteger, expectedElementDomElement, elementMayBeNull,
                paramName + "[" + i + "]");
            if (e) {
                e.popStackFrame();
                return e;
            }
        }
    }
    return null;
}
Function._validateParameterType = function Function$_validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName) {
    var e, i;
    if (typeof(param) === "undefined") {
        if (mayBeNull) {
            return null;
        } else {
            e = Error.argumentUndefined(paramName);
            e.popStackFrame();
            return e;
        }
    }
    if (param === null) {
        if (mayBeNull) {
            return null;
        } else {
            e = Error.argumentNull(paramName);
            e.popStackFrame();
            return e;
        }
    }
    if (expectedType && expectedType.__enum) {
        if (typeof(param) !== 'number') {
            e = Error.argumentType(paramName, Object.getType(param), expectedType);
            e.popStackFrame();
            return e;
        }
        if ((param % 1) === 0) {
            var values = expectedType.prototype;
            if (!expectedType.__flags || (param === 0)) {
                for (i in values) {
                    if (values[i] === param) return null;
                }
            } else {
                var v = param;
                for (i in values) {
                    var vali = values[i];
                    if (vali === 0) continue;
                    if ((vali & param) === vali) {
                        v -= vali;
                    }
                    if (v === 0) return null;
                }
            }
        }
        e = Error.argumentOutOfRange(paramName, param, String.format(Sys.Res.enumInvalidValue, param, expectedType.getName()));
        e.popStackFrame();
        return e;
    }
    if (expectedDomElement && (!Sys._isDomElement(param) || (param.nodeType === 3))) {
        e = Error.argument(paramName, Sys.Res.argumentDomElement);
        e.popStackFrame();
        return e;
    }
    if (expectedType && !Sys._isInstanceOfType(expectedType, param)) {
        e = Error.argumentType(paramName, Object.getType(param), expectedType);
        e.popStackFrame();
        return e;
    }
    if (expectedType === Number && expectedInteger) {
        if ((param % 1) !== 0) {
            e = Error.argumentOutOfRange(paramName, param, Sys.Res.argumentInteger);
            e.popStackFrame();
            return e;
        }
    }
    return null;
}

Error.__typeName = 'Error';
Error.__class = true;
Error.create = function Error$create(message, errorInfo) {
    /// <summary locid="M:J#Error.create" />
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="errorInfo" optional="true" mayBeNull="true"></param>
    /// <returns type="Error"></returns>
    var e = Function._validateParams(arguments, [{
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "errorInfo",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var err = new Error(message);
    err.message = message;
    if (errorInfo) {
        for (var v in errorInfo) {
            err[v] = errorInfo[v];
        }
    }
    err.popStackFrame();
    return err;
}
Error.argument = function Error$argument(paramName, message) {
    /// <summary locid="M:J#Error.argument" />
    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "paramName",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.ArgumentException: " + (message ? message : Sys.Res.argument);
    if (paramName) {
        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
    }
    var err = Error.create(displayMessage, {
        name: "Sys.ArgumentException",
        paramName: paramName
    });
    err.popStackFrame();
    return err;
}
Error.argumentNull = function Error$argumentNull(paramName, message) {
    /// <summary locid="M:J#Error.argumentNull" />
    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "paramName",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.ArgumentNullException: " + (message ? message : Sys.Res.argumentNull);
    if (paramName) {
        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
    }
    var err = Error.create(displayMessage, {
        name: "Sys.ArgumentNullException",
        paramName: paramName
    });
    err.popStackFrame();
    return err;
}
Error.argumentOutOfRange = function Error$argumentOutOfRange(paramName, actualValue, message) {
    /// <summary locid="M:J#Error.argumentOutOfRange" />
    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="actualValue" optional="true" mayBeNull="true"></param>
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "paramName",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "actualValue",
        mayBeNull: true,
        optional: true
    }, {
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.ArgumentOutOfRangeException: " + (message ? message : Sys.Res.argumentOutOfRange);
    if (paramName) {
        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
    }
    if (typeof(actualValue) !== "undefined" && actualValue !== null) {
        displayMessage += "\n" + String.format(Sys.Res.actualValue, actualValue);
    }
    var err = Error.create(displayMessage, {
        name: "Sys.ArgumentOutOfRangeException",
        paramName: paramName,
        actualValue: actualValue
    });
    err.popStackFrame();
    return err;
}
Error.argumentType = function Error$argumentType(paramName, actualType, expectedType, message) {
    /// <summary locid="M:J#Error.argumentType" />
    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="actualType" type="Type" optional="true" mayBeNull="true"></param>
    /// <param name="expectedType" type="Type" optional="true" mayBeNull="true"></param>
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "paramName",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "actualType",
        type: Type,
        mayBeNull: true,
        optional: true
    }, {
        name: "expectedType",
        type: Type,
        mayBeNull: true,
        optional: true
    }, {
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.ArgumentTypeException: ";
    if (message) {
        displayMessage += message;
    } else if (actualType && expectedType) {
        displayMessage +=
            String.format(Sys.Res.argumentTypeWithTypes, actualType.getName(), expectedType.getName());
    } else {
        displayMessage += Sys.Res.argumentType;
    }
    if (paramName) {
        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
    }
    var err = Error.create(displayMessage, {
        name: "Sys.ArgumentTypeException",
        paramName: paramName,
        actualType: actualType,
        expectedType: expectedType
    });
    err.popStackFrame();
    return err;
}
Error.argumentUndefined = function Error$argumentUndefined(paramName, message) {
    /// <summary locid="M:J#Error.argumentUndefined" />
    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "paramName",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.ArgumentUndefinedException: " + (message ? message : Sys.Res.argumentUndefined);
    if (paramName) {
        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
    }
    var err = Error.create(displayMessage, {
        name: "Sys.ArgumentUndefinedException",
        paramName: paramName
    });
    err.popStackFrame();
    return err;
}
Error.format = function Error$format(message) {
    /// <summary locid="M:J#Error.format" />
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.FormatException: " + (message ? message : Sys.Res.format);
    var err = Error.create(displayMessage, {
        name: 'Sys.FormatException'
    });
    err.popStackFrame();
    return err;
}
Error.invalidOperation = function Error$invalidOperation(message) {
    /// <summary locid="M:J#Error.invalidOperation" />
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.InvalidOperationException: " + (message ? message : Sys.Res.invalidOperation);
    var err = Error.create(displayMessage, {
        name: 'Sys.InvalidOperationException'
    });
    err.popStackFrame();
    return err;
}
Error.notImplemented = function Error$notImplemented(message) {
    /// <summary locid="M:J#Error.notImplemented" />
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.NotImplementedException: " + (message ? message : Sys.Res.notImplemented);
    var err = Error.create(displayMessage, {
        name: 'Sys.NotImplementedException'
    });
    err.popStackFrame();
    return err;
}
Error.parameterCount = function Error$parameterCount(message) {
    /// <summary locid="M:J#Error.parameterCount" />
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var displayMessage = "Sys.ParameterCountException: " + (message ? message : Sys.Res.parameterCount);
    var err = Error.create(displayMessage, {
        name: 'Sys.ParameterCountException'
    });
    err.popStackFrame();
    return err;
}
Error.prototype.popStackFrame = function Error$popStackFrame() {
    /// <summary locid="M:J#checkParam" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (typeof(this.stack) === "undefined" || this.stack === null ||
        typeof(this.fileName) === "undefined" || this.fileName === null ||
        typeof(this.lineNumber) === "undefined" || this.lineNumber === null) {
        return;
    }
    var stackFrames = this.stack.split("\n");
    var currentFrame = stackFrames[0];
    var pattern = this.fileName + ":" + this.lineNumber;
    while (typeof(currentFrame) !== "undefined" &&
        currentFrame !== null &&
        currentFrame.indexOf(pattern) === -1) {
        stackFrames.shift();
        currentFrame = stackFrames[0];
    }
    var nextFrame = stackFrames[1];
    if (typeof(nextFrame) === "undefined" || nextFrame === null) {
        return;
    }
    var nextFrameParts = nextFrame.match(/@(.*):(\d+)$/);
    if (typeof(nextFrameParts) === "undefined" || nextFrameParts === null) {
        return;
    }
    this.fileName = nextFrameParts[1];
    this.lineNumber = parseInt(nextFrameParts[2]);
    stackFrames.shift();
    this.stack = stackFrames.join("\n");
}

Object.__typeName = 'Object';
Object.__class = true;
Object.getType = function Object$getType(instance) {
    /// <summary locid="M:J#Object.getType" />
    /// <param name="instance"></param>
    /// <returns type="Type"></returns>
    var e = Function._validateParams(arguments, [{
        name: "instance"
    }]);
    if (e) throw e;
    var ctor = instance.constructor;
    if (!ctor || (typeof(ctor) !== "function") || !ctor.__typeName || (ctor.__typeName === 'Object')) {
        return Object;
    }
    return ctor;
}
Object.getTypeName = function Object$getTypeName(instance) {
    /// <summary locid="M:J#Object.getTypeName" />
    /// <param name="instance"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "instance"
    }]);
    if (e) throw e;
    return Object.getType(instance).getName();
}

String.__typeName = 'String';
String.__class = true;
String.prototype.endsWith = function String$endsWith(suffix) {
    /// <summary locid="M:J#String.endsWith" />
    /// <param name="suffix" type="String"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "suffix",
        type: String
    }]);
    if (e) throw e;
    return (this.substr(this.length - suffix.length) === suffix);
}
String.prototype.startsWith = function String$startsWith(prefix) {
    /// <summary locid="M:J#String.startsWith" />
    /// <param name="prefix" type="String"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "prefix",
        type: String
    }]);
    if (e) throw e;
    return (this.substr(0, prefix.length) === prefix);
}
String.prototype.trim = function String$trim() {
    /// <summary locid="M:J#String.trim" />
    /// <returns type="String"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this.replace(/^\s+|\s+$/g, '');
}
String.prototype.trimEnd = function String$trimEnd() {
    /// <summary locid="M:J#String.trimEnd" />
    /// <returns type="String"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this.replace(/\s+$/, '');
}
String.prototype.trimStart = function String$trimStart() {
    /// <summary locid="M:J#String.trimStart" />
    /// <returns type="String"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this.replace(/^\s+/, '');
}
String.format = function String$format(format, args) {
    /// <summary locid="M:J#String.format" />
    /// <param name="format" type="String"></param>
    /// <param name="args" parameterArray="true" mayBeNull="true"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "format",
        type: String
    }, {
        name: "args",
        mayBeNull: true,
        parameterArray: true
    }]);
    if (e) throw e;
    return String._toFormattedString(false, arguments);
}
String._toFormattedString = function String$_toFormattedString(useLocale, args) {
    var result = '';
    var format = args[0];
    for (var i = 0;;) {
        var open = format.indexOf('{', i);
        var close = format.indexOf('}', i);
        if ((open < 0) && (close < 0)) {
            result += format.slice(i);
            break;
        }
        if ((close > 0) && ((close < open) || (open < 0))) {
            if (format.charAt(close + 1) !== '}') {
                throw Error.argument('format', Sys.Res.stringFormatBraceMismatch);
            }
            result += format.slice(i, close + 1);
            i = close + 2;
            continue;
        }
        result += format.slice(i, open);
        i = open + 1;
        if (format.charAt(i) === '{') {
            result += '{';
            i++;
            continue;
        }
        if (close < 0) throw Error.argument('format', Sys.Res.stringFormatBraceMismatch);
        var brace = format.substring(i, close);
        var colonIndex = brace.indexOf(':');
        var argNumber = parseInt((colonIndex < 0) ? brace : brace.substring(0, colonIndex), 10) + 1;
        if (isNaN(argNumber)) throw Error.argument('format', Sys.Res.stringFormatInvalid);
        var argFormat = (colonIndex < 0) ? '' : brace.substring(colonIndex + 1);
        var arg = args[argNumber];
        if (typeof(arg) === "undefined" || arg === null) {
            arg = '';
        }
        if (arg.toFormattedString) {
            result += arg.toFormattedString(argFormat);
        } else if (useLocale && arg.localeFormat) {
            result += arg.localeFormat(argFormat);
        } else if (arg.format) {
            result += arg.format(argFormat);
        } else
            result += arg.toString();
        i = close + 1;
    }
    return result;
}

Boolean.__typeName = 'Boolean';
Boolean.__class = true;
Boolean.parse = function Boolean$parse(value) {
    /// <summary locid="M:J#Boolean.parse" />
    /// <param name="value" type="String"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }], false);
    if (e) throw e;
    var v = value.trim().toLowerCase();
    if (v === 'false') return false;
    if (v === 'true') return true;
    throw Error.argumentOutOfRange('value', value, Sys.Res.boolTrueOrFalse);
}

Date.__typeName = 'Date';
Date.__class = true;

Number.__typeName = 'Number';
Number.__class = true;

RegExp.__typeName = 'RegExp';
RegExp.__class = true;

if (!window) this.window = this;
window.Type = Function;
Type.__fullyQualifiedIdentifierRegExp = new RegExp("^[^.0-9 \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]([^ \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]*[^. \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\])?$", "i");
Type.__identifierRegExp = new RegExp("^[^.0-9 \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\][^. \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]*$", "i");
Type.prototype.callBaseMethod = function Type$callBaseMethod(instance, name, baseArguments) {
    /// <summary locid="M:J#Type.callBaseMethod" />
    /// <param name="instance"></param>
    /// <param name="name" type="String"></param>
    /// <param name="baseArguments" type="Array" optional="true" mayBeNull="true" elementMayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "instance"
    }, {
        name: "name",
        type: String
    }, {
        name: "baseArguments",
        type: Array,
        mayBeNull: true,
        optional: true,
        elementMayBeNull: true
    }]);
    if (e) throw e;
    var baseMethod = Sys._getBaseMethod(this, instance, name);
    if (!baseMethod) throw Error.invalidOperation(String.format(Sys.Res.methodNotFound, name));
    if (!baseArguments) {
        return baseMethod.apply(instance);
    } else {
        return baseMethod.apply(instance, baseArguments);
    }
}
Type.prototype.getBaseMethod = function Type$getBaseMethod(instance, name) {
    /// <summary locid="M:J#Type.getBaseMethod" />
    /// <param name="instance"></param>
    /// <param name="name" type="String"></param>
    /// <returns type="Function" mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "instance"
    }, {
        name: "name",
        type: String
    }]);
    if (e) throw e;
    return Sys._getBaseMethod(this, instance, name);
}
Type.prototype.getBaseType = function Type$getBaseType() {
    /// <summary locid="M:J#Type.getBaseType" />
    /// <returns type="Type" mayBeNull="true"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    return (typeof(this.__baseType) === "undefined") ? null : this.__baseType;
}
Type.prototype.getInterfaces = function Type$getInterfaces() {
    /// <summary locid="M:J#Type.getInterfaces" />
    /// <returns type="Array" elementType="Type" mayBeNull="false" elementMayBeNull="false"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    var result = [];
    var type = this;
    while (type) {
        var interfaces = type.__interfaces;
        if (interfaces) {
            for (var i = 0, l = interfaces.length; i < l; i++) {
                var interfaceType = interfaces[i];
                if (!Array.contains(result, interfaceType)) {
                    result[result.length] = interfaceType;
                }
            }
        }
        type = type.__baseType;
    }
    return result;
}
Type.prototype.getName = function Type$getName() {
    /// <summary locid="M:J#Type.getName" />
    /// <returns type="String"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    return (typeof(this.__typeName) === "undefined") ? "" : this.__typeName;
}
Type.prototype.implementsInterface = function Type$implementsInterface(interfaceType) {
    /// <summary locid="M:J#Type.implementsInterface" />
    /// <param name="interfaceType" type="Type"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "interfaceType",
        type: Type
    }]);
    if (e) throw e;
    this.resolveInheritance();
    var interfaceName = interfaceType.getName();
    var cache = this.__interfaceCache;
    if (cache) {
        var cacheEntry = cache[interfaceName];
        if (typeof(cacheEntry) !== 'undefined') return cacheEntry;
    } else {
        cache = this.__interfaceCache = {};
    }
    var baseType = this;
    while (baseType) {
        var interfaces = baseType.__interfaces;
        if (interfaces) {
            if (Array.indexOf(interfaces, interfaceType) !== -1) {
                return cache[interfaceName] = true;
            }
        }
        baseType = baseType.__baseType;
    }
    return cache[interfaceName] = false;
}
Type.prototype.inheritsFrom = function Type$inheritsFrom(parentType) {
    /// <summary locid="M:J#Type.inheritsFrom" />
    /// <param name="parentType" type="Type"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "parentType",
        type: Type
    }]);
    if (e) throw e;
    this.resolveInheritance();
    var baseType = this.__baseType;
    while (baseType) {
        if (baseType === parentType) {
            return true;
        }
        baseType = baseType.__baseType;
    }
    return false;
}
Type.prototype.initializeBase = function Type$initializeBase(instance, baseArguments) {
    /// <summary locid="M:J#Type.initializeBase" />
    /// <param name="instance"></param>
    /// <param name="baseArguments" type="Array" optional="true" mayBeNull="true" elementMayBeNull="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "instance"
    }, {
        name: "baseArguments",
        type: Array,
        mayBeNull: true,
        optional: true,
        elementMayBeNull: true
    }]);
    if (e) throw e;
    if (!Sys._isInstanceOfType(this, instance)) throw Error.argumentType('instance', Object.getType(instance), this);
    this.resolveInheritance();
    if (this.__baseType) {
        if (!baseArguments) {
            this.__baseType.apply(instance);
        } else {
            this.__baseType.apply(instance, baseArguments);
        }
    }
    return instance;
}
Type.prototype.isImplementedBy = function Type$isImplementedBy(instance) {
    /// <summary locid="M:J#Type.isImplementedBy" />
    /// <param name="instance" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "instance",
        mayBeNull: true
    }]);
    if (e) throw e;
    if (typeof(instance) === "undefined" || instance === null) return false;
    var instanceType = Object.getType(instance);
    return !!(instanceType.implementsInterface && instanceType.implementsInterface(this));
}
Type.prototype.isInstanceOfType = function Type$isInstanceOfType(instance) {
    /// <summary locid="M:J#Type.isInstanceOfType" />
    /// <param name="instance" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "instance",
        mayBeNull: true
    }]);
    if (e) throw e;
    return Sys._isInstanceOfType(this, instance);
}
Type.prototype.registerClass = function Type$registerClass(typeName, baseType, interfaceTypes) {
    /// <summary locid="M:J#Type.registerClass" />
    /// <param name="typeName" type="String"></param>
    /// <param name="baseType" type="Type" optional="true" mayBeNull="true"></param>
    /// <param name="interfaceTypes" parameterArray="true" type="Type"></param>
    /// <returns type="Type"></returns>
    var e = Function._validateParams(arguments, [{
        name: "typeName",
        type: String
    }, {
        name: "baseType",
        type: Type,
        mayBeNull: true,
        optional: true
    }, {
        name: "interfaceTypes",
        type: Type,
        parameterArray: true
    }]);
    if (e) throw e;
    if (!Type.__fullyQualifiedIdentifierRegExp.test(typeName)) throw Error.argument('typeName', Sys.Res.notATypeName);
    var parsedName;
    try {
        parsedName = eval(typeName);
    } catch (e) {
        throw Error.argument('typeName', Sys.Res.argumentTypeName);
    }
    if (parsedName !== this) throw Error.argument('typeName', Sys.Res.badTypeName);
    if (Sys.__registeredTypes[typeName]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, typeName));
    if ((arguments.length > 1) && (typeof(baseType) === 'undefined')) throw Error.argumentUndefined('baseType');
    if (baseType && !baseType.__class) throw Error.argument('baseType', Sys.Res.baseNotAClass);
    this.prototype.constructor = this;
    this.__typeName = typeName;
    this.__class = true;
    if (baseType) {
        this.__baseType = baseType;
        this.__basePrototypePending = true;
    }
    Sys.__upperCaseTypes[typeName.toUpperCase()] = this;
    if (interfaceTypes) {
        this.__interfaces = [];
        this.resolveInheritance();
        for (var i = 2, l = arguments.length; i < l; i++) {
            var interfaceType = arguments[i];
            if (!interfaceType.__interface) throw Error.argument('interfaceTypes[' + (i - 2) + ']', Sys.Res.notAnInterface);
            for (var methodName in interfaceType.prototype) {
                var method = interfaceType.prototype[methodName];
                if (!this.prototype[methodName]) {
                    this.prototype[methodName] = method;
                }
            }
            this.__interfaces.push(interfaceType);
        }
    }
    Sys.__registeredTypes[typeName] = true;
    return this;
}
Type.prototype.registerInterface = function Type$registerInterface(typeName) {
    /// <summary locid="M:J#Type.registerInterface" />
    /// <param name="typeName" type="String"></param>
    /// <returns type="Type"></returns>
    var e = Function._validateParams(arguments, [{
        name: "typeName",
        type: String
    }]);
    if (e) throw e;
    if (!Type.__fullyQualifiedIdentifierRegExp.test(typeName)) throw Error.argument('typeName', Sys.Res.notATypeName);
    var parsedName;
    try {
        parsedName = eval(typeName);
    } catch (e) {
        throw Error.argument('typeName', Sys.Res.argumentTypeName);
    }
    if (parsedName !== this) throw Error.argument('typeName', Sys.Res.badTypeName);
    if (Sys.__registeredTypes[typeName]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, typeName));
    Sys.__upperCaseTypes[typeName.toUpperCase()] = this;
    this.prototype.constructor = this;
    this.__typeName = typeName;
    this.__interface = true;
    Sys.__registeredTypes[typeName] = true;
    return this;
}
Type.prototype.resolveInheritance = function Type$resolveInheritance() {
    /// <summary locid="M:J#Type.resolveInheritance" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this.__basePrototypePending) {
        var baseType = this.__baseType;
        baseType.resolveInheritance();
        for (var memberName in baseType.prototype) {
            var memberValue = baseType.prototype[memberName];
            if (!this.prototype[memberName]) {
                this.prototype[memberName] = memberValue;
            }
        }
        delete this.__basePrototypePending;
    }
}
Type.getRootNamespaces = function Type$getRootNamespaces() {
    /// <summary locid="M:J#Type.getRootNamespaces" />
    /// <returns type="Array"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    return Array.clone(Sys.__rootNamespaces);
}
Type.isClass = function Type$isClass(type) {
    /// <summary locid="M:J#Type.isClass" />
    /// <param name="type" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "type",
        mayBeNull: true
    }]);
    if (e) throw e;
    if ((typeof(type) === 'undefined') || (type === null)) return false;
    return !!type.__class;
}
Type.isInterface = function Type$isInterface(type) {
    /// <summary locid="M:J#Type.isInterface" />
    /// <param name="type" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "type",
        mayBeNull: true
    }]);
    if (e) throw e;
    if ((typeof(type) === 'undefined') || (type === null)) return false;
    return !!type.__interface;
}
Type.isNamespace = function Type$isNamespace(object) {
    /// <summary locid="M:J#Type.isNamespace" />
    /// <param name="object" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "object",
        mayBeNull: true
    }]);
    if (e) throw e;
    if ((typeof(object) === 'undefined') || (object === null)) return false;
    return !!object.__namespace;
}
Type.parse = function Type$parse(typeName, ns) {
    /// <summary locid="M:J#Type.parse" />
    /// <param name="typeName" type="String" mayBeNull="true"></param>
    /// <param name="ns" optional="true" mayBeNull="true"></param>
    /// <returns type="Type" mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "typeName",
        type: String,
        mayBeNull: true
    }, {
        name: "ns",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var fn;
    if (ns) {
        fn = Sys.__upperCaseTypes[ns.getName().toUpperCase() + '.' + typeName.toUpperCase()];
        return fn || null;
    }
    if (!typeName) return null;
    if (!Type.__htClasses) {
        Type.__htClasses = {};
    }
    fn = Type.__htClasses[typeName];
    if (!fn) {
        fn = eval(typeName);
        if (typeof(fn) !== 'function') throw Error.argument('typeName', Sys.Res.notATypeName);
        Type.__htClasses[typeName] = fn;
    }
    return fn;
}
Type.registerNamespace = function Type$registerNamespace(namespacePath) {
    /// <summary locid="M:J#Type.registerNamespace" />
    /// <param name="namespacePath" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "namespacePath",
        type: String
    }]);
    if (e) throw e;
    Type._registerNamespace(namespacePath);
}
Type._registerNamespace = function Type$_registerNamespace(namespacePath) {
    if (!Type.__fullyQualifiedIdentifierRegExp.test(namespacePath)) throw Error.argument('namespacePath', Sys.Res.invalidNameSpace);
    var rootObject = window;
    var namespaceParts = namespacePath.split('.');
    for (var i = 0; i < namespaceParts.length; i++) {
        var currentPart = namespaceParts[i];
        var ns = rootObject[currentPart];
        var nsType = typeof(ns);
        if ((nsType !== "undefined") && (ns !== null)) {
            if (nsType === "function") {
                throw Error.invalidOperation(String.format(Sys.Res.namespaceContainsClass, namespaceParts.splice(0, i + 1).join('.')));
            }
            if ((typeof(ns) !== "object") || (ns instanceof Array)) {
                throw Error.invalidOperation(String.format(Sys.Res.namespaceContainsNonObject, namespaceParts.splice(0, i + 1).join('.')));
            }
        }
        if (!ns) {
            ns = rootObject[currentPart] = {};
        }
        if (!ns.__namespace) {
            if ((i === 0) && (namespacePath !== "Sys")) {
                Sys.__rootNamespaces[Sys.__rootNamespaces.length] = ns;
            }
            ns.__namespace = true;
            ns.__typeName = namespaceParts.slice(0, i + 1).join('.');
            var parsedName;
            try {
                parsedName = eval(ns.__typeName);
            } catch (e) {
                parsedName = null;
            }
            if (parsedName !== ns) {
                delete rootObject[currentPart];
                throw Error.argument('namespacePath', Sys.Res.invalidNameSpace);
            }
            ns.getName = function ns$getName() {
                return this.__typeName;
            }
        }
        rootObject = ns;
    }
}
Type._checkDependency = function Type$_checkDependency(dependency, featureName) {
    var scripts = Type._registerScript._scripts,
        isDependent = (scripts ? ( !! scripts[dependency]) : false);
    if ((typeof(featureName) !== 'undefined') && !isDependent) {
        throw Error.invalidOperation(String.format(Sys.Res.requiredScriptReferenceNotIncluded,
            featureName, dependency));
    }
    return isDependent;
}
Type._registerScript = function Type$_registerScript(scriptName, dependencies) {
    var scripts = Type._registerScript._scripts;
    if (!scripts) {
        Type._registerScript._scripts = scripts = {};
    }
    if (scripts[scriptName]) {
        throw Error.invalidOperation(String.format(Sys.Res.scriptAlreadyLoaded, scriptName));
    }
    scripts[scriptName] = true;
    if (dependencies) {
        for (var i = 0, l = dependencies.length; i < l; i++) {
            var dependency = dependencies[i];
            if (!Type._checkDependency(dependency)) {
                throw Error.invalidOperation(String.format(Sys.Res.scriptDependencyNotFound, scriptName, dependency));
            }
        }
    }
}
Type._registerNamespace("Sys");
Sys.__upperCaseTypes = {};
Sys.__rootNamespaces = [Sys];
Sys.__registeredTypes = {};
Sys._isInstanceOfType = function Sys$_isInstanceOfType(type, instance) {
    if (typeof(instance) === "undefined" || instance === null) return false;
    if (instance instanceof type) return true;
    var instanceType = Object.getType(instance);
    return !!(instanceType === type) ||
        (instanceType.inheritsFrom && instanceType.inheritsFrom(type)) ||
        (instanceType.implementsInterface && instanceType.implementsInterface(type));
}
Sys._getBaseMethod = function Sys$_getBaseMethod(type, instance, name) {
    if (!Sys._isInstanceOfType(type, instance)) throw Error.argumentType('instance', Object.getType(instance), type);
    var baseType = type.getBaseType();
    if (baseType) {
        var baseMethod = baseType.prototype[name];
        return (baseMethod instanceof Function) ? baseMethod : null;
    }
    return null;
}
Sys._isDomElement = function Sys$_isDomElement(obj) {
    var val = false;
    if (typeof(obj.nodeType) !== 'number') {
        var doc = obj.ownerDocument || obj.document || obj;
        if (doc != obj) {
            var w = doc.defaultView || doc.parentWindow;
            val = (w != obj);
        } else {
            val = (typeof(doc.body) === 'undefined');
        }
    }
    return !val;
}

Array.__typeName = 'Array';
Array.__class = true;
Array.add = Array.enqueue = function Array$enqueue(array, item) {
    /// <summary locid="M:J#Array.enqueue" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="item" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "item",
        mayBeNull: true
    }]);
    if (e) throw e;
    array[array.length] = item;
}
Array.addRange = function Array$addRange(array, items) {
    /// <summary locid="M:J#Array.addRange" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="items" type="Array" elementMayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "items",
        type: Array,
        elementMayBeNull: true
    }]);
    if (e) throw e;
    array.push.apply(array, items);
}
Array.clear = function Array$clear(array) {
    /// <summary locid="M:J#Array.clear" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }]);
    if (e) throw e;
    array.length = 0;
}
Array.clone = function Array$clone(array) {
    /// <summary locid="M:J#Array.clone" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <returns type="Array" elementMayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }]);
    if (e) throw e;
    if (array.length === 1) {
        return [array[0]];
    } else {
        return Array.apply(null, array);
    }
}
Array.contains = function Array$contains(array, item) {
    /// <summary locid="M:J#Array.contains" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="item" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "item",
        mayBeNull: true
    }]);
    if (e) throw e;
    return (Sys._indexOf(array, item) >= 0);
}
Array.dequeue = function Array$dequeue(array) {
    /// <summary locid="M:J#Array.dequeue" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <returns mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }]);
    if (e) throw e;
    return array.shift();
}
Array.forEach = function Array$forEach(array, method, instance) {
    /// <summary locid="M:J#Array.forEach" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="method" type="Function"></param>
    /// <param name="instance" optional="true" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "method",
        type: Function
    }, {
        name: "instance",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    for (var i = 0, l = array.length; i < l; i++) {
        var elt = array[i];
        if (typeof(elt) !== 'undefined') method.call(instance, elt, i, array);
    }
}
Array.indexOf = function Array$indexOf(array, item, start) {
    /// <summary locid="M:J#Array.indexOf" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="item" optional="true" mayBeNull="true"></param>
    /// <param name="start" optional="true" mayBeNull="true"></param>
    /// <returns type="Number"></returns>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "item",
        mayBeNull: true,
        optional: true
    }, {
        name: "start",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    return Sys._indexOf(array, item, start);
}
Array.insert = function Array$insert(array, index, item) {
    /// <summary locid="M:J#Array.insert" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="index" mayBeNull="true"></param>
    /// <param name="item" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "index",
        mayBeNull: true
    }, {
        name: "item",
        mayBeNull: true
    }]);
    if (e) throw e;
    array.splice(index, 0, item);
}
Array.parse = function Array$parse(value) {
    /// <summary locid="M:J#Array.parse" />
    /// <param name="value" type="String" mayBeNull="true"></param>
    /// <returns type="Array" elementMayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String,
        mayBeNull: true
    }]);
    if (e) throw e;
    if (!value) return [];
    var v = eval(value);
    if (!Array.isInstanceOfType(v)) throw Error.argument('value', Sys.Res.arrayParseBadFormat);
    return v;
}
Array.remove = function Array$remove(array, item) {
    /// <summary locid="M:J#Array.remove" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="item" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "item",
        mayBeNull: true
    }]);
    if (e) throw e;
    var index = Sys._indexOf(array, item);
    if (index >= 0) {
        array.splice(index, 1);
    }
    return (index >= 0);
}
Array.removeAt = function Array$removeAt(array, index) {
    /// <summary locid="M:J#Array.removeAt" />
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="index" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "array",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "index",
        mayBeNull: true
    }]);
    if (e) throw e;
    array.splice(index, 1);
}
Sys._indexOf = function Sys$_indexOf(array, item, start) {
    if (typeof(item) === "undefined") return -1;
    var length = array.length;
    if (length !== 0) {
        start = start - 0;
        if (isNaN(start)) {
            start = 0;
        } else {
            if (isFinite(start)) {
                start = start - (start % 1);
            }
            if (start < 0) {
                start = Math.max(0, length + start);
            }
        }
        for (var i = start; i < length; i++) {
            if ((typeof(array[i]) !== "undefined") && (array[i] === item)) {
                return i;
            }
        }
    }
    return -1;
}
Type._registerScript._scripts = {
    "MicrosoftAjaxCore.js": true,
    "MicrosoftAjaxGlobalization.js": true,
    "MicrosoftAjaxSerialization.js": true,
    "MicrosoftAjaxComponentModel.js": true,
    "MicrosoftAjaxHistory.js": true,
    "MicrosoftAjaxNetwork.js": true,
    "MicrosoftAjaxWebServices.js": true
};

Sys.IDisposable = function Sys$IDisposable() {
    throw Error.notImplemented();
}

function Sys$IDisposable$dispose() {
    throw Error.notImplemented();
}
Sys.IDisposable.prototype = {
    dispose: Sys$IDisposable$dispose
}
Sys.IDisposable.registerInterface('Sys.IDisposable');

Sys.StringBuilder = function Sys$StringBuilder(initialText) {
    /// <summary locid="M:J#Sys.StringBuilder.#ctor" />
    /// <param name="initialText" optional="true" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "initialText",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    this._parts = (typeof(initialText) !== 'undefined' && initialText !== null && initialText !== '') ?
        [initialText.toString()] : [];
    this._value = {};
    this._len = 0;
}

function Sys$StringBuilder$append(text) {
    /// <summary locid="M:J#Sys.StringBuilder.append" />
    /// <param name="text" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "text",
        mayBeNull: true
    }]);
    if (e) throw e;
    this._parts[this._parts.length] = text;
}

function Sys$StringBuilder$appendLine(text) {
    /// <summary locid="M:J#Sys.StringBuilder.appendLine" />
    /// <param name="text" optional="true" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "text",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    this._parts[this._parts.length] =
        ((typeof(text) === 'undefined') || (text === null) || (text === '')) ?
        '\r\n' : text + '\r\n';
}

function Sys$StringBuilder$clear() {
    /// <summary locid="M:J#Sys.StringBuilder.clear" />
    if (arguments.length !== 0) throw Error.parameterCount();
    this._parts = [];
    this._value = {};
    this._len = 0;
}

function Sys$StringBuilder$isEmpty() {
    /// <summary locid="M:J#Sys.StringBuilder.isEmpty" />
    /// <returns type="Boolean"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this._parts.length === 0) return true;
    return this.toString() === '';
}

function Sys$StringBuilder$toString(separator) {
    /// <summary locid="M:J#Sys.StringBuilder.toString" />
    /// <param name="separator" type="String" optional="true" mayBeNull="true"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "separator",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    separator = separator || '';
    var parts = this._parts;
    if (this._len !== parts.length) {
        this._value = {};
        this._len = parts.length;
    }
    var val = this._value;
    if (typeof(val[separator]) === 'undefined') {
        if (separator !== '') {
            for (var i = 0; i < parts.length;) {
                if ((typeof(parts[i]) === 'undefined') || (parts[i] === '') || (parts[i] === null)) {
                    parts.splice(i, 1);
                } else {
                    i++;
                }
            }
        }
        val[separator] = this._parts.join(separator);
    }
    return val[separator];
}
Sys.StringBuilder.prototype = {
    append: Sys$StringBuilder$append,
    appendLine: Sys$StringBuilder$appendLine,
    clear: Sys$StringBuilder$clear,
    isEmpty: Sys$StringBuilder$isEmpty,
    toString: Sys$StringBuilder$toString
}
Sys.StringBuilder.registerClass('Sys.StringBuilder');

Sys.Browser = {};
Sys.Browser.InternetExplorer = {};
Sys.Browser.Firefox = {};
Sys.Browser.Safari = {};
Sys.Browser.Opera = {};
Sys.Browser.agent = null;
Sys.Browser.hasDebuggerStatement = false;
Sys.Browser.name = navigator.appName;
Sys.Browser.version = parseFloat(navigator.appVersion);
Sys.Browser.documentMode = 0;
if (navigator.userAgent.indexOf(' MSIE ') > -1) {
    Sys.Browser.agent = Sys.Browser.InternetExplorer;
    Sys.Browser.version = parseFloat(navigator.userAgent.match(/MSIE (\d+\.\d+)/)[1]);
    if (Sys.Browser.version >= 8) {
        if (document.documentMode >= 7) {
            Sys.Browser.documentMode = document.documentMode;
        }
    }
    Sys.Browser.hasDebuggerStatement = true;
} else if (navigator.userAgent.indexOf(' Firefox/') > -1) {
    Sys.Browser.agent = Sys.Browser.Firefox;
    Sys.Browser.version = parseFloat(navigator.userAgent.match(/ Firefox\/(\d+\.\d+)/)[1]);
    Sys.Browser.name = 'Firefox';
    Sys.Browser.hasDebuggerStatement = true;
} else if (navigator.userAgent.indexOf(' AppleWebKit/') > -1) {
    Sys.Browser.agent = Sys.Browser.Safari;
    Sys.Browser.version = parseFloat(navigator.userAgent.match(/ AppleWebKit\/(\d+(\.\d+)?)/)[1]);
    Sys.Browser.name = 'Safari';
} else if (navigator.userAgent.indexOf('Opera/') > -1) {
    Sys.Browser.agent = Sys.Browser.Opera;
}

Sys.EventArgs = function Sys$EventArgs() {
    /// <summary locid="M:J#Sys.EventArgs.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
}
Sys.EventArgs.registerClass('Sys.EventArgs');
Sys.EventArgs.Empty = new Sys.EventArgs();

Sys.CancelEventArgs = function Sys$CancelEventArgs() {
    /// <summary locid="M:J#Sys.CancelEventArgs.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    Sys.CancelEventArgs.initializeBase(this);
    this._cancel = false;
}

function Sys$CancelEventArgs$get_cancel() {
    /// <value type="Boolean" locid="P:J#Sys.CancelEventArgs.cancel"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._cancel;
}

function Sys$CancelEventArgs$set_cancel(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Boolean
    }]);
    if (e) throw e;
    this._cancel = value;
}
Sys.CancelEventArgs.prototype = {
    get_cancel: Sys$CancelEventArgs$get_cancel,
    set_cancel: Sys$CancelEventArgs$set_cancel
}
Sys.CancelEventArgs.registerClass('Sys.CancelEventArgs', Sys.EventArgs);
Type.registerNamespace('Sys.UI');

Sys._Debug = function Sys$_Debug() {
    /// <summary locid="M:J#Sys.Debug.#ctor" />
    /// <field name="isDebug" type="Boolean" locid="F:J#Sys.Debug.isDebug"></field>
    if (arguments.length !== 0) throw Error.parameterCount();
}

function Sys$_Debug$_appendConsole(text) {
    if ((typeof(Debug) !== 'undefined') && Debug.writeln) {
        Debug.writeln(text);
    }
    if (window.console && window.console.log) {
        window.console.log(text);
    }
    if (window.opera) {
        window.opera.postError(text);
    }
    if (window.debugService) {
        window.debugService.trace(text);
    }
}

function Sys$_Debug$_appendTrace(text) {
    var traceElement = document.getElementById('TraceConsole');
    if (traceElement && (traceElement.tagName.toUpperCase() === 'TEXTAREA')) {
        traceElement.value += text + '\n';
    }
}

function Sys$_Debug$assert(condition, message, displayCaller) {
    /// <summary locid="M:J#Sys.Debug.assert" />
    /// <param name="condition" type="Boolean"></param>
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="displayCaller" type="Boolean" optional="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "condition",
        type: Boolean
    }, {
        name: "message",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "displayCaller",
        type: Boolean,
        optional: true
    }]);
    if (e) throw e;
    if (!condition) {
        message = (displayCaller && this.assert.caller) ?
            String.format(Sys.Res.assertFailedCaller, message, this.assert.caller) :
            String.format(Sys.Res.assertFailed, message);
        if (confirm(String.format(Sys.Res.breakIntoDebugger, message))) {
            this.fail(message);
        }
    }
}

function Sys$_Debug$clearTrace() {
    /// <summary locid="M:J#Sys.Debug.clearTrace" />
    if (arguments.length !== 0) throw Error.parameterCount();
    var traceElement = document.getElementById('TraceConsole');
    if (traceElement && (traceElement.tagName.toUpperCase() === 'TEXTAREA')) {
        traceElement.value = '';
    }
}

function Sys$_Debug$fail(message) {
    /// <summary locid="M:J#Sys.Debug.fail" />
    /// <param name="message" type="String" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "message",
        type: String,
        mayBeNull: true
    }]);
    if (e) throw e;
    this._appendConsole(message);
    if (Sys.Browser.hasDebuggerStatement) {
        eval('debugger');
    }
}

function Sys$_Debug$trace(text) {
    /// <summary locid="M:J#Sys.Debug.trace" />
    /// <param name="text"></param>
    var e = Function._validateParams(arguments, [{
        name: "text"
    }]);
    if (e) throw e;
    this._appendConsole(text);
    this._appendTrace(text);
}

function Sys$_Debug$traceDump(object, name) {
    /// <summary locid="M:J#Sys.Debug.traceDump" />
    /// <param name="object" mayBeNull="true"></param>
    /// <param name="name" type="String" mayBeNull="true" optional="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "object",
        mayBeNull: true
    }, {
        name: "name",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var text = this._traceDump(object, name, true);
}

function Sys$_Debug$_traceDump(object, name, recursive, indentationPadding, loopArray) {
    name = name ? name : 'traceDump';
    indentationPadding = indentationPadding ? indentationPadding : '';
    if (object === null) {
        this.trace(indentationPadding + name + ': null');
        return;
    }
    switch (typeof(object)) {
        case 'undefined':
            this.trace(indentationPadding + name + ': Undefined');
            break;
        case 'number':
        case 'string':
        case 'boolean':
            this.trace(indentationPadding + name + ': ' + object);
            break;
        default:
            if (Date.isInstanceOfType(object) || RegExp.isInstanceOfType(object)) {
                this.trace(indentationPadding + name + ': ' + object.toString());
                break;
            }
            if (!loopArray) {
                loopArray = [];
            } else if (Array.contains(loopArray, object)) {
                this.trace(indentationPadding + name + ': ...');
                return;
            }
            Array.add(loopArray, object);
            if ((object == window) || (object === document) ||
                (window.HTMLElement && (object instanceof HTMLElement)) ||
                (typeof(object.nodeName) === 'string')) {
                var tag = object.tagName ? object.tagName : 'DomElement';
                if (object.id) {
                    tag += ' - ' + object.id;
                }
                this.trace(indentationPadding + name + ' {' + tag + '}');
            } else {
                var typeName = Object.getTypeName(object);
                this.trace(indentationPadding + name + (typeof(typeName) === 'string' ? ' {' + typeName + '}' : ''));
                if ((indentationPadding === '') || recursive) {
                    indentationPadding += "    ";
                    var i, length, properties, p, v;
                    if (Array.isInstanceOfType(object)) {
                        length = object.length;
                        for (i = 0; i < length; i++) {
                            this._traceDump(object[i], '[' + i + ']', recursive, indentationPadding, loopArray);
                        }
                    } else {
                        for (p in object) {
                            v = object[p];
                            if (!Function.isInstanceOfType(v)) {
                                this._traceDump(v, p, recursive, indentationPadding, loopArray);
                            }
                        }
                    }
                }
            }
            Array.remove(loopArray, object);
    }
}
Sys._Debug.prototype = {
    _appendConsole: Sys$_Debug$_appendConsole,
    _appendTrace: Sys$_Debug$_appendTrace,
    assert: Sys$_Debug$assert,
    clearTrace: Sys$_Debug$clearTrace,
    fail: Sys$_Debug$fail,
    trace: Sys$_Debug$trace,
    traceDump: Sys$_Debug$traceDump,
    _traceDump: Sys$_Debug$_traceDump
}
Sys._Debug.registerClass('Sys._Debug');
Sys.Debug = new Sys._Debug();
Sys.Debug.isDebug = true;

function Sys$Enum$parse(value, ignoreCase) {
    /// <summary locid="M:J#Sys.Enum.parse" />
    /// <param name="value" type="String"></param>
    /// <param name="ignoreCase" type="Boolean" optional="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }, {
        name: "ignoreCase",
        type: Boolean,
        optional: true
    }]);
    if (e) throw e;
    var values, parsed, val;
    if (ignoreCase) {
        values = this.__lowerCaseValues;
        if (!values) {
            this.__lowerCaseValues = values = {};
            var prototype = this.prototype;
            for (var name in prototype) {
                values[name.toLowerCase()] = prototype[name];
            }
        }
    } else {
        values = this.prototype;
    }
    if (!this.__flags) {
        val = (ignoreCase ? value.toLowerCase() : value);
        parsed = values[val.trim()];
        if (typeof(parsed) !== 'number') throw Error.argument('value', String.format(Sys.Res.enumInvalidValue, value, this.__typeName));
        return parsed;
    } else {
        var parts = (ignoreCase ? value.toLowerCase() : value).split(',');
        var v = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
            var part = parts[i].trim();
            parsed = values[part];
            if (typeof(parsed) !== 'number') throw Error.argument('value', String.format(Sys.Res.enumInvalidValue, value.split(',')[i].trim(), this.__typeName));
            v |= parsed;
        }
        return v;
    }
}

function Sys$Enum$toString(value) {
    /// <summary locid="M:J#Sys.Enum.toString" />
    /// <param name="value" optional="true" mayBeNull="true"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "value",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    if ((typeof(value) === 'undefined') || (value === null)) return this.__string;
    if ((typeof(value) != 'number') || ((value % 1) !== 0)) throw Error.argumentType('value', Object.getType(value), this);
    var values = this.prototype;
    var i;
    if (!this.__flags || (value === 0)) {
        for (i in values) {
            if (values[i] === value) {
                return i;
            }
        }
    } else {
        var sorted = this.__sortedValues;
        if (!sorted) {
            sorted = [];
            for (i in values) {
                sorted[sorted.length] = {
                    key: i,
                    value: values[i]
                };
            }
            sorted.sort(function(a, b) {
                return a.value - b.value;
            });
            this.__sortedValues = sorted;
        }
        var parts = [];
        var v = value;
        for (i = sorted.length - 1; i >= 0; i--) {
            var kvp = sorted[i];
            var vali = kvp.value;
            if (vali === 0) continue;
            if ((vali & value) === vali) {
                parts[parts.length] = kvp.key;
                v -= vali;
                if (v === 0) break;
            }
        }
        if (parts.length && v === 0) return parts.reverse().join(', ');
    }
    throw Error.argumentOutOfRange('value', value, String.format(Sys.Res.enumInvalidValue, value, this.__typeName));
}
Type.prototype.registerEnum = function Type$registerEnum(name, flags) {
    /// <summary locid="M:J#Sys.UI.LineType.#ctor" />
    /// <param name="name" type="String"></param>
    /// <param name="flags" type="Boolean" optional="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "name",
        type: String
    }, {
        name: "flags",
        type: Boolean,
        optional: true
    }]);
    if (e) throw e;
    if (!Type.__fullyQualifiedIdentifierRegExp.test(name)) throw Error.argument('name', Sys.Res.notATypeName);
    var parsedName;
    try {
        parsedName = eval(name);
    } catch (e) {
        throw Error.argument('name', Sys.Res.argumentTypeName);
    }
    if (parsedName !== this) throw Error.argument('name', Sys.Res.badTypeName);
    if (Sys.__registeredTypes[name]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, name));
    for (var j in this.prototype) {
        var val = this.prototype[j];
        if (!Type.__identifierRegExp.test(j)) throw Error.invalidOperation(String.format(Sys.Res.enumInvalidValueName, j));
        if (typeof(val) !== 'number' || (val % 1) !== 0) throw Error.invalidOperation(Sys.Res.enumValueNotInteger);
        if (typeof(this[j]) !== 'undefined') throw Error.invalidOperation(String.format(Sys.Res.enumReservedName, j));
    }
    Sys.__upperCaseTypes[name.toUpperCase()] = this;
    for (var i in this.prototype) {
        this[i] = this.prototype[i];
    }
    this.__typeName = name;
    this.parse = Sys$Enum$parse;
    this.__string = this.toString();
    this.toString = Sys$Enum$toString;
    this.__flags = flags;
    this.__enum = true;
    Sys.__registeredTypes[name] = true;
}
Type.isEnum = function Type$isEnum(type) {
    /// <summary locid="M:J#Type.isEnum" />
    /// <param name="type" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "type",
        mayBeNull: true
    }]);
    if (e) throw e;
    if ((typeof(type) === 'undefined') || (type === null)) return false;
    return !!type.__enum;
}
Type.isFlags = function Type$isFlags(type) {
    /// <summary locid="M:J#Type.isFlags" />
    /// <param name="type" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "type",
        mayBeNull: true
    }]);
    if (e) throw e;
    if ((typeof(type) === 'undefined') || (type === null)) return false;
    return !!type.__flags;
}
Sys.CollectionChange = function Sys$CollectionChange(action, newItems, newStartingIndex, oldItems, oldStartingIndex) {
    /// <summary locid="M:J#Sys.CollectionChange.#ctor" />
    /// <param name="action" type="Sys.NotifyCollectionChangedAction"></param>
    /// <param name="newItems" optional="true" mayBeNull="true"></param>
    /// <param name="newStartingIndex" type="Number" integer="true" optional="true" mayBeNull="true"></param>
    /// <param name="oldItems" optional="true" mayBeNull="true"></param>
    /// <param name="oldStartingIndex" type="Number" integer="true" optional="true" mayBeNull="true"></param>
    /// <field name="action" type="Sys.NotifyCollectionChangedAction" locid="F:J#Sys.CollectionChange.action"></field>
    /// <field name="newItems" type="Array" mayBeNull="true" elementMayBeNull="true" locid="F:J#Sys.CollectionChange.newItems"></field>
    /// <field name="newStartingIndex" type="Number" integer="true" locid="F:J#Sys.CollectionChange.newStartingIndex"></field>
    /// <field name="oldItems" type="Array" mayBeNull="true" elementMayBeNull="true" locid="F:J#Sys.CollectionChange.oldItems"></field>
    /// <field name="oldStartingIndex" type="Number" integer="true" locid="F:J#Sys.CollectionChange.oldStartingIndex"></field>
    var e = Function._validateParams(arguments, [{
        name: "action",
        type: Sys.NotifyCollectionChangedAction
    }, {
        name: "newItems",
        mayBeNull: true,
        optional: true
    }, {
        name: "newStartingIndex",
        type: Number,
        mayBeNull: true,
        integer: true,
        optional: true
    }, {
        name: "oldItems",
        mayBeNull: true,
        optional: true
    }, {
        name: "oldStartingIndex",
        type: Number,
        mayBeNull: true,
        integer: true,
        optional: true
    }]);
    if (e) throw e;
    this.action = action;
    if (newItems) {
        if (!(newItems instanceof Array)) {
            newItems = [newItems];
        }
    }
    this.newItems = newItems || null;
    if (typeof newStartingIndex !== "number") {
        newStartingIndex = -1;
    }
    this.newStartingIndex = newStartingIndex;
    if (oldItems) {
        if (!(oldItems instanceof Array)) {
            oldItems = [oldItems];
        }
    }
    this.oldItems = oldItems || null;
    if (typeof oldStartingIndex !== "number") {
        oldStartingIndex = -1;
    }
    this.oldStartingIndex = oldStartingIndex;
}
Sys.CollectionChange.registerClass("Sys.CollectionChange");
Sys.NotifyCollectionChangedAction = function Sys$NotifyCollectionChangedAction() {
    /// <summary locid="M:J#Sys.NotifyCollectionChangedAction.#ctor" />
    /// <field name="add" type="Number" integer="true" static="true" locid="F:J#Sys.NotifyCollectionChangedAction.add"></field>
    /// <field name="remove" type="Number" integer="true" static="true" locid="F:J#Sys.NotifyCollectionChangedAction.remove"></field>
    /// <field name="reset" type="Number" integer="true" static="true" locid="F:J#Sys.NotifyCollectionChangedAction.reset"></field>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}
Sys.NotifyCollectionChangedAction.prototype = {
    add: 0,
    remove: 1,
    reset: 2
}
Sys.NotifyCollectionChangedAction.registerEnum('Sys.NotifyCollectionChangedAction');
Sys.NotifyCollectionChangedEventArgs = function Sys$NotifyCollectionChangedEventArgs(changes) {
    /// <summary locid="M:J#Sys.NotifyCollectionChangedEventArgs.#ctor" />
    /// <param name="changes" type="Array" elementType="Sys.CollectionChange"></param>
    var e = Function._validateParams(arguments, [{
        name: "changes",
        type: Array,
        elementType: Sys.CollectionChange
    }]);
    if (e) throw e;
    this._changes = changes;
    Sys.NotifyCollectionChangedEventArgs.initializeBase(this);
}

function Sys$NotifyCollectionChangedEventArgs$get_changes() {
    /// <value type="Array" elementType="Sys.CollectionChange" locid="P:J#Sys.NotifyCollectionChangedEventArgs.changes"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._changes || [];
}
Sys.NotifyCollectionChangedEventArgs.prototype = {
    get_changes: Sys$NotifyCollectionChangedEventArgs$get_changes
}
Sys.NotifyCollectionChangedEventArgs.registerClass("Sys.NotifyCollectionChangedEventArgs", Sys.EventArgs);
Sys.Observer = function Sys$Observer() {
    throw Error.invalidOperation();
}
Sys.Observer.registerClass("Sys.Observer");
Sys.Observer.makeObservable = function Sys$Observer$makeObservable(target) {
    /// <summary locid="M:J#Sys.Observer.makeObservable" />
    /// <param name="target" mayBeNull="false"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }]);
    if (e) throw e;
    var isArray = target instanceof Array,
        o = Sys.Observer;
    Sys.Observer._ensureObservable(target);
    if (target.setValue === o._observeMethods.setValue) return target;
    o._addMethods(target, o._observeMethods);
    if (isArray) {
        o._addMethods(target, o._arrayMethods);
    }
    return target;
}
Sys.Observer._ensureObservable = function Sys$Observer$_ensureObservable(target) {
    var type = typeof target;
    if ((type === "string") || (type === "number") || (type === "boolean") || (type === "date")) {
        throw Error.invalidOperation(String.format(Sys.Res.notObservable, type));
    }
}
Sys.Observer._addMethods = function Sys$Observer$_addMethods(target, methods) {
    for (var m in methods) {
        if (target[m] && (target[m] !== methods[m])) {
            throw Error.invalidOperation(String.format(Sys.Res.observableConflict, m));
        }
        target[m] = methods[m];
    }
}
Sys.Observer._addEventHandler = function Sys$Observer$_addEventHandler(target, eventName, handler) {
    Sys.Observer._getContext(target, true).events._addHandler(eventName, handler);
}
Sys.Observer.addEventHandler = function Sys$Observer$addEventHandler(target, eventName, handler) {
    /// <summary locid="M:J#Sys.Observer.addEventHandler" />
    /// <param name="target"></param>
    /// <param name="eventName" type="String"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }, {
        name: "eventName",
        type: String
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    Sys.Observer._addEventHandler(target, eventName, handler);
}
Sys.Observer._removeEventHandler = function Sys$Observer$_removeEventHandler(target, eventName, handler) {
    Sys.Observer._getContext(target, true).events._removeHandler(eventName, handler);
}
Sys.Observer.removeEventHandler = function Sys$Observer$removeEventHandler(target, eventName, handler) {
    /// <summary locid="M:J#Sys.Observer.removeEventHandler" />
    /// <param name="target"></param>
    /// <param name="eventName" type="String"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }, {
        name: "eventName",
        type: String
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    Sys.Observer._removeEventHandler(target, eventName, handler);
}
Sys.Observer.raiseEvent = function Sys$Observer$raiseEvent(target, eventName, eventArgs) {
    /// <summary locid="M:J#Sys.Observer.raiseEvent" />
    /// <param name="target"></param>
    /// <param name="eventName" type="String"></param>
    /// <param name="eventArgs" type="Sys.EventArgs"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }, {
        name: "eventName",
        type: String
    }, {
        name: "eventArgs",
        type: Sys.EventArgs
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    var ctx = Sys.Observer._getContext(target);
    if (!ctx) return;
    var handler = ctx.events.getHandler(eventName);
    if (handler) {
        handler(target, eventArgs);
    }
}
Sys.Observer.addPropertyChanged = function Sys$Observer$addPropertyChanged(target, handler) {
    /// <summary locid="M:J#Sys.Observer.addPropertyChanged" />
    /// <param name="target" mayBeNull="false"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    Sys.Observer._addEventHandler(target, "propertyChanged", handler);
}
Sys.Observer.removePropertyChanged = function Sys$Observer$removePropertyChanged(target, handler) {
    /// <summary locid="M:J#Sys.Observer.removePropertyChanged" />
    /// <param name="target" mayBeNull="false"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    Sys.Observer._removeEventHandler(target, "propertyChanged", handler);
}
Sys.Observer.beginUpdate = function Sys$Observer$beginUpdate(target) {
    /// <summary locid="M:J#Sys.Observer.beginUpdate" />
    /// <param name="target" mayBeNull="false"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    Sys.Observer._getContext(target, true).updating = true;
}
Sys.Observer.endUpdate = function Sys$Observer$endUpdate(target) {
    /// <summary locid="M:J#Sys.Observer.endUpdate" />
    /// <param name="target" mayBeNull="false"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    var ctx = Sys.Observer._getContext(target);
    if (!ctx || !ctx.updating) return;
    ctx.updating = false;
    var dirty = ctx.dirty;
    ctx.dirty = false;
    if (dirty) {
        if (target instanceof Array) {
            var changes = ctx.changes;
            ctx.changes = null;
            Sys.Observer.raiseCollectionChanged(target, changes);
        }
        Sys.Observer.raisePropertyChanged(target, "");
    }
}
Sys.Observer.isUpdating = function Sys$Observer$isUpdating(target) {
    /// <summary locid="M:J#Sys.Observer.isUpdating" />
    /// <param name="target" mayBeNull="false"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    var ctx = Sys.Observer._getContext(target);
    return ctx ? ctx.updating : false;
}
Sys.Observer._setValue = function Sys$Observer$_setValue(target, propertyName, value) {
    var getter, setter, mainTarget = target,
        path = propertyName.split('.');
    for (var i = 0, l = (path.length - 1); i < l; i++) {
        var name = path[i];
        getter = target["get_" + name];
        if (typeof(getter) === "function") {
            target = getter.call(target);
        } else {
            target = target[name];
        }
        var type = typeof(target);
        if ((target === null) || (type === "undefined")) {
            throw Error.invalidOperation(String.format(Sys.Res.nullReferenceInPath, propertyName));
        }
    }
    var currentValue, lastPath = path[l];
    getter = target["get_" + lastPath];
    setter = target["set_" + lastPath];
    if (typeof(getter) === 'function') {
        currentValue = getter.call(target);
    } else {
        currentValue = target[lastPath];
    }
    if (typeof(setter) === 'function') {
        setter.call(target, value);
    } else {
        target[lastPath] = value;
    }
    if (currentValue !== value) {
        var ctx = Sys.Observer._getContext(mainTarget);
        if (ctx && ctx.updating) {
            ctx.dirty = true;
            return;
        };
        Sys.Observer.raisePropertyChanged(mainTarget, path[0]);
    }
}
Sys.Observer.setValue = function Sys$Observer$setValue(target, propertyName, value) {
    /// <summary locid="M:J#Sys.Observer.setValue" />
    /// <param name="target" mayBeNull="false"></param>
    /// <param name="propertyName" type="String"></param>
    /// <param name="value" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }, {
        name: "propertyName",
        type: String
    }, {
        name: "value",
        mayBeNull: true
    }]);
    if (e) throw e;
    Sys.Observer._ensureObservable(target);
    Sys.Observer._setValue(target, propertyName, value);
}
Sys.Observer.raisePropertyChanged = function Sys$Observer$raisePropertyChanged(target, propertyName) {
    /// <summary locid="M:J#Sys.Observer.raisePropertyChanged" />
    /// <param name="target" mayBeNull="false"></param>
    /// <param name="propertyName" type="String"></param>
    Sys.Observer.raiseEvent(target, "propertyChanged", new Sys.PropertyChangedEventArgs(propertyName));
}
Sys.Observer.addCollectionChanged = function Sys$Observer$addCollectionChanged(target, handler) {
    /// <summary locid="M:J#Sys.Observer.addCollectionChanged" />
    /// <param name="target" type="Array" elementMayBeNull="true"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "target",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    Sys.Observer._addEventHandler(target, "collectionChanged", handler);
}
Sys.Observer.removeCollectionChanged = function Sys$Observer$removeCollectionChanged(target, handler) {
    /// <summary locid="M:J#Sys.Observer.removeCollectionChanged" />
    /// <param name="target" type="Array" elementMayBeNull="true"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "target",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    Sys.Observer._removeEventHandler(target, "collectionChanged", handler);
}
Sys.Observer._collectionChange = function Sys$Observer$_collectionChange(target, change) {
    var ctx = Sys.Observer._getContext(target);
    if (ctx && ctx.updating) {
        ctx.dirty = true;
        var changes = ctx.changes;
        if (!changes) {
            ctx.changes = changes = [change];
        } else {
            changes.push(change);
        }
    } else {
        Sys.Observer.raiseCollectionChanged(target, [change]);
        Sys.Observer.raisePropertyChanged(target, 'length');
    }
}
Sys.Observer.add = function Sys$Observer$add(target, item) {
    /// <summary locid="M:J#Sys.Observer.add" />
    /// <param name="target" type="Array" elementMayBeNull="true"></param>
    /// <param name="item" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "target",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "item",
        mayBeNull: true
    }]);
    if (e) throw e;
    var change = new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.add, [item], target.length);
    Array.add(target, item);
    Sys.Observer._collectionChange(target, change);
}
Sys.Observer.addRange = function Sys$Observer$addRange(target, items) {
    /// <summary locid="M:J#Sys.Observer.addRange" />
    /// <param name="target" type="Array" elementMayBeNull="true"></param>
    /// <param name="items" type="Array" elementMayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "target",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "items",
        type: Array,
        elementMayBeNull: true
    }]);
    if (e) throw e;
    var change = new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.add, items, target.length);
    Array.addRange(target, items);
    Sys.Observer._collectionChange(target, change);
}
Sys.Observer.clear = function Sys$Observer$clear(target) {
    /// <summary locid="M:J#Sys.Observer.clear" />
    /// <param name="target" type="Array" elementMayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "target",
        type: Array,
        elementMayBeNull: true
    }]);
    if (e) throw e;
    var oldItems = Array.clone(target);
    Array.clear(target);
    Sys.Observer._collectionChange(target, new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.reset, null, -1, oldItems, 0));
}
Sys.Observer.insert = function Sys$Observer$insert(target, index, item) {
    /// <summary locid="M:J#Sys.Observer.insert" />
    /// <param name="target" type="Array" elementMayBeNull="true"></param>
    /// <param name="index" type="Number" integer="true"></param>
    /// <param name="item" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "target",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "index",
        type: Number,
        integer: true
    }, {
        name: "item",
        mayBeNull: true
    }]);
    if (e) throw e;
    Array.insert(target, index, item);
    Sys.Observer._collectionChange(target, new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.add, [item], index));
}
Sys.Observer.remove = function Sys$Observer$remove(target, item) {
    /// <summary locid="M:J#Sys.Observer.remove" />
    /// <param name="target" type="Array" elementMayBeNull="true"></param>
    /// <param name="item" mayBeNull="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "target",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "item",
        mayBeNull: true
    }]);
    if (e) throw e;
    var index = Array.indexOf(target, item);
    if (index !== -1) {
        Array.remove(target, item);
        Sys.Observer._collectionChange(target, new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.remove, null, -1, [item], index));
        return true;
    }
    return false;
}
Sys.Observer.removeAt = function Sys$Observer$removeAt(target, index) {
    /// <summary locid="M:J#Sys.Observer.removeAt" />
    /// <param name="target" type="Array" elementMayBeNull="true"></param>
    /// <param name="index" type="Number" integer="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "target",
        type: Array,
        elementMayBeNull: true
    }, {
        name: "index",
        type: Number,
        integer: true
    }]);
    if (e) throw e;
    if ((index > -1) && (index < target.length)) {
        var item = target[index];
        Array.removeAt(target, index);
        Sys.Observer._collectionChange(target, new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.remove, null, -1, [item], index));
    }
}
Sys.Observer.raiseCollectionChanged = function Sys$Observer$raiseCollectionChanged(target, changes) {
    /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
    /// <param name="target"></param>
    /// <param name="changes" type="Array" elementType="Sys.CollectionChange"></param>
    Sys.Observer.raiseEvent(target, "collectionChanged", new Sys.NotifyCollectionChangedEventArgs(changes));
}
Sys.Observer._observeMethods = {
    add_propertyChanged: function(handler) {
        Sys.Observer._addEventHandler(this, "propertyChanged", handler);
    },
    remove_propertyChanged: function(handler) {
        Sys.Observer._removeEventHandler(this, "propertyChanged", handler);
    },
    addEventHandler: function(eventName, handler) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="eventName" type="String"></param>
        /// <param name="handler" type="Function"></param>
        var e = Function._validateParams(arguments, [{
            name: "eventName",
            type: String
        }, {
            name: "handler",
            type: Function
        }]);
        if (e) throw e;
        Sys.Observer._addEventHandler(this, eventName, handler);
    },
    removeEventHandler: function(eventName, handler) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="eventName" type="String"></param>
        /// <param name="handler" type="Function"></param>
        var e = Function._validateParams(arguments, [{
            name: "eventName",
            type: String
        }, {
            name: "handler",
            type: Function
        }]);
        if (e) throw e;
        Sys.Observer._removeEventHandler(this, eventName, handler);
    },
    get_isUpdating: function() {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <returns type="Boolean"></returns>
        return Sys.Observer.isUpdating(this);
    },
    beginUpdate: function() {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        Sys.Observer.beginUpdate(this);
    },
    endUpdate: function() {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        Sys.Observer.endUpdate(this);
    },
    setValue: function(name, value) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="name" type="String"></param>
        /// <param name="value" mayBeNull="true"></param>
        var e = Function._validateParams(arguments, [{
            name: "name",
            type: String
        }, {
            name: "value",
            mayBeNull: true
        }]);
        if (e) throw e;
        Sys.Observer._setValue(this, name, value);
    },
    raiseEvent: function(eventName, eventArgs) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="eventName" type="String"></param>
        /// <param name="eventArgs" type="Sys.EventArgs"></param>
        Sys.Observer.raiseEvent(this, eventName, eventArgs);
    },
    raisePropertyChanged: function(name) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="name" type="String"></param>
        Sys.Observer.raiseEvent(this, "propertyChanged", new Sys.PropertyChangedEventArgs(name));
    }
}
Sys.Observer._arrayMethods = {
    add_collectionChanged: function(handler) {
        Sys.Observer._addEventHandler(this, "collectionChanged", handler);
    },
    remove_collectionChanged: function(handler) {
        Sys.Observer._removeEventHandler(this, "collectionChanged", handler);
    },
    add: function(item) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="item" mayBeNull="true"></param>
        Sys.Observer.add(this, item);
    },
    addRange: function(items) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="items" type="Array" elementMayBeNull="true"></param>
        Sys.Observer.addRange(this, items);
    },
    clear: function() {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        Sys.Observer.clear(this);
    },
    insert: function(index, item) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="index" type="Number" integer="true"></param>
        /// <param name="item" mayBeNull="true"></param>
        Sys.Observer.insert(this, index, item);
    },
    remove: function(item) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="item" mayBeNull="true"></param>
        /// <returns type="Boolean"></returns>
        return Sys.Observer.remove(this, item);
    },
    removeAt: function(index) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="index" type="Number" integer="true"></param>
        Sys.Observer.removeAt(this, index);
    },
    raiseCollectionChanged: function(changes) {
        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
        /// <param name="changes" type="Array" elementType="Sys.CollectionChange"></param>
        Sys.Observer.raiseEvent(this, "collectionChanged", new Sys.NotifyCollectionChangedEventArgs(changes));
    }
}
Sys.Observer._getContext = function Sys$Observer$_getContext(obj, create) {
    var ctx = obj._observerContext;
    if (ctx) return ctx();
    if (create) {
        return (obj._observerContext = Sys.Observer._createContext())();
    }
    return null;
}
Sys.Observer._createContext = function Sys$Observer$_createContext() {
    var ctx = {
        events: new Sys.EventHandlerList()
    };
    return function() {
        return ctx;
    }
}
Date._appendPreOrPostMatch = function Date$_appendPreOrPostMatch(preMatch, strBuilder) {
    var quoteCount = 0;
    var escaped = false;
    for (var i = 0, il = preMatch.length; i < il; i++) {
        var c = preMatch.charAt(i);
        switch (c) {
            case '\'':
                if (escaped) strBuilder.append("'");
                else quoteCount++;
                escaped = false;
                break;
            case '\\':
                if (escaped) strBuilder.append("\\");
                escaped = !escaped;
                break;
            default:
                strBuilder.append(c);
                escaped = false;
                break;
        }
    }
    return quoteCount;
}
Date._expandFormat = function Date$_expandFormat(dtf, format) {
    if (!format) {
        format = "F";
    }
    var len = format.length;
    if (len === 1) {
        switch (format) {
            case "d":
                return dtf.ShortDatePattern;
            case "D":
                return dtf.LongDatePattern;
            case "t":
                return dtf.ShortTimePattern;
            case "T":
                return dtf.LongTimePattern;
            case "f":
                return dtf.LongDatePattern + " " + dtf.ShortTimePattern;
            case "F":
                return dtf.FullDateTimePattern;
            case "M":
            case "m":
                return dtf.MonthDayPattern;
            case "s":
                return dtf.SortableDateTimePattern;
            case "Y":
            case "y":
                return dtf.YearMonthPattern;
            default:
                throw Error.format(Sys.Res.formatInvalidString);
        }
    } else if ((len === 2) && (format.charAt(0) === "%")) {
        format = format.charAt(1);
    }
    return format;
}
Date._expandYear = function Date$_expandYear(dtf, year) {
    var now = new Date(),
        era = Date._getEra(now);
    if (year < 100) {
        var curr = Date._getEraYear(now, dtf, era);
        year += curr - (curr % 100);
        if (year > dtf.Calendar.TwoDigitYearMax) {
            year -= 100;
        }
    }
    return year;
}
Date._getEra = function Date$_getEra(date, eras) {
    if (!eras) return 0;
    var start, ticks = date.getTime();
    for (var i = 0, l = eras.length; i < l; i += 4) {
        start = eras[i + 2];
        if ((start === null) || (ticks >= start)) {
            return i;
        }
    }
    return 0;
}
Date._getEraYear = function Date$_getEraYear(date, dtf, era, sortable) {
    var year = date.getFullYear();
    if (!sortable && dtf.eras) {
        year -= dtf.eras[era + 3];
    }
    return year;
}
Date._getParseRegExp = function Date$_getParseRegExp(dtf, format) {
    if (!dtf._parseRegExp) {
        dtf._parseRegExp = {};
    } else if (dtf._parseRegExp[format]) {
        return dtf._parseRegExp[format];
    }
    var expFormat = Date._expandFormat(dtf, format);
    expFormat = expFormat.replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1");
    var regexp = new Sys.StringBuilder("^");
    var groups = [];
    var index = 0;
    var quoteCount = 0;
    var tokenRegExp = Date._getTokenRegExp();
    var match;
    while ((match = tokenRegExp.exec(expFormat)) !== null) {
        var preMatch = expFormat.slice(index, match.index);
        index = tokenRegExp.lastIndex;
        quoteCount += Date._appendPreOrPostMatch(preMatch, regexp);
        if ((quoteCount % 2) === 1) {
            regexp.append(match[0]);
            continue;
        }
        switch (match[0]) {
            case 'dddd':
            case 'ddd':
            case 'MMMM':
            case 'MMM':
            case 'gg':
            case 'g':
                regexp.append("(\\D+)");
                break;
            case 'tt':
            case 't':
                regexp.append("(\\D*)");
                break;
            case 'yyyy':
                regexp.append("(\\d{4})");
                break;
            case 'fff':
                regexp.append("(\\d{3})");
                break;
            case 'ff':
                regexp.append("(\\d{2})");
                break;
            case 'f':
                regexp.append("(\\d)");
                break;
            case 'dd':
            case 'd':
            case 'MM':
            case 'M':
            case 'yy':
            case 'y':
            case 'HH':
            case 'H':
            case 'hh':
            case 'h':
            case 'mm':
            case 'm':
            case 'ss':
            case 's':
                regexp.append("(\\d\\d?)");
                break;
            case 'zzz':
                regexp.append("([+-]?\\d\\d?:\\d{2})");
                break;
            case 'zz':
            case 'z':
                regexp.append("([+-]?\\d\\d?)");
                break;
            case '/':
                regexp.append("(\\" + dtf.DateSeparator + ")");
                break;
            default:
                Sys.Debug.fail("Invalid date format pattern");
        }
        Array.add(groups, match[0]);
    }
    Date._appendPreOrPostMatch(expFormat.slice(index), regexp);
    regexp.append("$");
    var regexpStr = regexp.toString().replace(/\s+/g, "\\s+");
    var parseRegExp = {
        'regExp': regexpStr,
        'groups': groups
    };
    dtf._parseRegExp[format] = parseRegExp;
    return parseRegExp;
}
Date._getTokenRegExp = function Date$_getTokenRegExp() {
    return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g;
}
Date.parseLocale = function Date$parseLocale(value, formats) {
    /// <summary locid="M:J#Date.parseLocale" />
    /// <param name="value" type="String"></param>
    /// <param name="formats" parameterArray="true" optional="true" mayBeNull="true"></param>
    /// <returns type="Date"></returns>
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }, {
        name: "formats",
        mayBeNull: true,
        optional: true,
        parameterArray: true
    }]);
    if (e) throw e;
    return Date._parse(value, Sys.CultureInfo.CurrentCulture, arguments);
}
Date.parseInvariant = function Date$parseInvariant(value, formats) {
    /// <summary locid="M:J#Date.parseInvariant" />
    /// <param name="value" type="String"></param>
    /// <param name="formats" parameterArray="true" optional="true" mayBeNull="true"></param>
    /// <returns type="Date"></returns>
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }, {
        name: "formats",
        mayBeNull: true,
        optional: true,
        parameterArray: true
    }]);
    if (e) throw e;
    return Date._parse(value, Sys.CultureInfo.InvariantCulture, arguments);
}
Date._parse = function Date$_parse(value, cultureInfo, args) {
    var i, l, date, format, formats, custom = false;
    for (i = 1, l = args.length; i < l; i++) {
        format = args[i];
        if (format) {
            custom = true;
            date = Date._parseExact(value, format, cultureInfo);
            if (date) return date;
        }
    }
    if (!custom) {
        formats = cultureInfo._getDateTimeFormats();
        for (i = 0, l = formats.length; i < l; i++) {
            date = Date._parseExact(value, formats[i], cultureInfo);
            if (date) return date;
        }
    }
    return null;
}
Date._parseExact = function Date$_parseExact(value, format, cultureInfo) {
    value = value.trim();
    var dtf = cultureInfo.dateTimeFormat,
        parseInfo = Date._getParseRegExp(dtf, format),
        match = new RegExp(parseInfo.regExp).exec(value);
    if (match === null) return null;

    var groups = parseInfo.groups,
        era = null,
        year = null,
        month = null,
        date = null,
        weekDay = null,
        hour = 0,
        hourOffset, min = 0,
        sec = 0,
        msec = 0,
        tzMinOffset = null,
        pmHour = false;
    for (var j = 0, jl = groups.length; j < jl; j++) {
        var matchGroup = match[j + 1];
        if (matchGroup) {
            switch (groups[j]) {
                case 'dd':
                case 'd':
                    date = parseInt(matchGroup, 10);
                    if ((date < 1) || (date > 31)) return null;
                    break;
                case 'MMMM':
                    month = cultureInfo._getMonthIndex(matchGroup);
                    if ((month < 0) || (month > 11)) return null;
                    break;
                case 'MMM':
                    month = cultureInfo._getAbbrMonthIndex(matchGroup);
                    if ((month < 0) || (month > 11)) return null;
                    break;
                case 'M':
                case 'MM':
                    month = parseInt(matchGroup, 10) - 1;
                    if ((month < 0) || (month > 11)) return null;
                    break;
                case 'y':
                case 'yy':
                    year = Date._expandYear(dtf, parseInt(matchGroup, 10));
                    if ((year < 0) || (year > 9999)) return null;
                    break;
                case 'yyyy':
                    year = parseInt(matchGroup, 10);
                    if ((year < 0) || (year > 9999)) return null;
                    break;
                case 'h':
                case 'hh':
                    hour = parseInt(matchGroup, 10);
                    if (hour === 12) hour = 0;
                    if ((hour < 0) || (hour > 11)) return null;
                    break;
                case 'H':
                case 'HH':
                    hour = parseInt(matchGroup, 10);
                    if ((hour < 0) || (hour > 23)) return null;
                    break;
                case 'm':
                case 'mm':
                    min = parseInt(matchGroup, 10);
                    if ((min < 0) || (min > 59)) return null;
                    break;
                case 's':
                case 'ss':
                    sec = parseInt(matchGroup, 10);
                    if ((sec < 0) || (sec > 59)) return null;
                    break;
                case 'tt':
                case 't':
                    var upperToken = matchGroup.toUpperCase();
                    pmHour = (upperToken === dtf.PMDesignator.toUpperCase());
                    if (!pmHour && (upperToken !== dtf.AMDesignator.toUpperCase())) return null;
                    break;
                case 'f':
                    msec = parseInt(matchGroup, 10) * 100;
                    if ((msec < 0) || (msec > 999)) return null;
                    break;
                case 'ff':
                    msec = parseInt(matchGroup, 10) * 10;
                    if ((msec < 0) || (msec > 999)) return null;
                    break;
                case 'fff':
                    msec = parseInt(matchGroup, 10);
                    if ((msec < 0) || (msec > 999)) return null;
                    break;
                case 'dddd':
                    weekDay = cultureInfo._getDayIndex(matchGroup);
                    if ((weekDay < 0) || (weekDay > 6)) return null;
                    break;
                case 'ddd':
                    weekDay = cultureInfo._getAbbrDayIndex(matchGroup);
                    if ((weekDay < 0) || (weekDay > 6)) return null;
                    break;
                case 'zzz':
                    var offsets = matchGroup.split(/:/);
                    if (offsets.length !== 2) return null;
                    hourOffset = parseInt(offsets[0], 10);
                    if ((hourOffset < -12) || (hourOffset > 13)) return null;
                    var minOffset = parseInt(offsets[1], 10);
                    if ((minOffset < 0) || (minOffset > 59)) return null;
                    tzMinOffset = (hourOffset * 60) + (matchGroup.startsWith('-') ? -minOffset : minOffset);
                    break;
                case 'z':
                case 'zz':
                    hourOffset = parseInt(matchGroup, 10);
                    if ((hourOffset < -12) || (hourOffset > 13)) return null;
                    tzMinOffset = hourOffset * 60;
                    break;
                case 'g':
                case 'gg':
                    var eraName = matchGroup;
                    if (!eraName || !dtf.eras) return null;
                    eraName = eraName.toLowerCase().trim();
                    for (var i = 0, l = dtf.eras.length; i < l; i += 4) {
                        if (eraName === dtf.eras[i + 1].toLowerCase()) {
                            era = i;
                            break;
                        }
                    }
                    if (era === null) return null;
                    break;
            }
        }
    }
    var result = new Date(),
        defaults, convert = dtf.Calendar.convert;
    if (convert) {
        defaults = convert.fromGregorian(result);
    }
    if (!convert) {
        defaults = [result.getFullYear(), result.getMonth(), result.getDate()];
    }
    if (year === null) {
        year = defaults[0];
    } else if (dtf.eras) {
        year += dtf.eras[(era || 0) + 3];
    }
    if (month === null) {
        month = defaults[1];
    }
    if (date === null) {
        date = defaults[2];
    }
    if (convert) {
        result = convert.toGregorian(year, month, date);
        if (result === null) return null;
    } else {
        result.setFullYear(year, month, date);
        if (result.getDate() !== date) return null;
        if ((weekDay !== null) && (result.getDay() !== weekDay)) {
            return null;
        }
    }
    if (pmHour && (hour < 12)) {
        hour += 12;
    }
    result.setHours(hour, min, sec, msec);
    if (tzMinOffset !== null) {
        var adjustedMin = result.getMinutes() - (tzMinOffset + result.getTimezoneOffset());
        result.setHours(result.getHours() + parseInt(adjustedMin / 60, 10), adjustedMin % 60);
    }
    return result;
}
Date.prototype.format = function Date$format(format) {
    /// <summary locid="M:J#Date.format" />
    /// <param name="format" type="String"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "format",
        type: String
    }]);
    if (e) throw e;
    return this._toFormattedString(format, Sys.CultureInfo.InvariantCulture);
}
Date.prototype.localeFormat = function Date$localeFormat(format) {
    /// <summary locid="M:J#Date.localeFormat" />
    /// <param name="format" type="String"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "format",
        type: String
    }]);
    if (e) throw e;
    return this._toFormattedString(format, Sys.CultureInfo.CurrentCulture);
}
Date.prototype._toFormattedString = function Date$_toFormattedString(format, cultureInfo) {
    var dtf = cultureInfo.dateTimeFormat,
        convert = dtf.Calendar.convert;
    if (!format || !format.length || (format === 'i')) {
        if (cultureInfo && cultureInfo.name.length) {
            if (convert) {
                return this._toFormattedString(dtf.FullDateTimePattern, cultureInfo);
            } else {
                var eraDate = new Date(this.getTime());
                var era = Date._getEra(this, dtf.eras);
                eraDate.setFullYear(Date._getEraYear(this, dtf, era));
                return eraDate.toLocaleString();
            }
        } else {
            return this.toString();
        }
    }
    var eras = dtf.eras,
        sortable = (format === "s");
    format = Date._expandFormat(dtf, format);
    var ret = new Sys.StringBuilder();
    var hour;

    function addLeadingZero(num) {
        if (num < 10) {
            return '0' + num;
        }
        return num.toString();
    }

    function addLeadingZeros(num) {
        if (num < 10) {
            return '00' + num;
        }
        if (num < 100) {
            return '0' + num;
        }
        return num.toString();
    }

    function padYear(year) {
        if (year < 10) {
            return '000' + year;
        } else if (year < 100) {
            return '00' + year;
        } else if (year < 1000) {
            return '0' + year;
        }
        return year.toString();
    }

    var foundDay, checkedDay, dayPartRegExp = /([^d]|^)(d|dd)([^d]|$)/g;

    function hasDay() {
        if (foundDay || checkedDay) {
            return foundDay;
        }
        foundDay = dayPartRegExp.test(format);
        checkedDay = true;
        return foundDay;
    }

    var quoteCount = 0,
        tokenRegExp = Date._getTokenRegExp(),
        converted;
    if (!sortable && convert) {
        converted = convert.fromGregorian(this);
    }
    for (;;) {
        var index = tokenRegExp.lastIndex;
        var ar = tokenRegExp.exec(format);
        var preMatch = format.slice(index, ar ? ar.index : format.length);
        quoteCount += Date._appendPreOrPostMatch(preMatch, ret);
        if (!ar) break;
        if ((quoteCount % 2) === 1) {
            ret.append(ar[0]);
            continue;
        }

        function getPart(date, part) {
            if (converted) {
                return converted[part];
            }
            switch (part) {
                case 0:
                    return date.getFullYear();
                case 1:
                    return date.getMonth();
                case 2:
                    return date.getDate();
            }
        }
        switch (ar[0]) {
            case "dddd":
                ret.append(dtf.DayNames[this.getDay()]);
                break;
            case "ddd":
                ret.append(dtf.AbbreviatedDayNames[this.getDay()]);
                break;
            case "dd":
                foundDay = true;
                ret.append(addLeadingZero(getPart(this, 2)));
                break;
            case "d":
                foundDay = true;
                ret.append(getPart(this, 2));
                break;
            case "MMMM":
                ret.append((dtf.MonthGenitiveNames && hasDay()) ? dtf.MonthGenitiveNames[getPart(this, 1)] : dtf.MonthNames[getPart(this, 1)]);
                break;
            case "MMM":
                ret.append((dtf.AbbreviatedMonthGenitiveNames && hasDay()) ? dtf.AbbreviatedMonthGenitiveNames[getPart(this, 1)] : dtf.AbbreviatedMonthNames[getPart(this, 1)]);
                break;
            case "MM":
                ret.append(addLeadingZero(getPart(this, 1) + 1));
                break;
            case "M":
                ret.append(getPart(this, 1) + 1);
                break;
            case "yyyy":
                ret.append(padYear(converted ? converted[0] : Date._getEraYear(this, dtf, Date._getEra(this, eras), sortable)));
                break;
            case "yy":
                ret.append(addLeadingZero((converted ? converted[0] : Date._getEraYear(this, dtf, Date._getEra(this, eras), sortable)) % 100));
                break;
            case "y":
                ret.append((converted ? converted[0] : Date._getEraYear(this, dtf, Date._getEra(this, eras), sortable)) % 100);
                break;
            case "hh":
                hour = this.getHours() % 12;
                if (hour === 0) hour = 12;
                ret.append(addLeadingZero(hour));
                break;
            case "h":
                hour = this.getHours() % 12;
                if (hour === 0) hour = 12;
                ret.append(hour);
                break;
            case "HH":
                ret.append(addLeadingZero(this.getHours()));
                break;
            case "H":
                ret.append(this.getHours());
                break;
            case "mm":
                ret.append(addLeadingZero(this.getMinutes()));
                break;
            case "m":
                ret.append(this.getMinutes());
                break;
            case "ss":
                ret.append(addLeadingZero(this.getSeconds()));
                break;
            case "s":
                ret.append(this.getSeconds());
                break;
            case "tt":
                ret.append((this.getHours() < 12) ? dtf.AMDesignator : dtf.PMDesignator);
                break;
            case "t":
                ret.append(((this.getHours() < 12) ? dtf.AMDesignator : dtf.PMDesignator).charAt(0));
                break;
            case "f":
                ret.append(addLeadingZeros(this.getMilliseconds()).charAt(0));
                break;
            case "ff":
                ret.append(addLeadingZeros(this.getMilliseconds()).substr(0, 2));
                break;
            case "fff":
                ret.append(addLeadingZeros(this.getMilliseconds()));
                break;
            case "z":
                hour = this.getTimezoneOffset() / 60;
                ret.append(((hour <= 0) ? '+' : '-') + Math.floor(Math.abs(hour)));
                break;
            case "zz":
                hour = this.getTimezoneOffset() / 60;
                ret.append(((hour <= 0) ? '+' : '-') + addLeadingZero(Math.floor(Math.abs(hour))));
                break;
            case "zzz":
                hour = this.getTimezoneOffset() / 60;
                ret.append(((hour <= 0) ? '+' : '-') + addLeadingZero(Math.floor(Math.abs(hour))) +
                    ":" + addLeadingZero(Math.abs(this.getTimezoneOffset() % 60)));
                break;
            case "g":
            case "gg":
                if (dtf.eras) {
                    ret.append(dtf.eras[Date._getEra(this, eras) + 1]);
                }
                break;
            case "/":
                ret.append(dtf.DateSeparator);
                break;
            default:
                Sys.Debug.fail("Invalid date format pattern");
        }
    }
    return ret.toString();
}
String.localeFormat = function String$localeFormat(format, args) {
    /// <summary locid="M:J#String.localeFormat" />
    /// <param name="format" type="String"></param>
    /// <param name="args" parameterArray="true" mayBeNull="true"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "format",
        type: String
    }, {
        name: "args",
        mayBeNull: true,
        parameterArray: true
    }]);
    if (e) throw e;
    return String._toFormattedString(true, arguments);
}
Number.parseLocale = function Number$parseLocale(value) {
    /// <summary locid="M:J#Number.parseLocale" />
    /// <param name="value" type="String"></param>
    /// <returns type="Number"></returns>
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }], false);
    if (e) throw e;
    return Number._parse(value, Sys.CultureInfo.CurrentCulture);
}
Number.parseInvariant = function Number$parseInvariant(value) {
    /// <summary locid="M:J#Number.parseInvariant" />
    /// <param name="value" type="String"></param>
    /// <returns type="Number"></returns>
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }], false);
    if (e) throw e;
    return Number._parse(value, Sys.CultureInfo.InvariantCulture);
}
Number._parse = function Number$_parse(value, cultureInfo) {
    value = value.trim();

    if (value.match(/^[+-]?infinity$/i)) {
        return parseFloat(value);
    }
    if (value.match(/^0x[a-f0-9]+$/i)) {
        return parseInt(value);
    }
    var numFormat = cultureInfo.numberFormat;
    var signInfo = Number._parseNumberNegativePattern(value, numFormat, numFormat.NumberNegativePattern);
    var sign = signInfo[0];
    var num = signInfo[1];

    if ((sign === '') && (numFormat.NumberNegativePattern !== 1)) {
        signInfo = Number._parseNumberNegativePattern(value, numFormat, 1);
        sign = signInfo[0];
        num = signInfo[1];
    }
    if (sign === '') sign = '+';

    var exponent;
    var intAndFraction;
    var exponentPos = num.indexOf('e');
    if (exponentPos < 0) exponentPos = num.indexOf('E');
    if (exponentPos < 0) {
        intAndFraction = num;
        exponent = null;
    } else {
        intAndFraction = num.substr(0, exponentPos);
        exponent = num.substr(exponentPos + 1);
    }

    var integer;
    var fraction;
    var decimalPos = intAndFraction.indexOf(numFormat.NumberDecimalSeparator);
    if (decimalPos < 0) {
        integer = intAndFraction;
        fraction = null;
    } else {
        integer = intAndFraction.substr(0, decimalPos);
        fraction = intAndFraction.substr(decimalPos + numFormat.NumberDecimalSeparator.length);
    }

    integer = integer.split(numFormat.NumberGroupSeparator).join('');
    var altNumGroupSeparator = numFormat.NumberGroupSeparator.replace(/\u00A0/g, " ");
    if (numFormat.NumberGroupSeparator !== altNumGroupSeparator) {
        integer = integer.split(altNumGroupSeparator).join('');
    }

    var p = sign + integer;
    if (fraction !== null) {
        p += '.' + fraction;
    }
    if (exponent !== null) {
        var expSignInfo = Number._parseNumberNegativePattern(exponent, numFormat, 1);
        if (expSignInfo[0] === '') {
            expSignInfo[0] = '+';
        }
        p += 'e' + expSignInfo[0] + expSignInfo[1];
    }
    if (p.match(/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/)) {
        return parseFloat(p);
    }
    return Number.NaN;
}
Number._parseNumberNegativePattern = function Number$_parseNumberNegativePattern(value, numFormat, numberNegativePattern) {
    var neg = numFormat.NegativeSign;
    var pos = numFormat.PositiveSign;
    switch (numberNegativePattern) {
        case 4:
            neg = ' ' + neg;
            pos = ' ' + pos;
        case 3:
            if (value.endsWith(neg)) {
                return ['-', value.substr(0, value.length - neg.length)];
            } else if (value.endsWith(pos)) {
                return ['+', value.substr(0, value.length - pos.length)];
            }
            break;
        case 2:
            neg += ' ';
            pos += ' ';
        case 1:
            if (value.startsWith(neg)) {
                return ['-', value.substr(neg.length)];
            } else if (value.startsWith(pos)) {
                return ['+', value.substr(pos.length)];
            }
            break;
        case 0:
            if (value.startsWith('(') && value.endsWith(')')) {
                return ['-', value.substr(1, value.length - 2)];
            }
            break;
        default:
            Sys.Debug.fail("");
    }
    return ['', value];
}
Number.prototype.format = function Number$format(format) {
    /// <summary locid="M:J#Number.format" />
    /// <param name="format" type="String"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "format",
        type: String
    }]);
    if (e) throw e;
    return this._toFormattedString(format, Sys.CultureInfo.InvariantCulture);
}
Number.prototype.localeFormat = function Number$localeFormat(format) {
    /// <summary locid="M:J#Number.localeFormat" />
    /// <param name="format" type="String"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "format",
        type: String
    }]);
    if (e) throw e;
    return this._toFormattedString(format, Sys.CultureInfo.CurrentCulture);
}
Number.prototype._toFormattedString = function Number$_toFormattedString(format, cultureInfo) {
    if (!format || (format.length === 0) || (format === 'i')) {
        if (cultureInfo && (cultureInfo.name.length > 0)) {
            return this.toLocaleString();
        } else {
            return this.toString();
        }
    }

    var _percentPositivePattern = ["n %", "n%", "%n"];
    var _percentNegativePattern = ["-n %", "-n%", "-%n"];
    var _numberNegativePattern = ["(n)", "-n", "- n", "n-", "n -"];
    var _currencyPositivePattern = ["$n", "n$", "$ n", "n $"];
    var _currencyNegativePattern = ["($n)", "-$n", "$-n", "$n-", "(n$)", "-n$", "n-$", "n$-", "-n $", "-$ n", "n $-", "$ n-", "$ -n", "n- $", "($ n)", "(n $)"];

    function zeroPad(str, count, left) {
        for (var l = str.length; l < count; l++) {
            str = (left ? ('0' + str) : (str + '0'));
        }
        return str;
    }

    function expandNumber(number, precision, groupSizes, sep, decimalChar) {
        Sys.Debug.assert(groupSizes.length > 0, "groupSizes must be an array of at least 1");
        var curSize = groupSizes[0];
        var curGroupIndex = 1;
        var factor = Math.pow(10, precision);
        var rounded = (Math.round(number * factor) / factor);
        if (!isFinite(rounded)) {
            rounded = number;
        }
        number = rounded;

        var numberString = number.toString();
        var right = "";
        var exponent;


        var split = numberString.split(/e/i);
        numberString = split[0];
        exponent = (split.length > 1 ? parseInt(split[1]) : 0);
        split = numberString.split('.');
        numberString = split[0];
        right = split.length > 1 ? split[1] : "";

        var l;
        if (exponent > 0) {
            right = zeroPad(right, exponent, false);
            numberString += right.slice(0, exponent);
            right = right.substr(exponent);
        } else if (exponent < 0) {
            exponent = -exponent;
            numberString = zeroPad(numberString, exponent + 1, true);
            right = numberString.slice(-exponent, numberString.length) + right;
            numberString = numberString.slice(0, -exponent);
        }
        if (precision > 0) {
            if (right.length > precision) {
                right = right.slice(0, precision);
            } else {
                right = zeroPad(right, precision, false);
            }
            right = decimalChar + right;
        } else {
            right = "";
        }
        var stringIndex = numberString.length - 1;
        var ret = "";
        while (stringIndex >= 0) {
            if (curSize === 0 || curSize > stringIndex) {
                if (ret.length > 0)
                    return numberString.slice(0, stringIndex + 1) + sep + ret + right;
                else
                    return numberString.slice(0, stringIndex + 1) + right;
            }
            if (ret.length > 0)
                ret = numberString.slice(stringIndex - curSize + 1, stringIndex + 1) + sep + ret;
            else
                ret = numberString.slice(stringIndex - curSize + 1, stringIndex + 1);
            stringIndex -= curSize;
            if (curGroupIndex < groupSizes.length) {
                curSize = groupSizes[curGroupIndex];
                curGroupIndex++;
            }
        }
        return numberString.slice(0, stringIndex + 1) + sep + ret + right;
    }
    var nf = cultureInfo.numberFormat;
    var number = Math.abs(this);
    if (!format)
        format = "D";
    var precision = -1;
    if (format.length > 1) precision = parseInt(format.slice(1), 10);
    var pattern;
    switch (format.charAt(0)) {
        case "d":
        case "D":
            pattern = 'n';
            if (precision !== -1) {
                number = zeroPad("" + number, precision, true);
            }
            if (this < 0) number = -number;
            break;
        case "c":
        case "C":
            if (this < 0) pattern = _currencyNegativePattern[nf.CurrencyNegativePattern];
            else pattern = _currencyPositivePattern[nf.CurrencyPositivePattern];
            if (precision === -1) precision = nf.CurrencyDecimalDigits;
            number = expandNumber(Math.abs(this), precision, nf.CurrencyGroupSizes, nf.CurrencyGroupSeparator, nf.CurrencyDecimalSeparator);
            break;
        case "n":
        case "N":
            if (this < 0) pattern = _numberNegativePattern[nf.NumberNegativePattern];
            else pattern = 'n';
            if (precision === -1) precision = nf.NumberDecimalDigits;
            number = expandNumber(Math.abs(this), precision, nf.NumberGroupSizes, nf.NumberGroupSeparator, nf.NumberDecimalSeparator);
            break;
        case "p":
        case "P":
            if (this < 0) pattern = _percentNegativePattern[nf.PercentNegativePattern];
            else pattern = _percentPositivePattern[nf.PercentPositivePattern];
            if (precision === -1) precision = nf.PercentDecimalDigits;
            number = expandNumber(Math.abs(this) * 100, precision, nf.PercentGroupSizes, nf.PercentGroupSeparator, nf.PercentDecimalSeparator);
            break;
        default:
            throw Error.format(Sys.Res.formatBadFormatSpecifier);
    }
    var regex = /n|\$|-|%/g;
    var ret = "";
    for (;;) {
        var index = regex.lastIndex;
        var ar = regex.exec(pattern);
        ret += pattern.slice(index, ar ? ar.index : pattern.length);
        if (!ar)
            break;
        switch (ar[0]) {
            case "n":
                ret += number;
                break;
            case "$":
                ret += nf.CurrencySymbol;
                break;
            case "-":
                if (/[1-9]/.test(number)) {
                    ret += nf.NegativeSign;
                }
                break;
            case "%":
                ret += nf.PercentSymbol;
                break;
            default:
                Sys.Debug.fail("Invalid number format pattern");
        }
    }
    return ret;
}

Sys.CultureInfo = function Sys$CultureInfo(name, numberFormat, dateTimeFormat) {
    /// <summary locid="M:J#Sys.CultureInfo.#ctor" />
    /// <param name="name" type="String"></param>
    /// <param name="numberFormat" type="Object"></param>
    /// <param name="dateTimeFormat" type="Object"></param>
    var e = Function._validateParams(arguments, [{
        name: "name",
        type: String
    }, {
        name: "numberFormat",
        type: Object
    }, {
        name: "dateTimeFormat",
        type: Object
    }]);
    if (e) throw e;
    this.name = name;
    this.numberFormat = numberFormat;
    this.dateTimeFormat = dateTimeFormat;
}

function Sys$CultureInfo$_getDateTimeFormats() {
    if (!this._dateTimeFormats) {
        var dtf = this.dateTimeFormat;
        this._dateTimeFormats =
            [dtf.MonthDayPattern,
            dtf.YearMonthPattern,
            dtf.ShortDatePattern,
            dtf.ShortTimePattern,
            dtf.LongDatePattern,
            dtf.LongTimePattern,
            dtf.FullDateTimePattern,
            dtf.RFC1123Pattern,
            dtf.SortableDateTimePattern,
            dtf.UniversalSortableDateTimePattern
        ];
    }
    return this._dateTimeFormats;
}

function Sys$CultureInfo$_getIndex(value, a1, a2) {
    var upper = this._toUpper(value),
        i = Array.indexOf(a1, upper);
    if (i === -1) {
        i = Array.indexOf(a2, upper);
    }
    return i;
}

function Sys$CultureInfo$_getMonthIndex(value) {
    if (!this._upperMonths) {
        this._upperMonths = this._toUpperArray(this.dateTimeFormat.MonthNames);
        this._upperMonthsGenitive = this._toUpperArray(this.dateTimeFormat.MonthGenitiveNames);
    }
    return this._getIndex(value, this._upperMonths, this._upperMonthsGenitive);
}

function Sys$CultureInfo$_getAbbrMonthIndex(value) {
    if (!this._upperAbbrMonths) {
        this._upperAbbrMonths = this._toUpperArray(this.dateTimeFormat.AbbreviatedMonthNames);
        this._upperAbbrMonthsGenitive = this._toUpperArray(this.dateTimeFormat.AbbreviatedMonthGenitiveNames);
    }
    return this._getIndex(value, this._upperAbbrMonths, this._upperAbbrMonthsGenitive);
}

function Sys$CultureInfo$_getDayIndex(value) {
    if (!this._upperDays) {
        this._upperDays = this._toUpperArray(this.dateTimeFormat.DayNames);
    }
    return Array.indexOf(this._upperDays, this._toUpper(value));
}

function Sys$CultureInfo$_getAbbrDayIndex(value) {
    if (!this._upperAbbrDays) {
        this._upperAbbrDays = this._toUpperArray(this.dateTimeFormat.AbbreviatedDayNames);
    }
    return Array.indexOf(this._upperAbbrDays, this._toUpper(value));
}

function Sys$CultureInfo$_toUpperArray(arr) {
    var result = [];
    for (var i = 0, il = arr.length; i < il; i++) {
        result[i] = this._toUpper(arr[i]);
    }
    return result;
}

function Sys$CultureInfo$_toUpper(value) {
    return value.split("\u00A0").join(' ').toUpperCase();
}
Sys.CultureInfo.prototype = {
    _getDateTimeFormats: Sys$CultureInfo$_getDateTimeFormats,
    _getIndex: Sys$CultureInfo$_getIndex,
    _getMonthIndex: Sys$CultureInfo$_getMonthIndex,
    _getAbbrMonthIndex: Sys$CultureInfo$_getAbbrMonthIndex,
    _getDayIndex: Sys$CultureInfo$_getDayIndex,
    _getAbbrDayIndex: Sys$CultureInfo$_getAbbrDayIndex,
    _toUpperArray: Sys$CultureInfo$_toUpperArray,
    _toUpper: Sys$CultureInfo$_toUpper
}
Sys.CultureInfo.registerClass('Sys.CultureInfo');
Sys.CultureInfo._parse = function Sys$CultureInfo$_parse(value) {
    var dtf = value.dateTimeFormat;
    if (dtf && !dtf.eras) {
        dtf.eras = value.eras;
    }
    return new Sys.CultureInfo(value.name, value.numberFormat, dtf);
}
Sys.CultureInfo.InvariantCulture = Sys.CultureInfo._parse({
    "name": "",
    "numberFormat": {
        "CurrencyDecimalDigits": 2,
        "CurrencyDecimalSeparator": ".",
        "IsReadOnly": true,
        "CurrencyGroupSizes": [3],
        "NumberGroupSizes": [3],
        "PercentGroupSizes": [3],
        "CurrencyGroupSeparator": ",",
        "CurrencySymbol": "\u00A4",
        "NaNSymbol": "NaN",
        "CurrencyNegativePattern": 0,
        "NumberNegativePattern": 1,
        "PercentPositivePattern": 0,
        "PercentNegativePattern": 0,
        "NegativeInfinitySymbol": "-Infinity",
        "NegativeSign": "-",
        "NumberDecimalDigits": 2,
        "NumberDecimalSeparator": ".",
        "NumberGroupSeparator": ",",
        "CurrencyPositivePattern": 0,
        "PositiveInfinitySymbol": "Infinity",
        "PositiveSign": "+",
        "PercentDecimalDigits": 2,
        "PercentDecimalSeparator": ".",
        "PercentGroupSeparator": ",",
        "PercentSymbol": "%",
        "PerMilleSymbol": "\u2030",
        "NativeDigits": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
        "DigitSubstitution": 1
    },
    "dateTimeFormat": {
        "AMDesignator": "AM",
        "Calendar": {
            "MinSupportedDateTime": "@-62135568000000@",
            "MaxSupportedDateTime": "@253402300799999@",
            "AlgorithmType": 1,
            "CalendarType": 1,
            "Eras": [1],
            "TwoDigitYearMax": 2029,
            "IsReadOnly": true
        },
        "DateSeparator": "/",
        "FirstDayOfWeek": 0,
        "CalendarWeekRule": 0,
        "FullDateTimePattern": "dddd, dd MMMM yyyy HH:mm:ss",
        "LongDatePattern": "dddd, dd MMMM yyyy",
        "LongTimePattern": "HH:mm:ss",
        "MonthDayPattern": "MMMM dd",
        "PMDesignator": "PM",
        "RFC1123Pattern": "ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'",
        "ShortDatePattern": "MM/dd/yyyy",
        "ShortTimePattern": "HH:mm",
        "SortableDateTimePattern": "yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss",
        "TimeSeparator": ":",
        "UniversalSortableDateTimePattern": "yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'",
        "YearMonthPattern": "yyyy MMMM",
        "AbbreviatedDayNames": ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        "ShortestDayNames": ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        "DayNames": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        "AbbreviatedMonthNames": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""],
        "MonthNames": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
        "IsReadOnly": true,
        "NativeCalendarName": "Gregorian Calendar",
        "AbbreviatedMonthGenitiveNames": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""],
        "MonthGenitiveNames": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""]
    },
    "eras": [1, "A.D.", null, 0]
});
if (typeof(__cultureInfo) === "object") {
    Sys.CultureInfo.CurrentCulture = Sys.CultureInfo._parse(__cultureInfo);
    delete __cultureInfo;
} else {
    Sys.CultureInfo.CurrentCulture = Sys.CultureInfo._parse({
        "name": "en-US",
        "numberFormat": {
            "CurrencyDecimalDigits": 2,
            "CurrencyDecimalSeparator": ".",
            "IsReadOnly": false,
            "CurrencyGroupSizes": [3],
            "NumberGroupSizes": [3],
            "PercentGroupSizes": [3],
            "CurrencyGroupSeparator": ",",
            "CurrencySymbol": "$",
            "NaNSymbol": "NaN",
            "CurrencyNegativePattern": 0,
            "NumberNegativePattern": 1,
            "PercentPositivePattern": 0,
            "PercentNegativePattern": 0,
            "NegativeInfinitySymbol": "-Infinity",
            "NegativeSign": "-",
            "NumberDecimalDigits": 2,
            "NumberDecimalSeparator": ".",
            "NumberGroupSeparator": ",",
            "CurrencyPositivePattern": 0,
            "PositiveInfinitySymbol": "Infinity",
            "PositiveSign": "+",
            "PercentDecimalDigits": 2,
            "PercentDecimalSeparator": ".",
            "PercentGroupSeparator": ",",
            "PercentSymbol": "%",
            "PerMilleSymbol": "\u2030",
            "NativeDigits": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
            "DigitSubstitution": 1
        },
        "dateTimeFormat": {
            "AMDesignator": "AM",
            "Calendar": {
                "MinSupportedDateTime": "@-62135568000000@",
                "MaxSupportedDateTime": "@253402300799999@",
                "AlgorithmType": 1,
                "CalendarType": 1,
                "Eras": [1],
                "TwoDigitYearMax": 2029,
                "IsReadOnly": false
            },
            "DateSeparator": "/",
            "FirstDayOfWeek": 0,
            "CalendarWeekRule": 0,
            "FullDateTimePattern": "dddd, MMMM dd, yyyy h:mm:ss tt",
            "LongDatePattern": "dddd, MMMM dd, yyyy",
            "LongTimePattern": "h:mm:ss tt",
            "MonthDayPattern": "MMMM dd",
            "PMDesignator": "PM",
            "RFC1123Pattern": "ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'",
            "ShortDatePattern": "M/d/yyyy",
            "ShortTimePattern": "h:mm tt",
            "SortableDateTimePattern": "yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss",
            "TimeSeparator": ":",
            "UniversalSortableDateTimePattern": "yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'",
            "YearMonthPattern": "MMMM, yyyy",
            "AbbreviatedDayNames": ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            "ShortestDayNames": ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            "DayNames": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            "AbbreviatedMonthNames": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""],
            "MonthNames": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
            "IsReadOnly": false,
            "NativeCalendarName": "Gregorian Calendar",
            "AbbreviatedMonthGenitiveNames": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""],
            "MonthGenitiveNames": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""]
        },
        "eras": [1, "A.D.", null, 0]
    });
}
Type.registerNamespace('Sys.Serialization');
Sys.Serialization.JavaScriptSerializer = function Sys$Serialization$JavaScriptSerializer() {
    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
}
Sys.Serialization.JavaScriptSerializer.registerClass('Sys.Serialization.JavaScriptSerializer');
Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs = [];
Sys.Serialization.JavaScriptSerializer._charsToEscape = [];
Sys.Serialization.JavaScriptSerializer._dateRegEx = new RegExp('(^|[^\\\\])\\"\\\\/Date\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\+|-)[0-9]{4})?\\)\\\\/\\"', 'g');
Sys.Serialization.JavaScriptSerializer._escapeChars = {};
Sys.Serialization.JavaScriptSerializer._escapeRegEx = new RegExp('["\\\\\\x00-\\x1F]', 'i');
Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal = new RegExp('["\\\\\\x00-\\x1F]', 'g');
Sys.Serialization.JavaScriptSerializer._jsonRegEx = new RegExp('[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]', 'g');
Sys.Serialization.JavaScriptSerializer._jsonStringRegEx = new RegExp('"(\\\\.|[^"\\\\])*"', 'g');
Sys.Serialization.JavaScriptSerializer._serverTypeFieldName = '__type';
Sys.Serialization.JavaScriptSerializer._init = function Sys$Serialization$JavaScriptSerializer$_init() {
    var replaceChars = ['\\u0000', '\\u0001', '\\u0002', '\\u0003', '\\u0004', '\\u0005', '\\u0006', '\\u0007',
        '\\b', '\\t', '\\n', '\\u000b', '\\f', '\\r', '\\u000e', '\\u000f', '\\u0010', '\\u0011',
        '\\u0012', '\\u0013', '\\u0014', '\\u0015', '\\u0016', '\\u0017', '\\u0018', '\\u0019',
        '\\u001a', '\\u001b', '\\u001c', '\\u001d', '\\u001e', '\\u001f'
    ];
    Sys.Serialization.JavaScriptSerializer._charsToEscape[0] = '\\';
    Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['\\'] = new RegExp('\\\\', 'g');
    Sys.Serialization.JavaScriptSerializer._escapeChars['\\'] = '\\\\';
    Sys.Serialization.JavaScriptSerializer._charsToEscape[1] = '"';
    Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['"'] = new RegExp('"', 'g');
    Sys.Serialization.JavaScriptSerializer._escapeChars['"'] = '\\"';
    for (var i = 0; i < 32; i++) {
        var c = String.fromCharCode(i);
        Sys.Serialization.JavaScriptSerializer._charsToEscape[i + 2] = c;
        Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[c] = new RegExp(c, 'g');
        Sys.Serialization.JavaScriptSerializer._escapeChars[c] = replaceChars[i];
    }
}
Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeBooleanWithBuilder(object, stringBuilder) {
    stringBuilder.append(object.toString());
}
Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeNumberWithBuilder(object, stringBuilder) {
    if (isFinite(object)) {
        stringBuilder.append(String(object));
    } else {
        throw Error.invalidOperation(Sys.Res.cannotSerializeNonFiniteNumbers);
    }
}
Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeStringWithBuilder(string, stringBuilder) {
    stringBuilder.append('"');
    if (Sys.Serialization.JavaScriptSerializer._escapeRegEx.test(string)) {
        if (Sys.Serialization.JavaScriptSerializer._charsToEscape.length === 0) {
            Sys.Serialization.JavaScriptSerializer._init();
        }
        if (string.length < 128) {
            string = string.replace(Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal,
                function(x) {
                    return Sys.Serialization.JavaScriptSerializer._escapeChars[x];
                });
        } else {
            for (var i = 0; i < 34; i++) {
                var c = Sys.Serialization.JavaScriptSerializer._charsToEscape[i];
                if (string.indexOf(c) !== -1) {
                    if (Sys.Browser.agent === Sys.Browser.Opera || Sys.Browser.agent === Sys.Browser.FireFox) {
                        string = string.split(c).join(Sys.Serialization.JavaScriptSerializer._escapeChars[c]);
                    } else {
                        string = string.replace(Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[c],
                            Sys.Serialization.JavaScriptSerializer._escapeChars[c]);
                    }
                }
            }
        }
    }
    stringBuilder.append(string);
    stringBuilder.append('"');
}
Sys.Serialization.JavaScriptSerializer._serializeWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeWithBuilder(object, stringBuilder, sort, prevObjects) {
    var i;
    switch (typeof object) {
        case 'object':
            if (object) {
                if (prevObjects) {
                    for (var j = 0; j < prevObjects.length; j++) {
                        if (prevObjects[j] === object) {
                            throw Error.invalidOperation(Sys.Res.cannotSerializeObjectWithCycle);
                        }
                    }
                } else {
                    prevObjects = new Array();
                }
                try {
                    Array.add(prevObjects, object);

                    if (Number.isInstanceOfType(object)) {
                        Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(object, stringBuilder);
                    } else if (Boolean.isInstanceOfType(object)) {
                        Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(object, stringBuilder);
                    } else if (String.isInstanceOfType(object)) {
                        Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(object, stringBuilder);
                    } else if (Array.isInstanceOfType(object)) {
                        stringBuilder.append('[');

                        for (i = 0; i < object.length; ++i) {
                            if (i > 0) {
                                stringBuilder.append(',');
                            }
                            Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(object[i], stringBuilder, false, prevObjects);
                        }
                        stringBuilder.append(']');
                    } else {
                        if (Date.isInstanceOfType(object)) {
                            stringBuilder.append('"\\/Date(');
                            stringBuilder.append(object.getTime());
                            stringBuilder.append(')\\/"');
                            break;
                        }
                        var properties = [];
                        var propertyCount = 0;
                        for (var name in object) {
                            if (name.startsWith('$')) {
                                continue;
                            }
                            if (name === Sys.Serialization.JavaScriptSerializer._serverTypeFieldName && propertyCount !== 0) {
                                properties[propertyCount++] = properties[0];
                                properties[0] = name;
                            } else {
                                properties[propertyCount++] = name;
                            }
                        }
                        if (sort) properties.sort();
                        stringBuilder.append('{');
                        var needComma = false;

                        for (i = 0; i < propertyCount; i++) {
                            var value = object[properties[i]];
                            if (typeof value !== 'undefined' && typeof value !== 'function') {
                                if (needComma) {
                                    stringBuilder.append(',');
                                } else {
                                    needComma = true;
                                }

                                Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(properties[i], stringBuilder, sort, prevObjects);
                                stringBuilder.append(':');
                                Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(value, stringBuilder, sort, prevObjects);

                            }
                        }
                        stringBuilder.append('}');
                    }
                } finally {
                    Array.removeAt(prevObjects, prevObjects.length - 1);
                }
            } else {
                stringBuilder.append('null');
            }
            break;
        case 'number':
            Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(object, stringBuilder);
            break;
        case 'string':
            Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(object, stringBuilder);
            break;
        case 'boolean':
            Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(object, stringBuilder);
            break;
        default:
            stringBuilder.append('null');
            break;
    }
}
Sys.Serialization.JavaScriptSerializer.serialize = function Sys$Serialization$JavaScriptSerializer$serialize(object) {
    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.serialize" />
    /// <param name="object" mayBeNull="true"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "object",
        mayBeNull: true
    }]);
    if (e) throw e;
    var stringBuilder = new Sys.StringBuilder();
    Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(object, stringBuilder, false);
    return stringBuilder.toString();
}
Sys.Serialization.JavaScriptSerializer.deserialize = function Sys$Serialization$JavaScriptSerializer$deserialize(data, secure) {
    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.deserialize" />
    /// <param name="data" type="String"></param>
    /// <param name="secure" type="Boolean" optional="true"></param>
    /// <returns></returns>
    var e = Function._validateParams(arguments, [{
        name: "data",
        type: String
    }, {
        name: "secure",
        type: Boolean,
        optional: true
    }]);
    if (e) throw e;

    if (data.length === 0) throw Error.argument('data', Sys.Res.cannotDeserializeEmptyString);
    try {
        var exp = data.replace(Sys.Serialization.JavaScriptSerializer._dateRegEx, "$1new Date($2)");

        if (secure && Sys.Serialization.JavaScriptSerializer._jsonRegEx.test(
            exp.replace(Sys.Serialization.JavaScriptSerializer._jsonStringRegEx, ''))) throw null;
        return eval('(' + exp + ')');
    } catch (e) {
        throw Error.argument('data', Sys.Res.cannotDeserializeInvalidJson);
    }
}
Type.registerNamespace('Sys.UI');

Sys.EventHandlerList = function Sys$EventHandlerList() {
    /// <summary locid="M:J#Sys.EventHandlerList.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    this._list = {};
}

function Sys$EventHandlerList$_addHandler(id, handler) {
    Array.add(this._getEvent(id, true), handler);
}

function Sys$EventHandlerList$addHandler(id, handler) {
    /// <summary locid="M:J#Sys.EventHandlerList.addHandler" />
    /// <param name="id" type="String"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "id",
        type: String
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this._addHandler(id, handler);
}

function Sys$EventHandlerList$_removeHandler(id, handler) {
    var evt = this._getEvent(id);
    if (!evt) return;
    Array.remove(evt, handler);
}

function Sys$EventHandlerList$removeHandler(id, handler) {
    /// <summary locid="M:J#Sys.EventHandlerList.removeHandler" />
    /// <param name="id" type="String"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "id",
        type: String
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this._removeHandler(id, handler);
}

function Sys$EventHandlerList$getHandler(id) {
    /// <summary locid="M:J#Sys.EventHandlerList.getHandler" />
    /// <param name="id" type="String"></param>
    /// <returns type="Function"></returns>
    var e = Function._validateParams(arguments, [{
        name: "id",
        type: String
    }]);
    if (e) throw e;
    var evt = this._getEvent(id);
    if (!evt || (evt.length === 0)) return null;
    evt = Array.clone(evt);
    return function(source, args) {
        for (var i = 0, l = evt.length; i < l; i++) {
            evt[i](source, args);
        }
    };
}

function Sys$EventHandlerList$_getEvent(id, create) {
    if (!this._list[id]) {
        if (!create) return null;
        this._list[id] = [];
    }
    return this._list[id];
}
Sys.EventHandlerList.prototype = {
    _addHandler: Sys$EventHandlerList$_addHandler,
    addHandler: Sys$EventHandlerList$addHandler,
    _removeHandler: Sys$EventHandlerList$_removeHandler,
    removeHandler: Sys$EventHandlerList$removeHandler,
    getHandler: Sys$EventHandlerList$getHandler,
    _getEvent: Sys$EventHandlerList$_getEvent
}
Sys.EventHandlerList.registerClass('Sys.EventHandlerList');
Sys.CommandEventArgs = function Sys$CommandEventArgs(commandName, commandArgument, commandSource) {
    /// <summary locid="M:J#Sys.CommandEventArgs.#ctor" />
    /// <param name="commandName" type="String"></param>
    /// <param name="commandArgument" mayBeNull="true"></param>
    /// <param name="commandSource" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "commandName",
        type: String
    }, {
        name: "commandArgument",
        mayBeNull: true
    }, {
        name: "commandSource",
        mayBeNull: true
    }]);
    if (e) throw e;
    Sys.CommandEventArgs.initializeBase(this);
    this._commandName = commandName;
    this._commandArgument = commandArgument;
    this._commandSource = commandSource;
}

function Sys$CommandEventArgs$get_commandName() {
    /// <value type="String" locid="P:J#Sys.CommandEventArgs.commandName"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._commandName;
}

function Sys$CommandEventArgs$get_commandArgument() {
    /// <value mayBeNull="true" locid="P:J#Sys.CommandEventArgs.commandArgument"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._commandArgument;
}

function Sys$CommandEventArgs$get_commandSource() {
    /// <value mayBeNull="true" locid="P:J#Sys.CommandEventArgs.commandSource"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._commandSource;
}
Sys.CommandEventArgs.prototype = {
    _commandName: null,
    _commandArgument: null,
    _commandSource: null,
    get_commandName: Sys$CommandEventArgs$get_commandName,
    get_commandArgument: Sys$CommandEventArgs$get_commandArgument,
    get_commandSource: Sys$CommandEventArgs$get_commandSource
}
Sys.CommandEventArgs.registerClass("Sys.CommandEventArgs", Sys.CancelEventArgs);

Sys.INotifyPropertyChange = function Sys$INotifyPropertyChange() {
    /// <summary locid="M:J#Sys.INotifyPropertyChange.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$INotifyPropertyChange$add_propertyChanged(handler) {
    /// <summary locid="E:J#Sys.INotifyPropertyChange.propertyChanged" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    throw Error.notImplemented();
}

function Sys$INotifyPropertyChange$remove_propertyChanged(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    throw Error.notImplemented();
}
Sys.INotifyPropertyChange.prototype = {
    add_propertyChanged: Sys$INotifyPropertyChange$add_propertyChanged,
    remove_propertyChanged: Sys$INotifyPropertyChange$remove_propertyChanged
}
Sys.INotifyPropertyChange.registerInterface('Sys.INotifyPropertyChange');

Sys.PropertyChangedEventArgs = function Sys$PropertyChangedEventArgs(propertyName) {
    /// <summary locid="M:J#Sys.PropertyChangedEventArgs.#ctor" />
    /// <param name="propertyName" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "propertyName",
        type: String
    }]);
    if (e) throw e;
    Sys.PropertyChangedEventArgs.initializeBase(this);
    this._propertyName = propertyName;
}

function Sys$PropertyChangedEventArgs$get_propertyName() {
    /// <value type="String" locid="P:J#Sys.PropertyChangedEventArgs.propertyName"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._propertyName;
}
Sys.PropertyChangedEventArgs.prototype = {
    get_propertyName: Sys$PropertyChangedEventArgs$get_propertyName
}
Sys.PropertyChangedEventArgs.registerClass('Sys.PropertyChangedEventArgs', Sys.EventArgs);

Sys.INotifyDisposing = function Sys$INotifyDisposing() {
    /// <summary locid="M:J#Sys.INotifyDisposing.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$INotifyDisposing$add_disposing(handler) {
    /// <summary locid="E:J#Sys.INotifyDisposing.disposing" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    throw Error.notImplemented();
}

function Sys$INotifyDisposing$remove_disposing(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    throw Error.notImplemented();
}
Sys.INotifyDisposing.prototype = {
    add_disposing: Sys$INotifyDisposing$add_disposing,
    remove_disposing: Sys$INotifyDisposing$remove_disposing
}
Sys.INotifyDisposing.registerInterface("Sys.INotifyDisposing");

Sys.Component = function Sys$Component() {
    /// <summary locid="M:J#Sys.Component.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (Sys.Application) Sys.Application.registerDisposableObject(this);
}

function Sys$Component$get_events() {
    /// <value type="Sys.EventHandlerList" locid="P:J#Sys.Component.events"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._events) {
        this._events = new Sys.EventHandlerList();
    }
    return this._events;
}

function Sys$Component$get_id() {
    /// <value type="String" locid="P:J#Sys.Component.id"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._id;
}

function Sys$Component$set_id(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    if (this._idSet) throw Error.invalidOperation(Sys.Res.componentCantSetIdTwice);
    this._idSet = true;
    var oldId = this.get_id();
    if (oldId && Sys.Application.findComponent(oldId)) throw Error.invalidOperation(Sys.Res.componentCantSetIdAfterAddedToApp);
    this._id = value;
}

function Sys$Component$get_isInitialized() {
    /// <value type="Boolean" locid="P:J#Sys.Component.isInitialized"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._initialized;
}

function Sys$Component$get_isUpdating() {
    /// <value type="Boolean" locid="P:J#Sys.Component.isUpdating"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._updating;
}

function Sys$Component$add_disposing(handler) {
    /// <summary locid="E:J#Sys.Component.disposing" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().addHandler("disposing", handler);
}

function Sys$Component$remove_disposing(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().removeHandler("disposing", handler);
}

function Sys$Component$add_propertyChanged(handler) {
    /// <summary locid="E:J#Sys.Component.propertyChanged" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().addHandler("propertyChanged", handler);
}

function Sys$Component$remove_propertyChanged(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().removeHandler("propertyChanged", handler);
}

function Sys$Component$beginUpdate() {
    this._updating = true;
}

function Sys$Component$dispose() {
    if (this._events) {
        var handler = this._events.getHandler("disposing");
        if (handler) {
            handler(this, Sys.EventArgs.Empty);
        }
    }
    delete this._events;
    Sys.Application.unregisterDisposableObject(this);
    Sys.Application.removeComponent(this);
}

function Sys$Component$endUpdate() {
    this._updating = false;
    if (!this._initialized) this.initialize();
    this.updated();
}

function Sys$Component$initialize() {
    this._initialized = true;
}

function Sys$Component$raisePropertyChanged(propertyName) {
    /// <summary locid="M:J#Sys.Component.raisePropertyChanged" />
    /// <param name="propertyName" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "propertyName",
        type: String
    }]);
    if (e) throw e;
    if (!this._events) return;
    var handler = this._events.getHandler("propertyChanged");
    if (handler) {
        handler(this, new Sys.PropertyChangedEventArgs(propertyName));
    }
}

function Sys$Component$updated() {}
Sys.Component.prototype = {
    _id: null,
    _idSet: false,
    _initialized: false,
    _updating: false,
    get_events: Sys$Component$get_events,
    get_id: Sys$Component$get_id,
    set_id: Sys$Component$set_id,
    get_isInitialized: Sys$Component$get_isInitialized,
    get_isUpdating: Sys$Component$get_isUpdating,
    add_disposing: Sys$Component$add_disposing,
    remove_disposing: Sys$Component$remove_disposing,
    add_propertyChanged: Sys$Component$add_propertyChanged,
    remove_propertyChanged: Sys$Component$remove_propertyChanged,
    beginUpdate: Sys$Component$beginUpdate,
    dispose: Sys$Component$dispose,
    endUpdate: Sys$Component$endUpdate,
    initialize: Sys$Component$initialize,
    raisePropertyChanged: Sys$Component$raisePropertyChanged,
    updated: Sys$Component$updated
}
Sys.Component.registerClass('Sys.Component', null, Sys.IDisposable, Sys.INotifyPropertyChange, Sys.INotifyDisposing);

function Sys$Component$_setProperties(target, properties) {
    /// <summary locid="M:J#Sys.Component._setProperties" />
    /// <param name="target"></param>
    /// <param name="properties"></param>
    var e = Function._validateParams(arguments, [{
        name: "target"
    }, {
        name: "properties"
    }]);
    if (e) throw e;
    var current;
    var targetType = Object.getType(target);
    var isObject = (targetType === Object) || (targetType === Sys.UI.DomElement);
    var isComponent = Sys.Component.isInstanceOfType(target) && !target.get_isUpdating();
    if (isComponent) target.beginUpdate();
    for (var name in properties) {
        var val = properties[name];
        var getter = isObject ? null : target["get_" + name];
        if (isObject || typeof(getter) !== 'function') {
            var targetVal = target[name];
            if (!isObject && typeof(targetVal) === 'undefined') throw Error.invalidOperation(String.format(Sys.Res.propertyUndefined, name));
            if (!val || (typeof(val) !== 'object') || (isObject && !targetVal)) {
                target[name] = val;
            } else {
                Sys$Component$_setProperties(targetVal, val);
            }
        } else {
            var setter = target["set_" + name];
            if (typeof(setter) === 'function') {
                setter.apply(target, [val]);
            } else if (val instanceof Array) {
                current = getter.apply(target);
                if (!(current instanceof Array)) throw new Error.invalidOperation(String.format(Sys.Res.propertyNotAnArray, name));
                for (var i = 0, j = current.length, l = val.length; i < l; i++, j++) {
                    current[j] = val[i];
                }
            } else if ((typeof(val) === 'object') && (Object.getType(val) === Object)) {
                current = getter.apply(target);
                if ((typeof(current) === 'undefined') || (current === null)) throw new Error.invalidOperation(String.format(Sys.Res.propertyNullOrUndefined, name));
                Sys$Component$_setProperties(current, val);
            } else {
                throw new Error.invalidOperation(String.format(Sys.Res.propertyNotWritable, name));
            }
        }
    }
    if (isComponent) target.endUpdate();
}

function Sys$Component$_setReferences(component, references) {
    for (var name in references) {
        var setter = component["set_" + name];
        var reference = $find(references[name]);
        if (typeof(setter) !== 'function') throw new Error.invalidOperation(String.format(Sys.Res.propertyNotWritable, name));
        if (!reference) throw Error.invalidOperation(String.format(Sys.Res.referenceNotFound, references[name]));
        setter.apply(component, [reference]);
    }
}
var $create = Sys.Component.create = function Sys$Component$create(type, properties, events, references, element) {
    /// <summary locid="M:J#Sys.Component.create" />
    /// <param name="type" type="Type"></param>
    /// <param name="properties" optional="true" mayBeNull="true"></param>
    /// <param name="events" optional="true" mayBeNull="true"></param>
    /// <param name="references" optional="true" mayBeNull="true"></param>
    /// <param name="element" domElement="true" optional="true" mayBeNull="true"></param>
    /// <returns type="Sys.UI.Component"></returns>
    var e = Function._validateParams(arguments, [{
        name: "type",
        type: Type
    }, {
        name: "properties",
        mayBeNull: true,
        optional: true
    }, {
        name: "events",
        mayBeNull: true,
        optional: true
    }, {
        name: "references",
        mayBeNull: true,
        optional: true
    }, {
        name: "element",
        mayBeNull: true,
        domElement: true,
        optional: true
    }]);
    if (e) throw e;
    if (!type.inheritsFrom(Sys.Component)) {
        throw Error.argument('type', String.format(Sys.Res.createNotComponent, type.getName()));
    }
    if (type.inheritsFrom(Sys.UI.Behavior) || type.inheritsFrom(Sys.UI.Control)) {
        if (!element) throw Error.argument('element', Sys.Res.createNoDom);
    } else if (element) throw Error.argument('element', Sys.Res.createComponentOnDom);
    var component = (element ? new type(element) : new type());
    var app = Sys.Application;
    var creatingComponents = app.get_isCreatingComponents();
    component.beginUpdate();
    if (properties) {
        Sys$Component$_setProperties(component, properties);
    }
    if (events) {
        for (var name in events) {
            if (!(component["add_" + name] instanceof Function)) throw new Error.invalidOperation(String.format(Sys.Res.undefinedEvent, name));
            if (!(events[name] instanceof Function)) throw new Error.invalidOperation(Sys.Res.eventHandlerNotFunction);
            component["add_" + name](events[name]);
        }
    }
    if (component.get_id()) {
        app.addComponent(component);
    }
    if (creatingComponents) {
        app._createdComponents[app._createdComponents.length] = component;
        if (references) {
            app._addComponentToSecondPass(component, references);
        } else {
            component.endUpdate();
        }
    } else {
        if (references) {
            Sys$Component$_setReferences(component, references);
        }
        component.endUpdate();
    }
    return component;
}

Sys.UI.MouseButton = function Sys$UI$MouseButton() {
    /// <summary locid="M:J#Sys.UI.MouseButton.#ctor" />
    /// <field name="leftButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.leftButton"></field>
    /// <field name="middleButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.middleButton"></field>
    /// <field name="rightButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.rightButton"></field>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}
Sys.UI.MouseButton.prototype = {
    leftButton: 0,
    middleButton: 1,
    rightButton: 2
}
Sys.UI.MouseButton.registerEnum("Sys.UI.MouseButton");

Sys.UI.Key = function Sys$UI$Key() {
    /// <summary locid="M:J#Sys.UI.Key.#ctor" />
    /// <field name="backspace" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.backspace"></field>
    /// <field name="tab" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.tab"></field>
    /// <field name="enter" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.enter"></field>
    /// <field name="esc" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.esc"></field>
    /// <field name="space" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.space"></field>
    /// <field name="pageUp" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.pageUp"></field>
    /// <field name="pageDown" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.pageDown"></field>
    /// <field name="end" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.end"></field>
    /// <field name="home" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.home"></field>
    /// <field name="left" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.left"></field>
    /// <field name="up" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.up"></field>
    /// <field name="right" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.right"></field>
    /// <field name="down" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.down"></field>
    /// <field name="del" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.del"></field>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}
Sys.UI.Key.prototype = {
    backspace: 8,
    tab: 9,
    enter: 13,
    esc: 27,
    space: 32,
    pageUp: 33,
    pageDown: 34,
    end: 35,
    home: 36,
    left: 37,
    up: 38,
    right: 39,
    down: 40,
    del: 127
}
Sys.UI.Key.registerEnum("Sys.UI.Key");

Sys.UI.Point = function Sys$UI$Point(x, y) {
    /// <summary locid="M:J#Sys.UI.Point.#ctor" />
    /// <param name="x" type="Number" integer="true"></param>
    /// <param name="y" type="Number" integer="true"></param>
    /// <field name="x" type="Number" integer="true" locid="F:J#Sys.UI.Point.x"></field>
    /// <field name="y" type="Number" integer="true" locid="F:J#Sys.UI.Point.y"></field>
    var e = Function._validateParams(arguments, [{
        name: "x",
        type: Number,
        integer: true
    }, {
        name: "y",
        type: Number,
        integer: true
    }]);
    if (e) throw e;
    this.x = x;
    this.y = y;
}
Sys.UI.Point.registerClass('Sys.UI.Point');

Sys.UI.Bounds = function Sys$UI$Bounds(x, y, width, height) {
    /// <summary locid="M:J#Sys.UI.Bounds.#ctor" />
    /// <param name="x" type="Number" integer="true"></param>
    /// <param name="y" type="Number" integer="true"></param>
    /// <param name="width" type="Number" integer="true"></param>
    /// <param name="height" type="Number" integer="true"></param>
    /// <field name="x" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.x"></field>
    /// <field name="y" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.y"></field>
    /// <field name="width" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.width"></field>
    /// <field name="height" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.height"></field>
    var e = Function._validateParams(arguments, [{
        name: "x",
        type: Number,
        integer: true
    }, {
        name: "y",
        type: Number,
        integer: true
    }, {
        name: "width",
        type: Number,
        integer: true
    }, {
        name: "height",
        type: Number,
        integer: true
    }]);
    if (e) throw e;
    this.x = x;
    this.y = y;
    this.height = height;
    this.width = width;
}
Sys.UI.Bounds.registerClass('Sys.UI.Bounds');

Sys.UI.DomEvent = function Sys$UI$DomEvent(eventObject) {
    /// <summary locid="M:J#Sys.UI.DomEvent.#ctor" />
    /// <param name="eventObject"></param>
    /// <field name="altKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.altKey"></field>
    /// <field name="button" type="Sys.UI.MouseButton" locid="F:J#Sys.UI.DomEvent.button"></field>
    /// <field name="charCode" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.charCode"></field>
    /// <field name="clientX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.clientX"></field>
    /// <field name="clientY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.clientY"></field>
    /// <field name="ctrlKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.ctrlKey"></field>
    /// <field name="keyCode" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.keyCode"></field>
    /// <field name="offsetX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.offsetX"></field>
    /// <field name="offsetY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.offsetY"></field>
    /// <field name="screenX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.screenX"></field>
    /// <field name="screenY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.screenY"></field>
    /// <field name="shiftKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.shiftKey"></field>
    /// <field name="target" locid="F:J#Sys.UI.DomEvent.target"></field>
    /// <field name="type" type="String" locid="F:J#Sys.UI.DomEvent.type"></field>
    var e = Function._validateParams(arguments, [{
        name: "eventObject"
    }]);
    if (e) throw e;
    var ev = eventObject;
    var etype = this.type = ev.type.toLowerCase();
    this.rawEvent = ev;
    this.altKey = ev.altKey;
    if (typeof(ev.button) !== 'undefined') {
        this.button = (typeof(ev.which) !== 'undefined') ? ev.button :
            (ev.button === 4) ? Sys.UI.MouseButton.middleButton :
            (ev.button === 2) ? Sys.UI.MouseButton.rightButton :
            Sys.UI.MouseButton.leftButton;
    }
    if (etype === 'keypress') {
        this.charCode = ev.charCode || ev.keyCode;
    } else if (ev.keyCode && (ev.keyCode === 46)) {
        this.keyCode = 127;
    } else {
        this.keyCode = ev.keyCode;
    }
    this.clientX = ev.clientX;
    this.clientY = ev.clientY;
    this.ctrlKey = ev.ctrlKey;
    this.target = ev.target ? ev.target : ev.srcElement;
    if (!etype.startsWith('key')) {
        if ((typeof(ev.offsetX) !== 'undefined') && (typeof(ev.offsetY) !== 'undefined')) {
            this.offsetX = ev.offsetX;
            this.offsetY = ev.offsetY;
        } else if (this.target && (this.target.nodeType !== 3) && (typeof(ev.clientX) === 'number')) {
            var loc = Sys.UI.DomElement.getLocation(this.target);
            var w = Sys.UI.DomElement._getWindow(this.target);
            this.offsetX = (w.pageXOffset || 0) + ev.clientX - loc.x;
            this.offsetY = (w.pageYOffset || 0) + ev.clientY - loc.y;
        }
    }
    this.screenX = ev.screenX;
    this.screenY = ev.screenY;
    this.shiftKey = ev.shiftKey;
}

function Sys$UI$DomEvent$preventDefault() {
    /// <summary locid="M:J#Sys.UI.DomEvent.preventDefault" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this.rawEvent.preventDefault) {
        this.rawEvent.preventDefault();
    } else if (window.event) {
        this.rawEvent.returnValue = false;
    }
}

function Sys$UI$DomEvent$stopPropagation() {
    /// <summary locid="M:J#Sys.UI.DomEvent.stopPropagation" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this.rawEvent.stopPropagation) {
        this.rawEvent.stopPropagation();
    } else if (window.event) {
        this.rawEvent.cancelBubble = true;
    }
}
Sys.UI.DomEvent.prototype = {
    preventDefault: Sys$UI$DomEvent$preventDefault,
    stopPropagation: Sys$UI$DomEvent$stopPropagation
}
Sys.UI.DomEvent.registerClass('Sys.UI.DomEvent');
var $addHandler = Sys.UI.DomEvent.addHandler = function Sys$UI$DomEvent$addHandler(element, eventName, handler, autoRemove) {
    /// <summary locid="M:J#Sys.UI.DomEvent.addHandler" />
    /// <param name="element"></param>
    /// <param name="eventName" type="String"></param>
    /// <param name="handler" type="Function"></param>
    /// <param name="autoRemove" type="Boolean" optional="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "element"
    }, {
        name: "eventName",
        type: String
    }, {
        name: "handler",
        type: Function
    }, {
        name: "autoRemove",
        type: Boolean,
        optional: true
    }]);
    if (e) throw e;
    Sys.UI.DomEvent._ensureDomNode(element);
    if (eventName === "error") throw Error.invalidOperation(Sys.Res.addHandlerCantBeUsedForError);
    if (!element._events) {
        element._events = {};
    }
    var eventCache = element._events[eventName];
    if (!eventCache) {
        element._events[eventName] = eventCache = [];
    }
    var browserHandler;
    if (element.addEventListener) {
        browserHandler = function(e) {
            return handler.call(element, new Sys.UI.DomEvent(e));
        }
        element.addEventListener(eventName, browserHandler, false);
    } else if (element.attachEvent) {
        browserHandler = function() {
            var e = {};
            try {
                e = Sys.UI.DomElement._getWindow(element).event
            } catch (ex) {}
            return handler.call(element, new Sys.UI.DomEvent(e));
        }
        element.attachEvent('on' + eventName, browserHandler);
    }
    eventCache[eventCache.length] = {
        handler: handler,
        browserHandler: browserHandler,
        autoRemove: autoRemove
    };
    if (autoRemove) {
        var d = element.dispose;
        if (d !== Sys.UI.DomEvent._disposeHandlers) {
            element.dispose = Sys.UI.DomEvent._disposeHandlers;
            if (typeof(d) !== "undefined") {
                element._chainDispose = d;
            }
        }
    }
}
var $addHandlers = Sys.UI.DomEvent.addHandlers = function Sys$UI$DomEvent$addHandlers(element, events, handlerOwner, autoRemove) {
    /// <summary locid="M:J#Sys.UI.DomEvent.addHandlers" />
    /// <param name="element"></param>
    /// <param name="events" type="Object"></param>
    /// <param name="handlerOwner" optional="true"></param>
    /// <param name="autoRemove" type="Boolean" optional="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "element"
    }, {
        name: "events",
        type: Object
    }, {
        name: "handlerOwner",
        optional: true
    }, {
        name: "autoRemove",
        type: Boolean,
        optional: true
    }]);
    if (e) throw e;
    Sys.UI.DomEvent._ensureDomNode(element);
    for (var name in events) {
        var handler = events[name];
        if (typeof(handler) !== 'function') throw Error.invalidOperation(Sys.Res.cantAddNonFunctionhandler);
        if (handlerOwner) {
            handler = Function.createDelegate(handlerOwner, handler);
        }
        $addHandler(element, name, handler, autoRemove || false);
    }
}
var $clearHandlers = Sys.UI.DomEvent.clearHandlers = function Sys$UI$DomEvent$clearHandlers(element) {
    /// <summary locid="M:J#Sys.UI.DomEvent.clearHandlers" />
    /// <param name="element"></param>
    var e = Function._validateParams(arguments, [{
        name: "element"
    }]);
    if (e) throw e;
    Sys.UI.DomEvent._ensureDomNode(element);
    Sys.UI.DomEvent._clearHandlers(element, false);
}
Sys.UI.DomEvent._clearHandlers = function Sys$UI$DomEvent$_clearHandlers(element, autoRemoving) {
    if (element._events) {
        var cache = element._events;
        for (var name in cache) {
            var handlers = cache[name];
            for (var i = handlers.length - 1; i >= 0; i--) {
                var entry = handlers[i];
                if (!autoRemoving || entry.autoRemove) {
                    $removeHandler(element, name, entry.handler);
                }
            }
        }
        element._events = null;
    }
}
Sys.UI.DomEvent._disposeHandlers = function Sys$UI$DomEvent$_disposeHandlers() {
    Sys.UI.DomEvent._clearHandlers(this, true);
    var d = this._chainDispose,
        type = typeof(d);
    if (type !== "undefined") {
        this.dispose = d;
        this._chainDispose = null;
        if (type === "function") {
            this.dispose();
        }
    }
}
var $removeHandler = Sys.UI.DomEvent.removeHandler = function Sys$UI$DomEvent$removeHandler(element, eventName, handler) {
    /// <summary locid="M:J#Sys.UI.DomEvent.removeHandler" />
    /// <param name="element"></param>
    /// <param name="eventName" type="String"></param>
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "element"
    }, {
        name: "eventName",
        type: String
    }, {
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    Sys.UI.DomEvent._removeHandler(element, eventName, handler);
}
Sys.UI.DomEvent._removeHandler = function Sys$UI$DomEvent$_removeHandler(element, eventName, handler) {
    Sys.UI.DomEvent._ensureDomNode(element);
    var browserHandler = null;
    if ((typeof(element._events) !== 'object') || !element._events) throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
    var cache = element._events[eventName];
    if (!(cache instanceof Array)) throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
    for (var i = 0, l = cache.length; i < l; i++) {
        if (cache[i].handler === handler) {
            browserHandler = cache[i].browserHandler;
            break;
        }
    }
    if (typeof(browserHandler) !== 'function') throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
    if (element.removeEventListener) {
        element.removeEventListener(eventName, browserHandler, false);
    } else if (element.detachEvent) {
        element.detachEvent('on' + eventName, browserHandler);
    }
    cache.splice(i, 1);
}
Sys.UI.DomEvent._ensureDomNode = function Sys$UI$DomEvent$_ensureDomNode(element) {
    if (element.tagName && (element.tagName.toUpperCase() === "SCRIPT")) return;

    var doc = element.ownerDocument || element.document || element;
    if ((typeof(element.document) !== 'object') && (element != doc) && (typeof(element.nodeType) !== 'number')) {
        throw Error.argument("element", Sys.Res.argumentDomNode);
    }
}

Sys.UI.DomElement = function Sys$UI$DomElement() {
    /// <summary locid="M:J#Sys.UI.DomElement.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}
Sys.UI.DomElement.registerClass('Sys.UI.DomElement');
Sys.UI.DomElement.addCssClass = function Sys$UI$DomElement$addCssClass(element, className) {
    /// <summary locid="M:J#Sys.UI.DomElement.addCssClass" />
    /// <param name="element" domElement="true"></param>
    /// <param name="className" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "className",
        type: String
    }]);
    if (e) throw e;
    if (!Sys.UI.DomElement.containsCssClass(element, className)) {
        if (element.className === '') {
            element.className = className;
        } else {
            element.className += ' ' + className;
        }
    }
}
Sys.UI.DomElement.containsCssClass = function Sys$UI$DomElement$containsCssClass(element, className) {
    /// <summary locid="M:J#Sys.UI.DomElement.containsCssClass" />
    /// <param name="element" domElement="true"></param>
    /// <param name="className" type="String"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "className",
        type: String
    }]);
    if (e) throw e;
    return Array.contains(element.className.split(' '), className);
}
Sys.UI.DomElement.getBounds = function Sys$UI$DomElement$getBounds(element) {
    /// <summary locid="M:J#Sys.UI.DomElement.getBounds" />
    /// <param name="element" domElement="true"></param>
    /// <returns type="Sys.UI.Bounds"></returns>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }]);
    if (e) throw e;
    var offset = Sys.UI.DomElement.getLocation(element);
    return new Sys.UI.Bounds(offset.x, offset.y, element.offsetWidth || 0, element.offsetHeight || 0);
}
var $get = Sys.UI.DomElement.getElementById = function Sys$UI$DomElement$getElementById(id, element) {
    /// <summary locid="M:J#Sys.UI.DomElement.getElementById" />
    /// <param name="id" type="String"></param>
    /// <param name="element" domElement="true" optional="true" mayBeNull="true"></param>
    /// <returns domElement="true" mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "id",
        type: String
    }, {
        name: "element",
        mayBeNull: true,
        domElement: true,
        optional: true
    }]);
    if (e) throw e;
    if (!element) return document.getElementById(id);
    if (element.getElementById) return element.getElementById(id);
    var nodeQueue = [];
    var childNodes = element.childNodes;
    for (var i = 0; i < childNodes.length; i++) {
        var node = childNodes[i];
        if (node.nodeType == 1) {
            nodeQueue[nodeQueue.length] = node;
        }
    }
    while (nodeQueue.length) {
        node = nodeQueue.shift();
        if (node.id == id) {
            return node;
        }
        childNodes = node.childNodes;
        for (i = 0; i < childNodes.length; i++) {
            node = childNodes[i];
            if (node.nodeType == 1) {
                nodeQueue[nodeQueue.length] = node;
            }
        }
    }
    return null;
}
if (document.documentElement.getBoundingClientRect) {
    Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
        /// <summary locid="M:J#Sys.UI.DomElement.getLocation" />
        /// <param name="element" domElement="true"></param>
        /// <returns type="Sys.UI.Point"></returns>
        var e = Function._validateParams(arguments, [{
            name: "element",
            domElement: true
        }]);
        if (e) throw e;
        if (element.self || element.nodeType === 9) return new Sys.UI.Point(0, 0);
        var clientRect = element.getBoundingClientRect();
        if (!clientRect) {
            return new Sys.UI.Point(0, 0);
        }
        var documentElement = element.ownerDocument.documentElement,
            offsetX = Math.floor(clientRect.left + 0.5) + documentElement.scrollLeft,
            offsetY = Math.floor(clientRect.top + 0.5) + documentElement.scrollTop;
        if (Sys.Browser.agent === Sys.Browser.InternetExplorer) {
            try {
                var f = element.ownerDocument.parentWindow.frameElement || null;
                if (f) {
                    var offset = (f.frameBorder === "0" || f.frameBorder === "no") ? 2 : 0;
                    offsetX += offset;
                    offsetY += offset;
                }
            } catch (ex) {}
            if (Sys.Browser.version <= 7) {

                var multiplier, before, rect, d = document.createElement("div");
                d.style.cssText = "position:absolute !important;left:0px !important;right:0px !important;height:0px !important;width:1px !important;display:hidden !important";
                try {
                    before = document.body.childNodes[0];
                    document.body.insertBefore(d, before);
                    rect = d.getBoundingClientRect();
                    document.body.removeChild(d);
                    multiplier = (rect.right - rect.left);
                } catch (e) {}
                if (multiplier && (multiplier !== 1)) {
                    offsetX = Math.floor(offsetX / multiplier);
                    offsetY = Math.floor(offsetY / multiplier);
                }
            }
            if ((document.documentMode || 0) < 8) {
                offsetX -= 2;
                offsetY -= 2;
            }
        }
        return new Sys.UI.Point(offsetX, offsetY);
    }
} else if (Sys.Browser.agent === Sys.Browser.Safari) {
    Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
        /// <summary locid="M:J#Sys.UI.DomElement.getLocation" />
        /// <param name="element" domElement="true"></param>
        /// <returns type="Sys.UI.Point"></returns>
        var e = Function._validateParams(arguments, [{
            name: "element",
            domElement: true
        }]);
        if (e) throw e;
        if ((element.window && (element.window === element)) || element.nodeType === 9) return new Sys.UI.Point(0, 0);
        var offsetX = 0,
            offsetY = 0,
            parent,
            previous = null,
            previousStyle = null,
            currentStyle;
        for (parent = element; parent; previous = parent, previousStyle = currentStyle, parent = parent.offsetParent) {
            currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
            var tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
            if ((parent.offsetLeft || parent.offsetTop) &&
                ((tagName !== "BODY") || (!previousStyle || previousStyle.position !== "absolute"))) {
                offsetX += parent.offsetLeft;
                offsetY += parent.offsetTop;
            }
            if (previous && Sys.Browser.version >= 3) {
                offsetX += parseInt(currentStyle.borderLeftWidth);
                offsetY += parseInt(currentStyle.borderTopWidth);
            }
        }
        currentStyle = Sys.UI.DomElement._getCurrentStyle(element);
        var elementPosition = currentStyle ? currentStyle.position : null;
        if (!elementPosition || (elementPosition !== "absolute")) {
            for (parent = element.parentNode; parent; parent = parent.parentNode) {
                tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
                if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop)) {
                    offsetX -= (parent.scrollLeft || 0);
                    offsetY -= (parent.scrollTop || 0);
                }
                currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
                var parentPosition = currentStyle ? currentStyle.position : null;
                if (parentPosition && (parentPosition === "absolute")) break;
            }
        }
        return new Sys.UI.Point(offsetX, offsetY);
    }
} else {
    Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
        /// <summary locid="M:J#Sys.UI.DomElement.getLocation" />
        /// <param name="element" domElement="true"></param>
        /// <returns type="Sys.UI.Point"></returns>
        var e = Function._validateParams(arguments, [{
            name: "element",
            domElement: true
        }]);
        if (e) throw e;
        if ((element.window && (element.window === element)) || element.nodeType === 9) return new Sys.UI.Point(0, 0);
        var offsetX = 0,
            offsetY = 0,
            parent,
            previous = null,
            previousStyle = null,
            currentStyle = null;
        for (parent = element; parent; previous = parent, previousStyle = currentStyle, parent = parent.offsetParent) {
            var tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
            currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
            if ((parent.offsetLeft || parent.offsetTop) && !((tagName === "BODY") &&
                (!previousStyle || previousStyle.position !== "absolute"))) {
                offsetX += parent.offsetLeft;
                offsetY += parent.offsetTop;
            }
            if (previous !== null && currentStyle) {
                if ((tagName !== "TABLE") && (tagName !== "TD") && (tagName !== "HTML")) {
                    offsetX += parseInt(currentStyle.borderLeftWidth) || 0;
                    offsetY += parseInt(currentStyle.borderTopWidth) || 0;
                }
                if (tagName === "TABLE" &&
                    (currentStyle.position === "relative" || currentStyle.position === "absolute")) {
                    offsetX += parseInt(currentStyle.marginLeft) || 0;
                    offsetY += parseInt(currentStyle.marginTop) || 0;
                }
            }
        }
        currentStyle = Sys.UI.DomElement._getCurrentStyle(element);
        var elementPosition = currentStyle ? currentStyle.position : null;
        if (!elementPosition || (elementPosition !== "absolute")) {
            for (parent = element.parentNode; parent; parent = parent.parentNode) {
                tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
                if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop)) {
                    offsetX -= (parent.scrollLeft || 0);
                    offsetY -= (parent.scrollTop || 0);
                    currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
                    if (currentStyle) {
                        offsetX += parseInt(currentStyle.borderLeftWidth) || 0;
                        offsetY += parseInt(currentStyle.borderTopWidth) || 0;
                    }
                }
            }
        }
        return new Sys.UI.Point(offsetX, offsetY);
    }
}
Sys.UI.DomElement.isDomElement = function Sys$UI$DomElement$isDomElement(obj) {
    /// <summary locid="M:J#Sys.UI.DomElement.isDomElement" />
    /// <param name="obj"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "obj"
    }]);
    if (e) throw e;
    return Sys._isDomElement(obj);
}
Sys.UI.DomElement.removeCssClass = function Sys$UI$DomElement$removeCssClass(element, className) {
    /// <summary locid="M:J#Sys.UI.DomElement.removeCssClass" />
    /// <param name="element" domElement="true"></param>
    /// <param name="className" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "className",
        type: String
    }]);
    if (e) throw e;
    var currentClassName = ' ' + element.className + ' ';
    var index = currentClassName.indexOf(' ' + className + ' ');
    if (index >= 0) {
        element.className = (currentClassName.substr(0, index) + ' ' +
            currentClassName.substring(index + className.length + 1, currentClassName.length)).trim();
    }
}
Sys.UI.DomElement.resolveElement = function Sys$UI$DomElement$resolveElement(elementOrElementId, containerElement) {
    /// <summary locid="M:J#Sys.UI.DomElement.resolveElement" />
    /// <param name="elementOrElementId" mayBeNull="true"></param>
    /// <param name="containerElement" domElement="true" optional="true" mayBeNull="true"></param>
    /// <returns domElement="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "elementOrElementId",
        mayBeNull: true
    }, {
        name: "containerElement",
        mayBeNull: true,
        domElement: true,
        optional: true
    }]);
    if (e) throw e;
    var el = elementOrElementId;
    if (!el) return null;
    if (typeof(el) === "string") {
        el = Sys.UI.DomElement.getElementById(el, containerElement);
        if (!el) {
            throw Error.argument("elementOrElementId", String.format(Sys.Res.elementNotFound, elementOrElementId));
        }
    } else if (!Sys.UI.DomElement.isDomElement(el)) {
        throw Error.argument("elementOrElementId", Sys.Res.expectedElementOrId);
    }
    return el;
}
Sys.UI.DomElement.raiseBubbleEvent = function Sys$UI$DomElement$raiseBubbleEvent(source, args) {
    /// <summary locid="M:J#Sys.UI.DomElement.raiseBubbleEvent" />
    /// <param name="source" domElement="true"></param>
    /// <param name="args" type="Sys.EventArgs"></param>
    var e = Function._validateParams(arguments, [{
        name: "source",
        domElement: true
    }, {
        name: "args",
        type: Sys.EventArgs
    }]);
    if (e) throw e;
    var target = source;
    while (target) {
        var control = target.control;
        if (control && control.onBubbleEvent && control.raiseBubbleEvent) {
            Sys.UI.DomElement._raiseBubbleEventFromControl(control, source, args);
            return;
        }
        target = target.parentNode;
    }
}
Sys.UI.DomElement._raiseBubbleEventFromControl = function Sys$UI$DomElement$_raiseBubbleEventFromControl(control, source, args) {
    if (!control.onBubbleEvent(source, args)) {
        control._raiseBubbleEvent(source, args);
    }
}
Sys.UI.DomElement.setLocation = function Sys$UI$DomElement$setLocation(element, x, y) {
    /// <summary locid="M:J#Sys.UI.DomElement.setLocation" />
    /// <param name="element" domElement="true"></param>
    /// <param name="x" type="Number" integer="true"></param>
    /// <param name="y" type="Number" integer="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "x",
        type: Number,
        integer: true
    }, {
        name: "y",
        type: Number,
        integer: true
    }]);
    if (e) throw e;
    var style = element.style;
    style.position = 'absolute';
    style.left = x + "px";
    style.top = y + "px";
}
Sys.UI.DomElement.toggleCssClass = function Sys$UI$DomElement$toggleCssClass(element, className) {
    /// <summary locid="M:J#Sys.UI.DomElement.toggleCssClass" />
    /// <param name="element" domElement="true"></param>
    /// <param name="className" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "className",
        type: String
    }]);
    if (e) throw e;
    if (Sys.UI.DomElement.containsCssClass(element, className)) {
        Sys.UI.DomElement.removeCssClass(element, className);
    } else {
        Sys.UI.DomElement.addCssClass(element, className);
    }
}
Sys.UI.DomElement.getVisibilityMode = function Sys$UI$DomElement$getVisibilityMode(element) {
    /// <summary locid="M:J#Sys.UI.DomElement.getVisibilityMode" />
    /// <param name="element" domElement="true"></param>
    /// <returns type="Sys.UI.VisibilityMode"></returns>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }]);
    if (e) throw e;
    return (element._visibilityMode === Sys.UI.VisibilityMode.hide) ?
        Sys.UI.VisibilityMode.hide :
        Sys.UI.VisibilityMode.collapse;
}
Sys.UI.DomElement.setVisibilityMode = function Sys$UI$DomElement$setVisibilityMode(element, value) {
    /// <summary locid="M:J#Sys.UI.DomElement.setVisibilityMode" />
    /// <param name="element" domElement="true"></param>
    /// <param name="value" type="Sys.UI.VisibilityMode"></param>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "value",
        type: Sys.UI.VisibilityMode
    }]);
    if (e) throw e;
    Sys.UI.DomElement._ensureOldDisplayMode(element);
    if (element._visibilityMode !== value) {
        element._visibilityMode = value;
        if (Sys.UI.DomElement.getVisible(element) === false) {
            if (element._visibilityMode === Sys.UI.VisibilityMode.hide) {
                element.style.display = element._oldDisplayMode;
            } else {
                element.style.display = 'none';
            }
        }
        element._visibilityMode = value;
    }
}
Sys.UI.DomElement.getVisible = function Sys$UI$DomElement$getVisible(element) {
    /// <summary locid="M:J#Sys.UI.DomElement.getVisible" />
    /// <param name="element" domElement="true"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }]);
    if (e) throw e;
    var style = element.currentStyle || Sys.UI.DomElement._getCurrentStyle(element);
    if (!style) return true;
    return (style.visibility !== 'hidden') && (style.display !== 'none');
}
Sys.UI.DomElement.setVisible = function Sys$UI$DomElement$setVisible(element, value) {
    /// <summary locid="M:J#Sys.UI.DomElement.setVisible" />
    /// <param name="element" domElement="true"></param>
    /// <param name="value" type="Boolean"></param>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "value",
        type: Boolean
    }]);
    if (e) throw e;
    if (value !== Sys.UI.DomElement.getVisible(element)) {
        Sys.UI.DomElement._ensureOldDisplayMode(element);
        element.style.visibility = value ? 'visible' : 'hidden';
        if (value || (element._visibilityMode === Sys.UI.VisibilityMode.hide)) {
            element.style.display = element._oldDisplayMode;
        } else {
            element.style.display = 'none';
        }
    }
}
Sys.UI.DomElement._ensureOldDisplayMode = function Sys$UI$DomElement$_ensureOldDisplayMode(element) {
    if (!element._oldDisplayMode) {
        var style = element.currentStyle || Sys.UI.DomElement._getCurrentStyle(element);
        element._oldDisplayMode = style ? style.display : null;
        if (!element._oldDisplayMode || element._oldDisplayMode === 'none') {
            switch (element.tagName.toUpperCase()) {
                case 'DIV':
                case 'P':
                case 'ADDRESS':
                case 'BLOCKQUOTE':
                case 'BODY':
                case 'COL':
                case 'COLGROUP':
                case 'DD':
                case 'DL':
                case 'DT':
                case 'FIELDSET':
                case 'FORM':
                case 'H1':
                case 'H2':
                case 'H3':
                case 'H4':
                case 'H5':
                case 'H6':
                case 'HR':
                case 'IFRAME':
                case 'LEGEND':
                case 'OL':
                case 'PRE':
                case 'TABLE':
                case 'TD':
                case 'TH':
                case 'TR':
                case 'UL':
                    element._oldDisplayMode = 'block';
                    break;
                case 'LI':
                    element._oldDisplayMode = 'list-item';
                    break;
                default:
                    element._oldDisplayMode = 'inline';
            }
        }
    }
}
Sys.UI.DomElement._getWindow = function Sys$UI$DomElement$_getWindow(element) {
    var doc = element.ownerDocument || element.document || element;
    return doc.defaultView || doc.parentWindow;
}
Sys.UI.DomElement._getCurrentStyle = function Sys$UI$DomElement$_getCurrentStyle(element) {
    if (element.nodeType === 3) return null;
    var w = Sys.UI.DomElement._getWindow(element);
    if (element.documentElement) element = element.documentElement;
    var computedStyle = (w && (element !== w) && w.getComputedStyle) ?
        w.getComputedStyle(element, null) :
        element.currentStyle || element.style;
    if (!computedStyle && (Sys.Browser.agent === Sys.Browser.Safari) && element.style) {
        var oldDisplay = element.style.display;
        var oldPosition = element.style.position;
        element.style.position = 'absolute';
        element.style.display = 'block';
        var style = w.getComputedStyle(element, null);
        element.style.display = oldDisplay;
        element.style.position = oldPosition;
        computedStyle = {};
        for (var n in style) {
            computedStyle[n] = style[n];
        }
        computedStyle.display = 'none';
    }
    return computedStyle;
}

Sys.IContainer = function Sys$IContainer() {
    throw Error.notImplemented();
}

function Sys$IContainer$addComponent(component) {
    /// <summary locid="M:J#Sys.IContainer.addComponent" />
    /// <param name="component" type="Sys.Component"></param>
    var e = Function._validateParams(arguments, [{
        name: "component",
        type: Sys.Component
    }]);
    if (e) throw e;
    throw Error.notImplemented();
}

function Sys$IContainer$removeComponent(component) {
    /// <summary locid="M:J#Sys.IContainer.removeComponent" />
    /// <param name="component" type="Sys.Component"></param>
    var e = Function._validateParams(arguments, [{
        name: "component",
        type: Sys.Component
    }]);
    if (e) throw e;
    throw Error.notImplemented();
}

function Sys$IContainer$findComponent(id) {
    /// <summary locid="M:J#Sys.IContainer.findComponent" />
    /// <param name="id" type="String"></param>
    /// <returns type="Sys.Component"></returns>
    var e = Function._validateParams(arguments, [{
        name: "id",
        type: String
    }]);
    if (e) throw e;
    throw Error.notImplemented();
}

function Sys$IContainer$getComponents() {
    /// <summary locid="M:J#Sys.IContainer.getComponents" />
    /// <returns type="Array" elementType="Sys.Component"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}
Sys.IContainer.prototype = {
    addComponent: Sys$IContainer$addComponent,
    removeComponent: Sys$IContainer$removeComponent,
    findComponent: Sys$IContainer$findComponent,
    getComponents: Sys$IContainer$getComponents
}
Sys.IContainer.registerInterface("Sys.IContainer");

Sys.ApplicationLoadEventArgs = function Sys$ApplicationLoadEventArgs(components, isPartialLoad) {
    /// <summary locid="M:J#Sys.ApplicationLoadEventArgs.#ctor" />
    /// <param name="components" type="Array" elementType="Sys.Component"></param>
    /// <param name="isPartialLoad" type="Boolean"></param>
    var e = Function._validateParams(arguments, [{
        name: "components",
        type: Array,
        elementType: Sys.Component
    }, {
        name: "isPartialLoad",
        type: Boolean
    }]);
    if (e) throw e;
    Sys.ApplicationLoadEventArgs.initializeBase(this);
    this._components = components;
    this._isPartialLoad = isPartialLoad;
}

function Sys$ApplicationLoadEventArgs$get_components() {
    /// <value type="Array" elementType="Sys.Component" locid="P:J#Sys.ApplicationLoadEventArgs.components"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._components;
}

function Sys$ApplicationLoadEventArgs$get_isPartialLoad() {
    /// <value type="Boolean" locid="P:J#Sys.ApplicationLoadEventArgs.isPartialLoad"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._isPartialLoad;
}
Sys.ApplicationLoadEventArgs.prototype = {
    get_components: Sys$ApplicationLoadEventArgs$get_components,
    get_isPartialLoad: Sys$ApplicationLoadEventArgs$get_isPartialLoad
}
Sys.ApplicationLoadEventArgs.registerClass('Sys.ApplicationLoadEventArgs', Sys.EventArgs);

Sys._Application = function Sys$_Application() {
    /// <summary locid="M:J#Sys.Application.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    Sys._Application.initializeBase(this);
    this._disposableObjects = [];
    this._components = {};
    this._createdComponents = [];
    this._secondPassComponents = [];
    this._unloadHandlerDelegate = Function.createDelegate(this, this._unloadHandler);
    Sys.UI.DomEvent.addHandler(window, "unload", this._unloadHandlerDelegate);
    this._domReady();
}

function Sys$_Application$get_isCreatingComponents() {
    /// <value type="Boolean" locid="P:J#Sys.Application.isCreatingComponents"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._creatingComponents;
}

function Sys$_Application$get_isDisposing() {
    /// <value type="Boolean" locid="P:J#Sys.Application.isDisposing"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._disposing;
}

function Sys$_Application$add_init(handler) {
    /// <summary locid="E:J#Sys.Application.init" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    if (this._initialized) {
        handler(this, Sys.EventArgs.Empty);
    } else {
        this.get_events().addHandler("init", handler);
    }
}

function Sys$_Application$remove_init(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().removeHandler("init", handler);
}

function Sys$_Application$add_load(handler) {
    /// <summary locid="E:J#Sys.Application.load" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().addHandler("load", handler);
}

function Sys$_Application$remove_load(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().removeHandler("load", handler);
}

function Sys$_Application$add_unload(handler) {
    /// <summary locid="E:J#Sys.Application.unload" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().addHandler("unload", handler);
}

function Sys$_Application$remove_unload(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().removeHandler("unload", handler);
}

function Sys$_Application$addComponent(component) {
    /// <summary locid="M:J#Sys.Application.addComponent" />
    /// <param name="component" type="Sys.Component"></param>
    var e = Function._validateParams(arguments, [{
        name: "component",
        type: Sys.Component
    }]);
    if (e) throw e;
    var id = component.get_id();
    if (!id) throw Error.invalidOperation(Sys.Res.cantAddWithoutId);
    if (typeof(this._components[id]) !== 'undefined') throw Error.invalidOperation(String.format(Sys.Res.appDuplicateComponent, id));
    this._components[id] = component;
}

function Sys$_Application$beginCreateComponents() {
    /// <summary locid="M:J#Sys.Application.beginCreateComponents" />
    if (arguments.length !== 0) throw Error.parameterCount();
    this._creatingComponents = true;
}

function Sys$_Application$dispose() {
    /// <summary locid="M:J#Sys.Application.dispose" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._disposing) {
        this._disposing = true;
        if (this._timerCookie) {
            window.clearTimeout(this._timerCookie);
            delete this._timerCookie;
        }
        if (this._endRequestHandler) {
            Sys.WebForms.PageRequestManager.getInstance().remove_endRequest(this._endRequestHandler);
            delete this._endRequestHandler;
        }
        if (this._beginRequestHandler) {
            Sys.WebForms.PageRequestManager.getInstance().remove_beginRequest(this._beginRequestHandler);
            delete this._beginRequestHandler;
        }
        if (window.pageUnload) {
            window.pageUnload(this, Sys.EventArgs.Empty);
        }
        var unloadHandler = this.get_events().getHandler("unload");
        if (unloadHandler) {
            unloadHandler(this, Sys.EventArgs.Empty);
        }
        var disposableObjects = Array.clone(this._disposableObjects);
        for (var i = 0, l = disposableObjects.length; i < l; i++) {
            var object = disposableObjects[i];
            if (typeof(object) !== "undefined") {
                object.dispose();
            }
        }
        Array.clear(this._disposableObjects);
        Sys.UI.DomEvent.removeHandler(window, "unload", this._unloadHandlerDelegate);
        if (Sys._ScriptLoader) {
            var sl = Sys._ScriptLoader.getInstance();
            if (sl) {
                sl.dispose();
            }
        }
        Sys._Application.callBaseMethod(this, 'dispose');
    }
}

function Sys$_Application$disposeElement(element, childNodesOnly) {
    /// <summary locid="M:J#Sys._Application.disposeElement" />
    /// <param name="element"></param>
    /// <param name="childNodesOnly" type="Boolean"></param>
    var e = Function._validateParams(arguments, [{
        name: "element"
    }, {
        name: "childNodesOnly",
        type: Boolean
    }]);
    if (e) throw e;
    if (element.nodeType === 1) {
        var children = element.getElementsByTagName("*");
        for (var i = children.length - 1; i >= 0; i--) {
            this._disposeElementInternal(children[i]);
        }
        if (!childNodesOnly) {
            this._disposeElementInternal(element);
        }
    }
}

function Sys$_Application$endCreateComponents() {
    /// <summary locid="M:J#Sys.Application.endCreateComponents" />
    if (arguments.length !== 0) throw Error.parameterCount();
    var components = this._secondPassComponents;
    for (var i = 0, l = components.length; i < l; i++) {
        var component = components[i].component;
        Sys$Component$_setReferences(component, components[i].references);
        component.endUpdate();
    }
    this._secondPassComponents = [];
    this._creatingComponents = false;
}

function Sys$_Application$findComponent(id, parent) {
    /// <summary locid="M:J#Sys.Application.findComponent" />
    /// <param name="id" type="String"></param>
    /// <param name="parent" optional="true" mayBeNull="true"></param>
    /// <returns type="Sys.Component" mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "id",
        type: String
    }, {
        name: "parent",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    return (parent ?
        ((Sys.IContainer.isInstanceOfType(parent)) ?
            parent.findComponent(id) :
            parent[id] || null) :
        Sys.Application._components[id] || null);
}

function Sys$_Application$getComponents() {
    /// <summary locid="M:J#Sys.Application.getComponents" />
    /// <returns type="Array" elementType="Sys.Component"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    var res = [];
    var components = this._components;
    for (var name in components) {
        res[res.length] = components[name];
    }
    return res;
}

function Sys$_Application$initialize() {
    /// <summary locid="M:J#Sys.Application.initialize" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this.get_isInitialized() && !this._disposing) {
        Sys._Application.callBaseMethod(this, 'initialize');
        this._raiseInit();
        if (this.get_stateString) {
            if (Sys.WebForms && Sys.WebForms.PageRequestManager) {
                this._beginRequestHandler = Function.createDelegate(this, this._onPageRequestManagerBeginRequest);
                Sys.WebForms.PageRequestManager.getInstance().add_beginRequest(this._beginRequestHandler);
                this._endRequestHandler = Function.createDelegate(this, this._onPageRequestManagerEndRequest);
                Sys.WebForms.PageRequestManager.getInstance().add_endRequest(this._endRequestHandler);
            }
            var loadedEntry = this.get_stateString();
            if (loadedEntry !== this._currentEntry) {
                this._navigate(loadedEntry);
            } else {
                this._ensureHistory();
            }
        }
        this.raiseLoad();
    }
}

function Sys$_Application$notifyScriptLoaded() {
    /// <summary locid="M:J#Sys.Application.notifyScriptLoaded" />
    if (arguments.length !== 0) throw Error.parameterCount();
}

function Sys$_Application$registerDisposableObject(object) {
    /// <summary locid="M:J#Sys.Application.registerDisposableObject" />
    /// <param name="object" type="Sys.IDisposable"></param>
    var e = Function._validateParams(arguments, [{
        name: "object",
        type: Sys.IDisposable
    }]);
    if (e) throw e;
    if (!this._disposing) {
        var objects = this._disposableObjects,
            i = objects.length;
        objects[i] = object;
        object.__msdisposeindex = i;
    }
}

function Sys$_Application$raiseLoad() {
    /// <summary locid="M:J#Sys.Application.raiseLoad" />
    if (arguments.length !== 0) throw Error.parameterCount();
    var h = this.get_events().getHandler("load");
    var args = new Sys.ApplicationLoadEventArgs(Array.clone(this._createdComponents), !! this._loaded);
    this._loaded = true;
    if (h) {
        h(this, args);
    }
    if (window.pageLoad) {
        window.pageLoad(this, args);
    }
    this._createdComponents = [];
}

function Sys$_Application$removeComponent(component) {
    /// <summary locid="M:J#Sys.Application.removeComponent" />
    /// <param name="component" type="Sys.Component"></param>
    var e = Function._validateParams(arguments, [{
        name: "component",
        type: Sys.Component
    }]);
    if (e) throw e;
    var id = component.get_id();
    if (id) delete this._components[id];
}

function Sys$_Application$unregisterDisposableObject(object) {
    /// <summary locid="M:J#Sys.Application.unregisterDisposableObject" />
    /// <param name="object" type="Sys.IDisposable"></param>
    var e = Function._validateParams(arguments, [{
        name: "object",
        type: Sys.IDisposable
    }]);
    if (e) throw e;
    if (!this._disposing) {
        var i = object.__msdisposeindex;
        if (typeof(i) === "number") {
            var disposableObjects = this._disposableObjects;
            delete disposableObjects[i];
            delete object.__msdisposeindex;
            if (++this._deleteCount > 1000) {
                var newArray = [];
                for (var j = 0, l = disposableObjects.length; j < l; j++) {
                    object = disposableObjects[j];
                    if (typeof(object) !== "undefined") {
                        object.__msdisposeindex = newArray.length;
                        newArray.push(object);
                    }
                }
                this._disposableObjects = newArray;
                this._deleteCount = 0;
            }
        }
    }
}

function Sys$_Application$_addComponentToSecondPass(component, references) {
    this._secondPassComponents[this._secondPassComponents.length] = {
        component: component,
        references: references
    };
}

function Sys$_Application$_disposeComponents(list) {
    if (list) {
        for (var i = list.length - 1; i >= 0; i--) {
            var item = list[i];
            if (typeof(item.dispose) === "function") {
                item.dispose();
            }
        }
    }
}

function Sys$_Application$_disposeElementInternal(element) {
    var d = element.dispose;
    if (d && typeof(d) === "function") {
        element.dispose();
    } else {
        var c = element.control;
        if (c && typeof(c.dispose) === "function") {
            c.dispose();
        }
    }
    var list = element._behaviors;
    if (list) {
        this._disposeComponents(list);
    }
    list = element._components;
    if (list) {
        this._disposeComponents(list);
        element._components = null;
    }
}

function Sys$_Application$_domReady() {
    var check, er, app = this;

    function init() {
        app.initialize();
    }
    var onload = function() {
        Sys.UI.DomEvent.removeHandler(window, "load", onload);
        init();
    }
    Sys.UI.DomEvent.addHandler(window, "load", onload);

    if (document.addEventListener) {
        try {
            document.addEventListener("DOMContentLoaded", check = function() {
                document.removeEventListener("DOMContentLoaded", check, false);
                init();
            }, false);
        } catch (er) {}
    } else if (document.attachEvent) {
        if ((window == window.top) && document.documentElement.doScroll) {
            var timeout, el = document.createElement("div");
            check = function() {
                try {
                    el.doScroll("left");
                } catch (er) {
                    timeout = window.setTimeout(check, 0);
                    return;
                }
                el = null;
                init();
            }
            check();
        } else {
            document.attachEvent("onreadystatechange", check = function() {
                if (document.readyState === "complete") {
                    document.detachEvent("onreadystatechange", check);
                    init();
                }
            });
        }
    }
}

function Sys$_Application$_raiseInit() {
    var handler = this.get_events().getHandler("init");
    if (handler) {
        this.beginCreateComponents();
        handler(this, Sys.EventArgs.Empty);
        this.endCreateComponents();
    }
}

function Sys$_Application$_unloadHandler(event) {
    this.dispose();
}
Sys._Application.prototype = {
    _creatingComponents: false,
    _disposing: false,
    _deleteCount: 0,
    get_isCreatingComponents: Sys$_Application$get_isCreatingComponents,
    get_isDisposing: Sys$_Application$get_isDisposing,
    add_init: Sys$_Application$add_init,
    remove_init: Sys$_Application$remove_init,
    add_load: Sys$_Application$add_load,
    remove_load: Sys$_Application$remove_load,
    add_unload: Sys$_Application$add_unload,
    remove_unload: Sys$_Application$remove_unload,
    addComponent: Sys$_Application$addComponent,
    beginCreateComponents: Sys$_Application$beginCreateComponents,
    dispose: Sys$_Application$dispose,
    disposeElement: Sys$_Application$disposeElement,
    endCreateComponents: Sys$_Application$endCreateComponents,
    findComponent: Sys$_Application$findComponent,
    getComponents: Sys$_Application$getComponents,
    initialize: Sys$_Application$initialize,
    notifyScriptLoaded: Sys$_Application$notifyScriptLoaded,
    registerDisposableObject: Sys$_Application$registerDisposableObject,
    raiseLoad: Sys$_Application$raiseLoad,
    removeComponent: Sys$_Application$removeComponent,
    unregisterDisposableObject: Sys$_Application$unregisterDisposableObject,
    _addComponentToSecondPass: Sys$_Application$_addComponentToSecondPass,
    _disposeComponents: Sys$_Application$_disposeComponents,
    _disposeElementInternal: Sys$_Application$_disposeElementInternal,
    _domReady: Sys$_Application$_domReady,
    _raiseInit: Sys$_Application$_raiseInit,
    _unloadHandler: Sys$_Application$_unloadHandler
}
Sys._Application.registerClass('Sys._Application', Sys.Component, Sys.IContainer);
Sys.Application = new Sys._Application();
var $find = Sys.Application.findComponent;

Sys.UI.Behavior = function Sys$UI$Behavior(element) {
    /// <summary locid="M:J#Sys.UI.Behavior.#ctor" />
    /// <param name="element" domElement="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }]);
    if (e) throw e;
    Sys.UI.Behavior.initializeBase(this);
    this._element = element;
    var behaviors = element._behaviors;
    if (!behaviors) {
        element._behaviors = [this];
    } else {
        behaviors[behaviors.length] = this;
    }
}

function Sys$UI$Behavior$get_element() {
    /// <value domElement="true" locid="P:J#Sys.UI.Behavior.element"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._element;
}

function Sys$UI$Behavior$get_id() {
    /// <value type="String" locid="P:J#Sys.UI.Behavior.id"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    var baseId = Sys.UI.Behavior.callBaseMethod(this, 'get_id');
    if (baseId) return baseId;
    if (!this._element || !this._element.id) return '';
    return this._element.id + '$' + this.get_name();
}

function Sys$UI$Behavior$get_name() {
    /// <value type="String" locid="P:J#Sys.UI.Behavior.name"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this._name) return this._name;
    var name = Object.getTypeName(this);
    var i = name.lastIndexOf('.');
    if (i !== -1) name = name.substr(i + 1);
    if (!this.get_isInitialized()) this._name = name;
    return name;
}

function Sys$UI$Behavior$set_name(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    if ((value === '') || (value.charAt(0) === ' ') || (value.charAt(value.length - 1) === ' '))
        throw Error.argument('value', Sys.Res.invalidId);
    if (typeof(this._element[value]) !== 'undefined')
        throw Error.invalidOperation(String.format(Sys.Res.behaviorDuplicateName, value));
    if (this.get_isInitialized()) throw Error.invalidOperation(Sys.Res.cantSetNameAfterInit);
    this._name = value;
}

function Sys$UI$Behavior$initialize() {
    Sys.UI.Behavior.callBaseMethod(this, 'initialize');
    var name = this.get_name();
    if (name) this._element[name] = this;
}

function Sys$UI$Behavior$dispose() {
    Sys.UI.Behavior.callBaseMethod(this, 'dispose');
    var e = this._element;
    if (e) {
        var name = this.get_name();
        if (name) {
            e[name] = null;
        }
        var behaviors = e._behaviors;
        Array.remove(behaviors, this);
        if (behaviors.length === 0) {
            e._behaviors = null;
        }
        delete this._element;
    }
}
Sys.UI.Behavior.prototype = {
    _name: null,
    get_element: Sys$UI$Behavior$get_element,
    get_id: Sys$UI$Behavior$get_id,
    get_name: Sys$UI$Behavior$get_name,
    set_name: Sys$UI$Behavior$set_name,
    initialize: Sys$UI$Behavior$initialize,
    dispose: Sys$UI$Behavior$dispose
}
Sys.UI.Behavior.registerClass('Sys.UI.Behavior', Sys.Component);
Sys.UI.Behavior.getBehaviorByName = function Sys$UI$Behavior$getBehaviorByName(element, name) {
    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviorByName" />
    /// <param name="element" domElement="true"></param>
    /// <param name="name" type="String"></param>
    /// <returns type="Sys.UI.Behavior" mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "name",
        type: String
    }]);
    if (e) throw e;
    var b = element[name];
    return (b && Sys.UI.Behavior.isInstanceOfType(b)) ? b : null;
}
Sys.UI.Behavior.getBehaviors = function Sys$UI$Behavior$getBehaviors(element) {
    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviors" />
    /// <param name="element" domElement="true"></param>
    /// <returns type="Array" elementType="Sys.UI.Behavior"></returns>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }]);
    if (e) throw e;
    if (!element._behaviors) return [];
    return Array.clone(element._behaviors);
}
Sys.UI.Behavior.getBehaviorsByType = function Sys$UI$Behavior$getBehaviorsByType(element, type) {
    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviorsByType" />
    /// <param name="element" domElement="true"></param>
    /// <param name="type" type="Type"></param>
    /// <returns type="Array" elementType="Sys.UI.Behavior"></returns>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }, {
        name: "type",
        type: Type
    }]);
    if (e) throw e;
    var behaviors = element._behaviors;
    var results = [];
    if (behaviors) {
        for (var i = 0, l = behaviors.length; i < l; i++) {
            if (type.isInstanceOfType(behaviors[i])) {
                results[results.length] = behaviors[i];
            }
        }
    }
    return results;
}

Sys.UI.VisibilityMode = function Sys$UI$VisibilityMode() {
    /// <summary locid="M:J#Sys.UI.VisibilityMode.#ctor" />
    /// <field name="hide" type="Number" integer="true" static="true" locid="F:J#Sys.UI.VisibilityMode.hide"></field>
    /// <field name="collapse" type="Number" integer="true" static="true" locid="F:J#Sys.UI.VisibilityMode.collapse"></field>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}
Sys.UI.VisibilityMode.prototype = {
    hide: 0,
    collapse: 1
}
Sys.UI.VisibilityMode.registerEnum("Sys.UI.VisibilityMode");

Sys.UI.Control = function Sys$UI$Control(element) {
    /// <summary locid="M:J#Sys.UI.Control.#ctor" />
    /// <param name="element" domElement="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "element",
        domElement: true
    }]);
    if (e) throw e;
    if (typeof(element.control) !== 'undefined') throw Error.invalidOperation(Sys.Res.controlAlreadyDefined);
    Sys.UI.Control.initializeBase(this);
    this._element = element;
    element.control = this;
    var role = this.get_role();
    if (role) {
        element.setAttribute("role", role);
    }
}

function Sys$UI$Control$get_element() {
    /// <value domElement="true" locid="P:J#Sys.UI.Control.element"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._element;
}

function Sys$UI$Control$get_id() {
    /// <value type="String" locid="P:J#Sys.UI.Control.id"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._element) return '';
    return this._element.id;
}

function Sys$UI$Control$set_id(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    throw Error.invalidOperation(Sys.Res.cantSetId);
}

function Sys$UI$Control$get_parent() {
    /// <value type="Sys.UI.Control" locid="P:J#Sys.UI.Control.parent"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this._parent) return this._parent;
    if (!this._element) return null;

    var parentElement = this._element.parentNode;
    while (parentElement) {
        if (parentElement.control) {
            return parentElement.control;
        }
        parentElement = parentElement.parentNode;
    }
    return null;
}

function Sys$UI$Control$set_parent(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Sys.UI.Control
    }]);
    if (e) throw e;
    if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
    var parents = [this];
    var current = value;
    while (current) {
        if (Array.contains(parents, current)) throw Error.invalidOperation(Sys.Res.circularParentChain);
        parents[parents.length] = current;
        current = current.get_parent();
    }
    this._parent = value;
}

function Sys$UI$Control$get_role() {
    /// <value type="String" locid="P:J#Sys.UI.Control.role"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return null;
}

function Sys$UI$Control$get_visibilityMode() {
    /// <value type="Sys.UI.VisibilityMode" locid="P:J#Sys.UI.Control.visibilityMode"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
    return Sys.UI.DomElement.getVisibilityMode(this._element);
}

function Sys$UI$Control$set_visibilityMode(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Sys.UI.VisibilityMode
    }]);
    if (e) throw e;
    if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
    Sys.UI.DomElement.setVisibilityMode(this._element, value);
}

function Sys$UI$Control$get_visible() {
    /// <value type="Boolean" locid="P:J#Sys.UI.Control.visible"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
    return Sys.UI.DomElement.getVisible(this._element);
}

function Sys$UI$Control$set_visible(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Boolean
    }]);
    if (e) throw e;
    if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
    Sys.UI.DomElement.setVisible(this._element, value)
}

function Sys$UI$Control$addCssClass(className) {
    /// <summary locid="M:J#Sys.UI.Control.addCssClass" />
    /// <param name="className" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "className",
        type: String
    }]);
    if (e) throw e;
    if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
    Sys.UI.DomElement.addCssClass(this._element, className);
}

function Sys$UI$Control$dispose() {
    Sys.UI.Control.callBaseMethod(this, 'dispose');
    if (this._element) {
        this._element.control = null;
        delete this._element;
    }
    if (this._parent) delete this._parent;
}

function Sys$UI$Control$onBubbleEvent(source, args) {
    /// <summary locid="M:J#Sys.UI.Control.onBubbleEvent" />
    /// <param name="source"></param>
    /// <param name="args" type="Sys.EventArgs"></param>
    /// <returns type="Boolean"></returns>
    var e = Function._validateParams(arguments, [{
        name: "source"
    }, {
        name: "args",
        type: Sys.EventArgs
    }]);
    if (e) throw e;
    return false;
}

function Sys$UI$Control$raiseBubbleEvent(source, args) {
    /// <summary locid="M:J#Sys.UI.Control.raiseBubbleEvent" />
    /// <param name="source"></param>
    /// <param name="args" type="Sys.EventArgs"></param>
    var e = Function._validateParams(arguments, [{
        name: "source"
    }, {
        name: "args",
        type: Sys.EventArgs
    }]);
    if (e) throw e;
    this._raiseBubbleEvent(source, args);
}

function Sys$UI$Control$_raiseBubbleEvent(source, args) {
    var currentTarget = this.get_parent();
    while (currentTarget) {
        if (currentTarget.onBubbleEvent(source, args)) {
            return;
        }
        currentTarget = currentTarget.get_parent();
    }
}

function Sys$UI$Control$removeCssClass(className) {
    /// <summary locid="M:J#Sys.UI.Control.removeCssClass" />
    /// <param name="className" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "className",
        type: String
    }]);
    if (e) throw e;
    if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
    Sys.UI.DomElement.removeCssClass(this._element, className);
}

function Sys$UI$Control$toggleCssClass(className) {
    /// <summary locid="M:J#Sys.UI.Control.toggleCssClass" />
    /// <param name="className" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "className",
        type: String
    }]);
    if (e) throw e;
    if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
    Sys.UI.DomElement.toggleCssClass(this._element, className);
}
Sys.UI.Control.prototype = {
    _parent: null,
    _visibilityMode: Sys.UI.VisibilityMode.hide,
    get_element: Sys$UI$Control$get_element,
    get_id: Sys$UI$Control$get_id,
    set_id: Sys$UI$Control$set_id,
    get_parent: Sys$UI$Control$get_parent,
    set_parent: Sys$UI$Control$set_parent,
    get_role: Sys$UI$Control$get_role,
    get_visibilityMode: Sys$UI$Control$get_visibilityMode,
    set_visibilityMode: Sys$UI$Control$set_visibilityMode,
    get_visible: Sys$UI$Control$get_visible,
    set_visible: Sys$UI$Control$set_visible,
    addCssClass: Sys$UI$Control$addCssClass,
    dispose: Sys$UI$Control$dispose,
    onBubbleEvent: Sys$UI$Control$onBubbleEvent,
    raiseBubbleEvent: Sys$UI$Control$raiseBubbleEvent,
    _raiseBubbleEvent: Sys$UI$Control$_raiseBubbleEvent,
    removeCssClass: Sys$UI$Control$removeCssClass,
    toggleCssClass: Sys$UI$Control$toggleCssClass
}
Sys.UI.Control.registerClass('Sys.UI.Control', Sys.Component);
Sys.HistoryEventArgs = function Sys$HistoryEventArgs(state) {
    /// <summary locid="M:J#Sys.HistoryEventArgs.#ctor" />
    /// <param name="state" type="Object"></param>
    var e = Function._validateParams(arguments, [{
        name: "state",
        type: Object
    }]);
    if (e) throw e;
    Sys.HistoryEventArgs.initializeBase(this);
    this._state = state;
}

function Sys$HistoryEventArgs$get_state() {
    /// <value type="Object" locid="P:J#Sys.HistoryEventArgs.state"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._state;
}
Sys.HistoryEventArgs.prototype = {
    get_state: Sys$HistoryEventArgs$get_state
}
Sys.HistoryEventArgs.registerClass('Sys.HistoryEventArgs', Sys.EventArgs);
Sys.Application._appLoadHandler = null;
Sys.Application._beginRequestHandler = null;
Sys.Application._clientId = null;
Sys.Application._currentEntry = '';
Sys.Application._endRequestHandler = null;
Sys.Application._history = null;
Sys.Application._enableHistory = false;
Sys.Application._historyEnabledInScriptManager = false;
Sys.Application._historyFrame = null;
Sys.Application._historyInitialized = false;
Sys.Application._historyPointIsNew = false;
Sys.Application._ignoreTimer = false;
Sys.Application._initialState = null;
Sys.Application._state = {};
Sys.Application._timerCookie = 0;
Sys.Application._timerHandler = null;
Sys.Application._uniqueId = null;
Sys._Application.prototype.get_stateString = function Sys$_Application$get_stateString() {
    /// <summary locid="M:J#Sys._Application.get_stateString" />
    if (arguments.length !== 0) throw Error.parameterCount();
    var hash = null;

    if (Sys.Browser.agent === Sys.Browser.Firefox) {
        var href = window.location.href;
        var hashIndex = href.indexOf('#');
        if (hashIndex !== -1) {
            hash = href.substring(hashIndex + 1);
        } else {
            hash = "";
        }
        return hash;
    } else {
        hash = window.location.hash;
    }

    if ((hash.length > 0) && (hash.charAt(0) === '#')) {
        hash = hash.substring(1);
    }
    return hash;
};
Sys._Application.prototype.get_enableHistory = function Sys$_Application$get_enableHistory() {
    /// <summary locid="M:J#Sys._Application.get_enableHistory" />
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._enableHistory;
};
Sys._Application.prototype.set_enableHistory = function Sys$_Application$set_enableHistory(value) {
    if (this._initialized && !this._initializing) {
        throw Error.invalidOperation(Sys.Res.historyCannotEnableHistory);
    } else if (this._historyEnabledInScriptManager && !value) {
        throw Error.invalidOperation(Sys.Res.invalidHistorySettingCombination);
    }
    this._enableHistory = value;
};
Sys._Application.prototype.add_navigate = function Sys$_Application$add_navigate(handler) {
    /// <summary locid="E:J#Sys.Application.navigate" />
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().addHandler("navigate", handler);
};
Sys._Application.prototype.remove_navigate = function Sys$_Application$remove_navigate(handler) {
    /// <summary locid="M:J#Sys._Application.remove_navigate" />
    /// <param name="handler" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this.get_events().removeHandler("navigate", handler);
};
Sys._Application.prototype.addHistoryPoint = function Sys$_Application$addHistoryPoint(state, title) {
    /// <summary locid="M:J#Sys.Application.addHistoryPoint" />
    /// <param name="state" type="Object"></param>
    /// <param name="title" type="String" optional="true" mayBeNull="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "state",
        type: Object
    }, {
        name: "title",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    if (!this._enableHistory) throw Error.invalidOperation(Sys.Res.historyCannotAddHistoryPointWithHistoryDisabled);
    for (var n in state) {
        var v = state[n];
        var t = typeof(v);
        if ((v !== null) && ((t === 'object') || (t === 'function') || (t === 'undefined'))) {
            throw Error.argument('state', Sys.Res.stateMustBeStringDictionary);
        }
    }
    this._ensureHistory();
    var initialState = this._state;
    for (var key in state) {
        var value = state[key];
        if (value === null) {
            if (typeof(initialState[key]) !== 'undefined') {
                delete initialState[key];
            }
        } else {
            initialState[key] = value;
        }
    }
    var entry = this._serializeState(initialState);
    this._historyPointIsNew = true;
    this._setState(entry, title);
    this._raiseNavigate();
};
Sys._Application.prototype.setServerId = function Sys$_Application$setServerId(clientId, uniqueId) {
    /// <summary locid="M:J#Sys.Application.setServerId" />
    /// <param name="clientId" type="String"></param>
    /// <param name="uniqueId" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "clientId",
        type: String
    }, {
        name: "uniqueId",
        type: String
    }]);
    if (e) throw e;
    this._clientId = clientId;
    this._uniqueId = uniqueId;
};
Sys._Application.prototype.setServerState = function Sys$_Application$setServerState(value) {
    /// <summary locid="M:J#Sys.Application.setServerState" />
    /// <param name="value" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    this._ensureHistory();
    this._state.__s = value;
    this._updateHiddenField(value);
};
Sys._Application.prototype._deserializeState = function Sys$_Application$_deserializeState(entry) {
    var result = {};
    entry = entry || '';
    var serverSeparator = entry.indexOf('&&');
    if ((serverSeparator !== -1) && (serverSeparator + 2 < entry.length)) {
        result.__s = entry.substr(serverSeparator + 2);
        entry = entry.substr(0, serverSeparator);
    }
    var tokens = entry.split('&');
    for (var i = 0, l = tokens.length; i < l; i++) {
        var token = tokens[i];
        var equal = token.indexOf('=');
        if ((equal !== -1) && (equal + 1 < token.length)) {
            var name = token.substr(0, equal);
            var value = token.substr(equal + 1);
            result[name] = decodeURIComponent(value);
        }
    }
    return result;
};
Sys._Application.prototype._enableHistoryInScriptManager = function Sys$_Application$_enableHistoryInScriptManager() {
    this._enableHistory = true;
    this._historyEnabledInScriptManager = true;
};
Sys._Application.prototype._ensureHistory = function Sys$_Application$_ensureHistory() {
    if (!this._historyInitialized && this._enableHistory) {
        if ((Sys.Browser.agent === Sys.Browser.InternetExplorer) && (Sys.Browser.documentMode < 8)) {
            this._historyFrame = document.getElementById('__historyFrame');
            if (!this._historyFrame) throw Error.invalidOperation(Sys.Res.historyMissingFrame);
            this._ignoreIFrame = true;
        }
        this._timerHandler = Function.createDelegate(this, this._onIdle);
        this._timerCookie = window.setTimeout(this._timerHandler, 100);

        try {
            this._initialState = this._deserializeState(this.get_stateString());
        } catch (e) {}

        this._historyInitialized = true;
    }
};
Sys._Application.prototype._navigate = function Sys$_Application$_navigate(entry) {
    this._ensureHistory();
    var state = this._deserializeState(entry);

    if (this._uniqueId) {
        var oldServerEntry = this._state.__s || '';
        var newServerEntry = state.__s || '';
        if (newServerEntry !== oldServerEntry) {
            this._updateHiddenField(newServerEntry);
            __doPostBack(this._uniqueId, newServerEntry);
            this._state = state;
            return;
        }
    }
    this._setState(entry);
    this._state = state;
    this._raiseNavigate();
};
Sys._Application.prototype._onIdle = function Sys$_Application$_onIdle() {
    delete this._timerCookie;

    var entry = this.get_stateString();
    if (entry !== this._currentEntry) {
        if (!this._ignoreTimer) {
            this._historyPointIsNew = false;
            this._navigate(entry);
        }
    } else {
        this._ignoreTimer = false;
    }
    this._timerCookie = window.setTimeout(this._timerHandler, 100);
};
Sys._Application.prototype._onIFrameLoad = function Sys$_Application$_onIFrameLoad(entry) {
    this._ensureHistory();
    if (!this._ignoreIFrame) {
        this._historyPointIsNew = false;
        this._navigate(entry);
    }
    this._ignoreIFrame = false;
};
Sys._Application.prototype._onPageRequestManagerBeginRequest = function Sys$_Application$_onPageRequestManagerBeginRequest(sender, args) {
    this._ignoreTimer = true;
};
Sys._Application.prototype._onPageRequestManagerEndRequest = function Sys$_Application$_onPageRequestManagerEndRequest(sender, args) {
    var dataItem = args.get_dataItems()[this._clientId];
    var eventTarget = document.getElementById("__EVENTTARGET");
    if (eventTarget && eventTarget.value === this._uniqueId) {
        eventTarget.value = '';
    }
    if (typeof(dataItem) !== 'undefined') {
        this.setServerState(dataItem);
        this._historyPointIsNew = true;
    } else {
        this._ignoreTimer = false;
    }
    var entry = this._serializeState(this._state);
    if (entry !== this._currentEntry) {
        this._ignoreTimer = true;
        this._setState(entry);
        this._raiseNavigate();
    }
};
Sys._Application.prototype._raiseNavigate = function Sys$_Application$_raiseNavigate() {
    var h = this.get_events().getHandler("navigate");
    var stateClone = {};
    for (var key in this._state) {
        if (key !== '__s') {
            stateClone[key] = this._state[key];
        }
    }
    var args = new Sys.HistoryEventArgs(stateClone);
    if (h) {
        h(this, args);
    }
    var err;
    try {
        if ((Sys.Browser.agent === Sys.Browser.Firefox) && window.location.hash &&
            (!window.frameElement || window.top.location.hash)) {
            window.history.go(0);
        }
    } catch (err) {}
};
Sys._Application.prototype._serializeState = function Sys$_Application$_serializeState(state) {
    var serialized = [];
    for (var key in state) {
        var value = state[key];
        if (key === '__s') {
            var serverState = value;
        } else {
            if (key.indexOf('=') !== -1) throw Error.argument('state', Sys.Res.stateFieldNameInvalid);
            serialized[serialized.length] = key + '=' + encodeURIComponent(value);
        }
    }
    return serialized.join('&') + (serverState ? '&&' + serverState : '');
};
Sys._Application.prototype._setState = function Sys$_Application$_setState(entry, title) {
    if (this._enableHistory) {
        entry = entry || '';
        if (entry !== this._currentEntry) {
            if (window.theForm) {
                var action = window.theForm.action;
                var hashIndex = action.indexOf('#');
                window.theForm.action = ((hashIndex !== -1) ? action.substring(0, hashIndex) : action) + '#' + entry;
            }

            if (this._historyFrame && this._historyPointIsNew) {
                this._ignoreIFrame = true;
                var frameDoc = this._historyFrame.contentWindow.document;
                frameDoc.open("javascript:'<html></html>'");
                frameDoc.write("<html><head><title>" + (title || document.title) +
                    "</title><scri" + "pt type=\"text/javascript\">parent.Sys.Application._onIFrameLoad(" +
                    Sys.Serialization.JavaScriptSerializer.serialize(entry) +
                    ");</scri" + "pt></head><body></body></html>");
                frameDoc.close();
            }
            this._ignoreTimer = false;
            this._currentEntry = entry;
            if (this._historyFrame || this._historyPointIsNew) {
                var currentHash = this.get_stateString();
                if (entry !== currentHash) {
                    var loc = document.location;
                    if (loc.href.length - loc.hash.length + entry.length > 1024) {
                        throw Error.invalidOperation(Sys.Res.urlMustBeLessThan1024chars);
                    }
                    window.location.hash = entry;
                    this._currentEntry = this.get_stateString();
                    if ((typeof(title) !== 'undefined') && (title !== null)) {
                        document.title = title;
                    }
                }
            }
            this._historyPointIsNew = false;
        }
    }
};
Sys._Application.prototype._updateHiddenField = function Sys$_Application$_updateHiddenField(value) {
    if (this._clientId) {
        var serverStateField = document.getElementById(this._clientId);
        if (serverStateField) {
            serverStateField.value = value;
        }
    }
};

if (!window.XMLHttpRequest) {
    window.XMLHttpRequest = function window$XMLHttpRequest() {
        var progIDs = ['Msxml2.XMLHTTP.3.0', 'Msxml2.XMLHTTP'];
        for (var i = 0, l = progIDs.length; i < l; i++) {
            try {
                return new ActiveXObject(progIDs[i]);
            } catch (ex) {}
        }
        return null;
    }
}
Type.registerNamespace('Sys.Net');

Sys.Net.WebRequestExecutor = function Sys$Net$WebRequestExecutor() {
    /// <summary locid="M:J#Sys.Net.WebRequestExecutor.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    this._webRequest = null;
    this._resultObject = null;
}

function Sys$Net$WebRequestExecutor$get_webRequest() {
    /// <value type="Sys.Net.WebRequest" locid="P:J#Sys.Net.WebRequestExecutor.webRequest"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._webRequest;
}

function Sys$Net$WebRequestExecutor$_set_webRequest(value) {
    if (this.get_started()) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallOnceStarted, 'set_webRequest'));
    }
    this._webRequest = value;
}

function Sys$Net$WebRequestExecutor$get_started() {
    /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.started"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$get_responseAvailable() {
    /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.responseAvailable"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$get_timedOut() {
    /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.timedOut"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$get_aborted() {
    /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.aborted"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$get_responseData() {
    /// <value type="String" locid="P:J#Sys.Net.WebRequestExecutor.responseData"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$get_statusCode() {
    /// <value type="Number" locid="P:J#Sys.Net.WebRequestExecutor.statusCode"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$get_statusText() {
    /// <value type="String" locid="P:J#Sys.Net.WebRequestExecutor.statusText"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$get_xml() {
    /// <value locid="P:J#Sys.Net.WebRequestExecutor.xml"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$get_object() {
    /// <value locid="P:J#Sys.Net.WebRequestExecutor.object"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._resultObject) {
        this._resultObject = Sys.Serialization.JavaScriptSerializer.deserialize(this.get_responseData());
    }
    return this._resultObject;
}

function Sys$Net$WebRequestExecutor$executeRequest() {
    /// <summary locid="M:J#Sys.Net.WebRequestExecutor.executeRequest" />
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$abort() {
    /// <summary locid="M:J#Sys.Net.WebRequestExecutor.abort" />
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$getResponseHeader(header) {
    /// <summary locid="M:J#Sys.Net.WebRequestExecutor.getResponseHeader" />
    /// <param name="header" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "header",
        type: String
    }]);
    if (e) throw e;
    throw Error.notImplemented();
}

function Sys$Net$WebRequestExecutor$getAllResponseHeaders() {
    /// <summary locid="M:J#Sys.Net.WebRequestExecutor.getAllResponseHeaders" />
    if (arguments.length !== 0) throw Error.parameterCount();
    throw Error.notImplemented();
}
Sys.Net.WebRequestExecutor.prototype = {
    get_webRequest: Sys$Net$WebRequestExecutor$get_webRequest,
    _set_webRequest: Sys$Net$WebRequestExecutor$_set_webRequest,
    get_started: Sys$Net$WebRequestExecutor$get_started,
    get_responseAvailable: Sys$Net$WebRequestExecutor$get_responseAvailable,
    get_timedOut: Sys$Net$WebRequestExecutor$get_timedOut,
    get_aborted: Sys$Net$WebRequestExecutor$get_aborted,
    get_responseData: Sys$Net$WebRequestExecutor$get_responseData,
    get_statusCode: Sys$Net$WebRequestExecutor$get_statusCode,
    get_statusText: Sys$Net$WebRequestExecutor$get_statusText,
    get_xml: Sys$Net$WebRequestExecutor$get_xml,
    get_object: Sys$Net$WebRequestExecutor$get_object,
    executeRequest: Sys$Net$WebRequestExecutor$executeRequest,
    abort: Sys$Net$WebRequestExecutor$abort,
    getResponseHeader: Sys$Net$WebRequestExecutor$getResponseHeader,
    getAllResponseHeaders: Sys$Net$WebRequestExecutor$getAllResponseHeaders
}
Sys.Net.WebRequestExecutor.registerClass('Sys.Net.WebRequestExecutor');

Sys.Net.XMLDOM = function Sys$Net$XMLDOM(markup) {
    /// <summary locid="M:J#Sys.Net.XMLDOM.#ctor" />
    /// <param name="markup" type="String"></param>
    var e = Function._validateParams(arguments, [{
        name: "markup",
        type: String
    }]);
    if (e) throw e;
    if (!window.DOMParser) {
        var progIDs = ['Msxml2.DOMDocument.3.0', 'Msxml2.DOMDocument'];
        for (var i = 0, l = progIDs.length; i < l; i++) {
            try {
                var xmlDOM = new ActiveXObject(progIDs[i]);
                xmlDOM.async = false;
                xmlDOM.loadXML(markup);
                xmlDOM.setProperty('SelectionLanguage', 'XPath');
                return xmlDOM;
            } catch (ex) {}
        }
    } else {
        try {
            var domParser = new window.DOMParser();
            return domParser.parseFromString(markup, 'text/xml');
        } catch (ex) {}
    }
    return null;
}
Sys.Net.XMLHttpExecutor = function Sys$Net$XMLHttpExecutor() {
    /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    Sys.Net.XMLHttpExecutor.initializeBase(this);
    var _this = this;
    this._xmlHttpRequest = null;
    this._webRequest = null;
    this._responseAvailable = false;
    this._timedOut = false;
    this._timer = null;
    this._aborted = false;
    this._started = false;
    this._onReadyStateChange = (function() {

        if (_this._xmlHttpRequest.readyState === 4) {
            try {
                if (typeof(_this._xmlHttpRequest.status) === "undefined") {
                    return;
                }
            } catch (ex) {
                return;
            }

            _this._clearTimer();
            _this._responseAvailable = true;
            _this._webRequest.completed(Sys.EventArgs.Empty);
            if (_this._xmlHttpRequest != null) {
                _this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
                _this._xmlHttpRequest = null;
            }
        }
    });
    this._clearTimer = (function() {
        if (_this._timer != null) {
            window.clearTimeout(_this._timer);
            _this._timer = null;
        }
    });
    this._onTimeout = (function() {
        if (!_this._responseAvailable) {
            _this._clearTimer();
            _this._timedOut = true;
            _this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
            _this._xmlHttpRequest.abort();
            _this._webRequest.completed(Sys.EventArgs.Empty);
            _this._xmlHttpRequest = null;
        }
    });
}

function Sys$Net$XMLHttpExecutor$get_timedOut() {
    /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.timedOut"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._timedOut;
}

function Sys$Net$XMLHttpExecutor$get_started() {
    /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.started"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._started;
}

function Sys$Net$XMLHttpExecutor$get_responseAvailable() {
    /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.responseAvailable"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._responseAvailable;
}

function Sys$Net$XMLHttpExecutor$get_aborted() {
    /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.aborted"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._aborted;
}

function Sys$Net$XMLHttpExecutor$executeRequest() {
    /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.executeRequest" />
    if (arguments.length !== 0) throw Error.parameterCount();
    this._webRequest = this.get_webRequest();
    if (this._started) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallOnceStarted, 'executeRequest'));
    }
    if (this._webRequest === null) {
        throw Error.invalidOperation(Sys.Res.nullWebRequest);
    }
    var body = this._webRequest.get_body();
    var headers = this._webRequest.get_headers();
    this._xmlHttpRequest = new XMLHttpRequest();
    this._xmlHttpRequest.onreadystatechange = this._onReadyStateChange;
    var verb = this._webRequest.get_httpVerb();
    this._xmlHttpRequest.open(verb, this._webRequest.getResolvedUrl(), true);
    this._xmlHttpRequest.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    if (headers) {
        for (var header in headers) {
            var val = headers[header];
            if (typeof(val) !== "function")
                this._xmlHttpRequest.setRequestHeader(header, val);
        }
    }
    if (verb.toLowerCase() === "post") {
        if ((headers === null) || !headers['Content-Type']) {
            this._xmlHttpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');
        }
        if (!body) {
            body = "";
        }
    }
    var timeout = this._webRequest.get_timeout();
    if (timeout > 0) {
        this._timer = window.setTimeout(Function.createDelegate(this, this._onTimeout), timeout);
    }
    this._xmlHttpRequest.send(body);
    this._started = true;
}

function Sys$Net$XMLHttpExecutor$getResponseHeader(header) {
    /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.getResponseHeader" />
    /// <param name="header" type="String"></param>
    /// <returns type="String"></returns>
    var e = Function._validateParams(arguments, [{
        name: "header",
        type: String
    }]);
    if (e) throw e;
    if (!this._responseAvailable) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'getResponseHeader'));
    }
    if (!this._xmlHttpRequest) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'getResponseHeader'));
    }
    var result;
    try {
        result = this._xmlHttpRequest.getResponseHeader(header);
    } catch (e) {}
    if (!result) result = "";
    return result;
}

function Sys$Net$XMLHttpExecutor$getAllResponseHeaders() {
    /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.getAllResponseHeaders" />
    /// <returns type="String"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._responseAvailable) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'getAllResponseHeaders'));
    }
    if (!this._xmlHttpRequest) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'getAllResponseHeaders'));
    }
    return this._xmlHttpRequest.getAllResponseHeaders();
}

function Sys$Net$XMLHttpExecutor$get_responseData() {
    /// <value type="String" locid="P:J#Sys.Net.XMLHttpExecutor.responseData"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._responseAvailable) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_responseData'));
    }
    if (!this._xmlHttpRequest) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_responseData'));
    }
    return this._xmlHttpRequest.responseText;
}

function Sys$Net$XMLHttpExecutor$get_statusCode() {
    /// <value type="Number" locid="P:J#Sys.Net.XMLHttpExecutor.statusCode"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._responseAvailable) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_statusCode'));
    }
    if (!this._xmlHttpRequest) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_statusCode'));
    }
    var result = 0;
    try {
        result = this._xmlHttpRequest.status;
    } catch (ex) {}
    return result;
}

function Sys$Net$XMLHttpExecutor$get_statusText() {
    /// <value type="String" locid="P:J#Sys.Net.XMLHttpExecutor.statusText"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._responseAvailable) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_statusText'));
    }
    if (!this._xmlHttpRequest) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_statusText'));
    }
    return this._xmlHttpRequest.statusText;
}

function Sys$Net$XMLHttpExecutor$get_xml() {
    /// <value locid="P:J#Sys.Net.XMLHttpExecutor.xml"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._responseAvailable) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_xml'));
    }
    if (!this._xmlHttpRequest) {
        throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_xml'));
    }
    var xml = this._xmlHttpRequest.responseXML;
    if (!xml || !xml.documentElement) {
        xml = Sys.Net.XMLDOM(this._xmlHttpRequest.responseText);
        if (!xml || !xml.documentElement)
            return null;
    } else if (navigator.userAgent.indexOf('MSIE') !== -1) {
        xml.setProperty('SelectionLanguage', 'XPath');
    }
    if (xml.documentElement.namespaceURI === "http://www.mozilla.org/newlayout/xml/parsererror.xml" &&
        xml.documentElement.tagName === "parsererror") {
        return null;
    }

    if (xml.documentElement.firstChild && xml.documentElement.firstChild.tagName === "parsererror") {
        return null;
    }

    return xml;
}

function Sys$Net$XMLHttpExecutor$abort() {
    /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.abort" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (!this._started) {
        throw Error.invalidOperation(Sys.Res.cannotAbortBeforeStart);
    }
    if (this._aborted || this._responseAvailable || this._timedOut)
        return;
    this._aborted = true;
    this._clearTimer();
    if (this._xmlHttpRequest && !this._responseAvailable) {
        this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
        this._xmlHttpRequest.abort();

        this._xmlHttpRequest = null;
        this._webRequest.completed(Sys.EventArgs.Empty);
    }
}
Sys.Net.XMLHttpExecutor.prototype = {
    get_timedOut: Sys$Net$XMLHttpExecutor$get_timedOut,
    get_started: Sys$Net$XMLHttpExecutor$get_started,
    get_responseAvailable: Sys$Net$XMLHttpExecutor$get_responseAvailable,
    get_aborted: Sys$Net$XMLHttpExecutor$get_aborted,
    executeRequest: Sys$Net$XMLHttpExecutor$executeRequest,
    getResponseHeader: Sys$Net$XMLHttpExecutor$getResponseHeader,
    getAllResponseHeaders: Sys$Net$XMLHttpExecutor$getAllResponseHeaders,
    get_responseData: Sys$Net$XMLHttpExecutor$get_responseData,
    get_statusCode: Sys$Net$XMLHttpExecutor$get_statusCode,
    get_statusText: Sys$Net$XMLHttpExecutor$get_statusText,
    get_xml: Sys$Net$XMLHttpExecutor$get_xml,
    abort: Sys$Net$XMLHttpExecutor$abort
}
Sys.Net.XMLHttpExecutor.registerClass('Sys.Net.XMLHttpExecutor', Sys.Net.WebRequestExecutor);

Sys.Net._WebRequestManager = function Sys$Net$_WebRequestManager() {
    /// <summary locid="P:J#Sys.Net.WebRequestManager.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    this._defaultTimeout = 0;
    this._defaultExecutorType = "Sys.Net.XMLHttpExecutor";
}

function Sys$Net$_WebRequestManager$add_invokingRequest(handler) {
    /// <summary locid="E:J#Sys.Net.WebRequestManager.invokingRequest" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this._get_eventHandlerList().addHandler("invokingRequest", handler);
}

function Sys$Net$_WebRequestManager$remove_invokingRequest(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this._get_eventHandlerList().removeHandler("invokingRequest", handler);
}

function Sys$Net$_WebRequestManager$add_completedRequest(handler) {
    /// <summary locid="E:J#Sys.Net.WebRequestManager.completedRequest" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this._get_eventHandlerList().addHandler("completedRequest", handler);
}

function Sys$Net$_WebRequestManager$remove_completedRequest(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this._get_eventHandlerList().removeHandler("completedRequest", handler);
}

function Sys$Net$_WebRequestManager$_get_eventHandlerList() {
    if (!this._events) {
        this._events = new Sys.EventHandlerList();
    }
    return this._events;
}

function Sys$Net$_WebRequestManager$get_defaultTimeout() {
    /// <value type="Number" locid="P:J#Sys.Net.WebRequestManager.defaultTimeout"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._defaultTimeout;
}

function Sys$Net$_WebRequestManager$set_defaultTimeout(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Number
    }]);
    if (e) throw e;
    if (value < 0) {
        throw Error.argumentOutOfRange("value", value, Sys.Res.invalidTimeout);
    }
    this._defaultTimeout = value;
}

function Sys$Net$_WebRequestManager$get_defaultExecutorType() {
    /// <value type="String" locid="P:J#Sys.Net.WebRequestManager.defaultExecutorType"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._defaultExecutorType;
}

function Sys$Net$_WebRequestManager$set_defaultExecutorType(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    this._defaultExecutorType = value;
}

function Sys$Net$_WebRequestManager$executeRequest(webRequest) {
    /// <summary locid="M:J#Sys.Net.WebRequestManager.executeRequest" />
    /// <param name="webRequest" type="Sys.Net.WebRequest"></param>
    var e = Function._validateParams(arguments, [{
        name: "webRequest",
        type: Sys.Net.WebRequest
    }]);
    if (e) throw e;
    var executor = webRequest.get_executor();
    if (!executor) {
        var failed = false;
        try {
            var executorType = eval(this._defaultExecutorType);
            executor = new executorType();
        } catch (e) {
            failed = true;
        }
        if (failed || !Sys.Net.WebRequestExecutor.isInstanceOfType(executor) || !executor) {
            throw Error.argument("defaultExecutorType", String.format(Sys.Res.invalidExecutorType, this._defaultExecutorType));
        }
        webRequest.set_executor(executor);
    }
    if (executor.get_aborted()) {
        return;
    }
    var evArgs = new Sys.Net.NetworkRequestEventArgs(webRequest);
    var handler = this._get_eventHandlerList().getHandler("invokingRequest");
    if (handler) {
        handler(this, evArgs);
    }
    if (!evArgs.get_cancel()) {
        executor.executeRequest();
    }
}
Sys.Net._WebRequestManager.prototype = {
    add_invokingRequest: Sys$Net$_WebRequestManager$add_invokingRequest,
    remove_invokingRequest: Sys$Net$_WebRequestManager$remove_invokingRequest,
    add_completedRequest: Sys$Net$_WebRequestManager$add_completedRequest,
    remove_completedRequest: Sys$Net$_WebRequestManager$remove_completedRequest,
    _get_eventHandlerList: Sys$Net$_WebRequestManager$_get_eventHandlerList,
    get_defaultTimeout: Sys$Net$_WebRequestManager$get_defaultTimeout,
    set_defaultTimeout: Sys$Net$_WebRequestManager$set_defaultTimeout,
    get_defaultExecutorType: Sys$Net$_WebRequestManager$get_defaultExecutorType,
    set_defaultExecutorType: Sys$Net$_WebRequestManager$set_defaultExecutorType,
    executeRequest: Sys$Net$_WebRequestManager$executeRequest
}
Sys.Net._WebRequestManager.registerClass('Sys.Net._WebRequestManager');
Sys.Net.WebRequestManager = new Sys.Net._WebRequestManager();

Sys.Net.NetworkRequestEventArgs = function Sys$Net$NetworkRequestEventArgs(webRequest) {
    /// <summary locid="M:J#Sys.Net.NetworkRequestEventArgs.#ctor" />
    /// <param name="webRequest" type="Sys.Net.WebRequest"></param>
    var e = Function._validateParams(arguments, [{
        name: "webRequest",
        type: Sys.Net.WebRequest
    }]);
    if (e) throw e;
    Sys.Net.NetworkRequestEventArgs.initializeBase(this);
    this._webRequest = webRequest;
}

function Sys$Net$NetworkRequestEventArgs$get_webRequest() {
    /// <value type="Sys.Net.WebRequest" locid="P:J#Sys.Net.NetworkRequestEventArgs.webRequest"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._webRequest;
}
Sys.Net.NetworkRequestEventArgs.prototype = {
    get_webRequest: Sys$Net$NetworkRequestEventArgs$get_webRequest
}
Sys.Net.NetworkRequestEventArgs.registerClass('Sys.Net.NetworkRequestEventArgs', Sys.CancelEventArgs);

Sys.Net.WebRequest = function Sys$Net$WebRequest() {
    /// <summary locid="M:J#Sys.Net.WebRequest.#ctor" />
    if (arguments.length !== 0) throw Error.parameterCount();
    this._url = "";
    this._headers = {};
    this._body = null;
    this._userContext = null;
    this._httpVerb = null;
    this._executor = null;
    this._invokeCalled = false;
    this._timeout = 0;
}

function Sys$Net$WebRequest$add_completed(handler) {
    /// <summary locid="E:J#Sys.Net.WebRequest.completed" />
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this._get_eventHandlerList().addHandler("completed", handler);
}

function Sys$Net$WebRequest$remove_completed(handler) {
    var e = Function._validateParams(arguments, [{
        name: "handler",
        type: Function
    }]);
    if (e) throw e;
    this._get_eventHandlerList().removeHandler("completed", handler);
}

function Sys$Net$WebRequest$completed(eventArgs) {
    /// <summary locid="M:J#Sys.Net.WebRequest.completed" />
    /// <param name="eventArgs" type="Sys.EventArgs"></param>
    var e = Function._validateParams(arguments, [{
        name: "eventArgs",
        type: Sys.EventArgs
    }]);
    if (e) throw e;
    var handler = Sys.Net.WebRequestManager._get_eventHandlerList().getHandler("completedRequest");
    if (handler) {
        handler(this._executor, eventArgs);
    }
    handler = this._get_eventHandlerList().getHandler("completed");
    if (handler) {
        handler(this._executor, eventArgs);
    }
}

function Sys$Net$WebRequest$_get_eventHandlerList() {
    if (!this._events) {
        this._events = new Sys.EventHandlerList();
    }
    return this._events;
}

function Sys$Net$WebRequest$get_url() {
    /// <value type="String" locid="P:J#Sys.Net.WebRequest.url"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._url;
}

function Sys$Net$WebRequest$set_url(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    this._url = value;
}

function Sys$Net$WebRequest$get_headers() {
    /// <value locid="P:J#Sys.Net.WebRequest.headers"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._headers;
}

function Sys$Net$WebRequest$get_httpVerb() {
    /// <value type="String" locid="P:J#Sys.Net.WebRequest.httpVerb"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this._httpVerb === null) {
        if (this._body === null) {
            return "GET";
        }
        return "POST";
    }
    return this._httpVerb;
}

function Sys$Net$WebRequest$set_httpVerb(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    if (value.length === 0) {
        throw Error.argument('value', Sys.Res.invalidHttpVerb);
    }
    this._httpVerb = value;
}

function Sys$Net$WebRequest$get_body() {
    /// <value mayBeNull="true" locid="P:J#Sys.Net.WebRequest.body"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._body;
}

function Sys$Net$WebRequest$set_body(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        mayBeNull: true
    }]);
    if (e) throw e;
    this._body = value;
}

function Sys$Net$WebRequest$get_userContext() {
    /// <value mayBeNull="true" locid="P:J#Sys.Net.WebRequest.userContext"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._userContext;
}

function Sys$Net$WebRequest$set_userContext(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        mayBeNull: true
    }]);
    if (e) throw e;
    this._userContext = value;
}

function Sys$Net$WebRequest$get_executor() {
    /// <value type="Sys.Net.WebRequestExecutor" locid="P:J#Sys.Net.WebRequest.executor"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._executor;
}

function Sys$Net$WebRequest$set_executor(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Sys.Net.WebRequestExecutor
    }]);
    if (e) throw e;
    if (this._executor !== null && this._executor.get_started()) {
        throw Error.invalidOperation(Sys.Res.setExecutorAfterActive);
    }
    this._executor = value;
    this._executor._set_webRequest(this);
}

function Sys$Net$WebRequest$get_timeout() {
    /// <value type="Number" locid="P:J#Sys.Net.WebRequest.timeout"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this._timeout === 0) {
        return Sys.Net.WebRequestManager.get_defaultTimeout();
    }
    return this._timeout;
}

function Sys$Net$WebRequest$set_timeout(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Number
    }]);
    if (e) throw e;
    if (value < 0) {
        throw Error.argumentOutOfRange("value", value, Sys.Res.invalidTimeout);
    }
    this._timeout = value;
}

function Sys$Net$WebRequest$getResolvedUrl() {
    /// <summary locid="M:J#Sys.Net.WebRequest.getResolvedUrl" />
    /// <returns type="String"></returns>
    if (arguments.length !== 0) throw Error.parameterCount();
    return Sys.Net.WebRequest._resolveUrl(this._url);
}

function Sys$Net$WebRequest$invoke() {
    /// <summary locid="M:J#Sys.Net.WebRequest.invoke" />
    if (arguments.length !== 0) throw Error.parameterCount();
    if (this._invokeCalled) {
        throw Error.invalidOperation(Sys.Res.invokeCalledTwice);
    }
    Sys.Net.WebRequestManager.executeRequest(this);
    this._invokeCalled = true;
}
Sys.Net.WebRequest.prototype = {
    add_completed: Sys$Net$WebRequest$add_completed,
    remove_completed: Sys$Net$WebRequest$remove_completed,
    completed: Sys$Net$WebRequest$completed,
    _get_eventHandlerList: Sys$Net$WebRequest$_get_eventHandlerList,
    get_url: Sys$Net$WebRequest$get_url,
    set_url: Sys$Net$WebRequest$set_url,
    get_headers: Sys$Net$WebRequest$get_headers,
    get_httpVerb: Sys$Net$WebRequest$get_httpVerb,
    set_httpVerb: Sys$Net$WebRequest$set_httpVerb,
    get_body: Sys$Net$WebRequest$get_body,
    set_body: Sys$Net$WebRequest$set_body,
    get_userContext: Sys$Net$WebRequest$get_userContext,
    set_userContext: Sys$Net$WebRequest$set_userContext,
    get_executor: Sys$Net$WebRequest$get_executor,
    set_executor: Sys$Net$WebRequest$set_executor,
    get_timeout: Sys$Net$WebRequest$get_timeout,
    set_timeout: Sys$Net$WebRequest$set_timeout,
    getResolvedUrl: Sys$Net$WebRequest$getResolvedUrl,
    invoke: Sys$Net$WebRequest$invoke
}
Sys.Net.WebRequest._resolveUrl = function Sys$Net$WebRequest$_resolveUrl(url, baseUrl) {
    if (url && url.indexOf('://') !== -1) {
        return url;
    }
    if (!baseUrl || baseUrl.length === 0) {
        var baseElement = document.getElementsByTagName('base')[0];
        if (baseElement && baseElement.href && baseElement.href.length > 0) {
            baseUrl = baseElement.href;
        } else {
            baseUrl = document.URL;
        }
    }
    var qsStart = baseUrl.indexOf('?');
    if (qsStart !== -1) {
        baseUrl = baseUrl.substr(0, qsStart);
    }
    qsStart = baseUrl.indexOf('#');
    if (qsStart !== -1) {
        baseUrl = baseUrl.substr(0, qsStart);
    }
    baseUrl = baseUrl.substr(0, baseUrl.lastIndexOf('/') + 1);
    if (!url || url.length === 0) {
        return baseUrl;
    }
    if (url.charAt(0) === '/') {
        var slashslash = baseUrl.indexOf('://');
        if (slashslash === -1) {
            throw Error.argument("baseUrl", Sys.Res.badBaseUrl1);
        }
        var nextSlash = baseUrl.indexOf('/', slashslash + 3);
        if (nextSlash === -1) {
            throw Error.argument("baseUrl", Sys.Res.badBaseUrl2);
        }
        return baseUrl.substr(0, nextSlash) + url;
    } else {
        var lastSlash = baseUrl.lastIndexOf('/');
        if (lastSlash === -1) {
            throw Error.argument("baseUrl", Sys.Res.badBaseUrl3);
        }
        return baseUrl.substr(0, lastSlash + 1) + url;
    }
}
Sys.Net.WebRequest._createQueryString = function Sys$Net$WebRequest$_createQueryString(queryString, encodeMethod, addParams) {
    encodeMethod = encodeMethod || encodeURIComponent;
    var i = 0,
        obj, val, arg, sb = new Sys.StringBuilder();
    if (queryString) {
        for (arg in queryString) {
            obj = queryString[arg];
            if (typeof(obj) === "function") continue;
            val = Sys.Serialization.JavaScriptSerializer.serialize(obj);
            if (i++) {
                sb.append('&');
            }
            sb.append(arg);
            sb.append('=');
            sb.append(encodeMethod(val));
        }
    }
    if (addParams) {
        if (i) {
            sb.append('&');
        }
        sb.append(addParams);
    }
    return sb.toString();
}
Sys.Net.WebRequest._createUrl = function Sys$Net$WebRequest$_createUrl(url, queryString, addParams) {
    if (!queryString && !addParams) {
        return url;
    }
    var qs = Sys.Net.WebRequest._createQueryString(queryString, null, addParams);
    return qs.length ? url + ((url && url.indexOf('?') >= 0) ? "&" : "?") + qs : url;
}
Sys.Net.WebRequest.registerClass('Sys.Net.WebRequest');

Sys._ScriptLoaderTask = function Sys$_ScriptLoaderTask(scriptElement, completedCallback) {
    /// <summary locid="M:J#Sys._ScriptLoaderTask.#ctor" />
    /// <param name="scriptElement" domElement="true"></param>
    /// <param name="completedCallback" type="Function"></param>
    var e = Function._validateParams(arguments, [{
        name: "scriptElement",
        domElement: true
    }, {
        name: "completedCallback",
        type: Function
    }]);
    if (e) throw e;
    this._scriptElement = scriptElement;
    this._completedCallback = completedCallback;
}

function Sys$_ScriptLoaderTask$get_scriptElement() {
    /// <value domElement="true" locid="P:J#Sys._ScriptLoaderTask.scriptElement"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._scriptElement;
}

function Sys$_ScriptLoaderTask$dispose() {
    if (this._disposed) {
        return;
    }
    this._disposed = true;
    this._removeScriptElementHandlers();
    Sys._ScriptLoaderTask._clearScript(this._scriptElement);
    this._scriptElement = null;
}

function Sys$_ScriptLoaderTask$execute() {
    /// <summary locid="M:J#Sys._ScriptLoaderTask.execute" />
    if (arguments.length !== 0) throw Error.parameterCount();
    this._addScriptElementHandlers();
    var headElements = document.getElementsByTagName('head');
    if (headElements.length === 0) {
        throw new Error.invalidOperation(Sys.Res.scriptLoadFailedNoHead);
    } else {
        headElements[0].appendChild(this._scriptElement);
    }
}

function Sys$_ScriptLoaderTask$_addScriptElementHandlers() {
    this._scriptLoadDelegate = Function.createDelegate(this, this._scriptLoadHandler);

    if (Sys.Browser.agent !== Sys.Browser.InternetExplorer) {
        this._scriptElement.readyState = 'loaded';
        $addHandler(this._scriptElement, 'load', this._scriptLoadDelegate);
    } else {
        $addHandler(this._scriptElement, 'readystatechange', this._scriptLoadDelegate);
    }
    if (this._scriptElement.addEventListener) {
        this._scriptErrorDelegate = Function.createDelegate(this, this._scriptErrorHandler);
        this._scriptElement.addEventListener('error', this._scriptErrorDelegate, false);
    }
}

function Sys$_ScriptLoaderTask$_removeScriptElementHandlers() {
    if (this._scriptLoadDelegate) {
        var scriptElement = this.get_scriptElement();
        if (Sys.Browser.agent !== Sys.Browser.InternetExplorer) {
            $removeHandler(scriptElement, 'load', this._scriptLoadDelegate);
        } else {
            $removeHandler(scriptElement, 'readystatechange', this._scriptLoadDelegate);
        }
        if (this._scriptErrorDelegate) {
            this._scriptElement.removeEventListener('error', this._scriptErrorDelegate, false);
            this._scriptErrorDelegate = null;
        }
        this._scriptLoadDelegate = null;
    }
}

function Sys$_ScriptLoaderTask$_scriptErrorHandler() {
    if (this._disposed) {
        return;
    }

    this._completedCallback(this.get_scriptElement(), false);
}

function Sys$_ScriptLoaderTask$_scriptLoadHandler() {
    if (this._disposed) {
        return;
    }
    var scriptElement = this.get_scriptElement();
    if ((scriptElement.readyState !== 'loaded') &&
        (scriptElement.readyState !== 'complete')) {
        return;
    }

    this._completedCallback(scriptElement, true);
}
Sys._ScriptLoaderTask.prototype = {
    get_scriptElement: Sys$_ScriptLoaderTask$get_scriptElement,
    dispose: Sys$_ScriptLoaderTask$dispose,
    execute: Sys$_ScriptLoaderTask$execute,
    _addScriptElementHandlers: Sys$_ScriptLoaderTask$_addScriptElementHandlers,
    _removeScriptElementHandlers: Sys$_ScriptLoaderTask$_removeScriptElementHandlers,
    _scriptErrorHandler: Sys$_ScriptLoaderTask$_scriptErrorHandler,
    _scriptLoadHandler: Sys$_ScriptLoaderTask$_scriptLoadHandler
}
Sys._ScriptLoaderTask.registerClass("Sys._ScriptLoaderTask", null, Sys.IDisposable);
Sys._ScriptLoaderTask._clearScript = function Sys$_ScriptLoaderTask$_clearScript(scriptElement) {
    if (!Sys.Debug.isDebug) {
        scriptElement.parentNode.removeChild(scriptElement);
    }
}
Type.registerNamespace('Sys.Net');

Sys.Net.WebServiceProxy = function Sys$Net$WebServiceProxy() {}

function Sys$Net$WebServiceProxy$get_timeout() {
    /// <value type="Number" locid="P:J#Sys.Net.WebServiceProxy.timeout"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._timeout || 0;
}

function Sys$Net$WebServiceProxy$set_timeout(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Number
    }]);
    if (e) throw e;
    if (value < 0) {
        throw Error.argumentOutOfRange('value', value, Sys.Res.invalidTimeout);
    }
    this._timeout = value;
}

function Sys$Net$WebServiceProxy$get_defaultUserContext() {
    /// <value mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultUserContext"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return (typeof(this._userContext) === "undefined") ? null : this._userContext;
}

function Sys$Net$WebServiceProxy$set_defaultUserContext(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        mayBeNull: true
    }]);
    if (e) throw e;
    this._userContext = value;
}

function Sys$Net$WebServiceProxy$get_defaultSucceededCallback() {
    /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultSucceededCallback"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._succeeded || null;
}

function Sys$Net$WebServiceProxy$set_defaultSucceededCallback(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Function,
        mayBeNull: true
    }]);
    if (e) throw e;
    this._succeeded = value;
}

function Sys$Net$WebServiceProxy$get_defaultFailedCallback() {
    /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultFailedCallback"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._failed || null;
}

function Sys$Net$WebServiceProxy$set_defaultFailedCallback(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Function,
        mayBeNull: true
    }]);
    if (e) throw e;
    this._failed = value;
}

function Sys$Net$WebServiceProxy$get_enableJsonp() {
    /// <value type="Boolean" locid="P:J#Sys.Net.WebServiceProxy.enableJsonp"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return !!this._jsonp;
}

function Sys$Net$WebServiceProxy$set_enableJsonp(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: Boolean
    }]);
    if (e) throw e;
    this._jsonp = value;
}

function Sys$Net$WebServiceProxy$get_path() {
    /// <value type="String" locid="P:J#Sys.Net.WebServiceProxy.path"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._path || null;
}

function Sys$Net$WebServiceProxy$set_path(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    this._path = value;
}

function Sys$Net$WebServiceProxy$get_jsonpCallbackParameter() {
    /// <value type="String" locid="P:J#Sys.Net.WebServiceProxy.jsonpCallbackParameter"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._callbackParameter || "callback";
}

function Sys$Net$WebServiceProxy$set_jsonpCallbackParameter(value) {
    var e = Function._validateParams(arguments, [{
        name: "value",
        type: String
    }]);
    if (e) throw e;
    this._callbackParameter = value;
}

function Sys$Net$WebServiceProxy$_invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext) {
    /// <summary locid="M:J#Sys.Net.WebServiceProxy._invoke" />
    /// <param name="servicePath" type="String"></param>
    /// <param name="methodName" type="String"></param>
    /// <param name="useGet" type="Boolean"></param>
    /// <param name="params"></param>
    /// <param name="onSuccess" type="Function" mayBeNull="true" optional="true"></param>
    /// <param name="onFailure" type="Function" mayBeNull="true" optional="true"></param>
    /// <param name="userContext" mayBeNull="true" optional="true"></param>
    /// <returns type="Sys.Net.WebRequest" mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "servicePath",
        type: String
    }, {
        name: "methodName",
        type: String
    }, {
        name: "useGet",
        type: Boolean
    }, {
        name: "params"
    }, {
        name: "onSuccess",
        type: Function,
        mayBeNull: true,
        optional: true
    }, {
        name: "onFailure",
        type: Function,
        mayBeNull: true,
        optional: true
    }, {
        name: "userContext",
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    onSuccess = onSuccess || this.get_defaultSucceededCallback();
    onFailure = onFailure || this.get_defaultFailedCallback();
    if (userContext === null || typeof userContext === 'undefined') userContext = this.get_defaultUserContext();
    return Sys.Net.WebServiceProxy.invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext, this.get_timeout(), this.get_enableJsonp(), this.get_jsonpCallbackParameter());
}
Sys.Net.WebServiceProxy.prototype = {
    get_timeout: Sys$Net$WebServiceProxy$get_timeout,
    set_timeout: Sys$Net$WebServiceProxy$set_timeout,
    get_defaultUserContext: Sys$Net$WebServiceProxy$get_defaultUserContext,
    set_defaultUserContext: Sys$Net$WebServiceProxy$set_defaultUserContext,
    get_defaultSucceededCallback: Sys$Net$WebServiceProxy$get_defaultSucceededCallback,
    set_defaultSucceededCallback: Sys$Net$WebServiceProxy$set_defaultSucceededCallback,
    get_defaultFailedCallback: Sys$Net$WebServiceProxy$get_defaultFailedCallback,
    set_defaultFailedCallback: Sys$Net$WebServiceProxy$set_defaultFailedCallback,
    get_enableJsonp: Sys$Net$WebServiceProxy$get_enableJsonp,
    set_enableJsonp: Sys$Net$WebServiceProxy$set_enableJsonp,
    get_path: Sys$Net$WebServiceProxy$get_path,
    set_path: Sys$Net$WebServiceProxy$set_path,
    get_jsonpCallbackParameter: Sys$Net$WebServiceProxy$get_jsonpCallbackParameter,
    set_jsonpCallbackParameter: Sys$Net$WebServiceProxy$set_jsonpCallbackParameter,
    _invoke: Sys$Net$WebServiceProxy$_invoke
}
Sys.Net.WebServiceProxy.registerClass('Sys.Net.WebServiceProxy');
Sys.Net.WebServiceProxy.invoke = function Sys$Net$WebServiceProxy$invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext, timeout, enableJsonp, jsonpCallbackParameter) {
    /// <summary locid="M:J#Sys.Net.WebServiceProxy.invoke" />
    /// <param name="servicePath" type="String"></param>
    /// <param name="methodName" type="String" mayBeNull="true" optional="true"></param>
    /// <param name="useGet" type="Boolean" optional="true"></param>
    /// <param name="params" mayBeNull="true" optional="true"></param>
    /// <param name="onSuccess" type="Function" mayBeNull="true" optional="true"></param>
    /// <param name="onFailure" type="Function" mayBeNull="true" optional="true"></param>
    /// <param name="userContext" mayBeNull="true" optional="true"></param>
    /// <param name="timeout" type="Number" optional="true"></param>
    /// <param name="enableJsonp" type="Boolean" optional="true" mayBeNull="true"></param>
    /// <param name="jsonpCallbackParameter" type="String" optional="true" mayBeNull="true"></param>
    /// <returns type="Sys.Net.WebRequest" mayBeNull="true"></returns>
    var e = Function._validateParams(arguments, [{
        name: "servicePath",
        type: String
    }, {
        name: "methodName",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "useGet",
        type: Boolean,
        optional: true
    }, {
        name: "params",
        mayBeNull: true,
        optional: true
    }, {
        name: "onSuccess",
        type: Function,
        mayBeNull: true,
        optional: true
    }, {
        name: "onFailure",
        type: Function,
        mayBeNull: true,
        optional: true
    }, {
        name: "userContext",
        mayBeNull: true,
        optional: true
    }, {
        name: "timeout",
        type: Number,
        optional: true
    }, {
        name: "enableJsonp",
        type: Boolean,
        mayBeNull: true,
        optional: true
    }, {
        name: "jsonpCallbackParameter",
        type: String,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    var schemeHost = (enableJsonp !== false) ? Sys.Net.WebServiceProxy._xdomain.exec(servicePath) : null,
        tempCallback, jsonp = schemeHost && (schemeHost.length === 3) &&
            ((schemeHost[1] !== location.protocol) || (schemeHost[2] !== location.host));
    useGet = jsonp || useGet;
    if (jsonp) {
        jsonpCallbackParameter = jsonpCallbackParameter || "callback";
        tempCallback = "_jsonp" + Sys._jsonp++;
    }
    if (!params) params = {};
    var urlParams = params;
    if (!useGet || !urlParams) urlParams = {};
    var script, error, timeoutcookie = null,
        loader, body = null,
        url = Sys.Net.WebRequest._createUrl(methodName ? (servicePath + "/" + encodeURIComponent(methodName)) : servicePath, urlParams, jsonp ? (jsonpCallbackParameter + "=Sys." + tempCallback) : null);
    if (jsonp) {
        script = document.createElement("script");
        script.src = url;
        loader = new Sys._ScriptLoaderTask(script, function(script, loaded) {
            if (!loaded || tempCallback) {
                jsonpComplete({
                    Message: String.format(Sys.Res.webServiceFailedNoMsg, methodName)
                }, -1);
            }
        });

        function jsonpComplete(data, statusCode) {
            if (timeoutcookie !== null) {
                window.clearTimeout(timeoutcookie);
                timeoutcookie = null;
            }
            loader.dispose();
            delete Sys[tempCallback];
            tempCallback = null;
            if ((typeof(statusCode) !== "undefined") && (statusCode !== 200)) {
                if (onFailure) {
                    error = new Sys.Net.WebServiceError(false,
                        data.Message || String.format(Sys.Res.webServiceFailedNoMsg, methodName),
                        data.StackTrace || null,
                        data.ExceptionType || null,
                        data);
                    error._statusCode = statusCode;
                    onFailure(error, userContext, methodName);
                } else {
                    if (data.StackTrace && data.Message) {
                        error = data.StackTrace + "-- " + data.Message;
                    } else {
                        error = data.StackTrace || data.Message;
                    }
                    error = String.format(error ? Sys.Res.webServiceFailed : Sys.Res.webServiceFailedNoMsg, methodName, error);
                    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
                }
            } else if (onSuccess) {
                onSuccess(data, userContext, methodName);
            }
        }
        Sys[tempCallback] = jsonpComplete;
        loader.execute();
        return null;
    }
    var request = new Sys.Net.WebRequest();
    request.set_url(url);
    request.get_headers()['Content-Type'] = 'application/json; charset=utf-8';
    if (!useGet) {
        body = Sys.Serialization.JavaScriptSerializer.serialize(params);
        if (body === "{}") body = "";
    }
    request.set_body(body);
    request.add_completed(onComplete);
    if (timeout && timeout > 0) request.set_timeout(timeout);
    request.invoke();

    function onComplete(response, eventArgs) {
        if (response.get_responseAvailable()) {
            var statusCode = response.get_statusCode();
            var result = null;

            try {
                var contentType = response.getResponseHeader("Content-Type");
                if (contentType.startsWith("application/json")) {
                    result = response.get_object();
                } else if (contentType.startsWith("text/xml")) {
                    result = response.get_xml();
                } else {
                    result = response.get_responseData();
                }
            } catch (ex) {}
            var error = response.getResponseHeader("jsonerror");
            var errorObj = (error === "true");
            if (errorObj) {
                if (result) {
                    result = new Sys.Net.WebServiceError(false, result.Message, result.StackTrace, result.ExceptionType, result);
                }
            } else if (contentType.startsWith("application/json")) {
                result = (!result || (typeof(result.d) === "undefined")) ? result : result.d;
            }
            if (((statusCode < 200) || (statusCode >= 300)) || errorObj) {
                if (onFailure) {
                    if (!result || !errorObj) {
                        result = new Sys.Net.WebServiceError(false, String.format(Sys.Res.webServiceFailedNoMsg, methodName));
                    }
                    result._statusCode = statusCode;
                    onFailure(result, userContext, methodName);
                } else {
                    if (result && errorObj) {
                        error = result.get_exceptionType() + "-- " + result.get_message();
                    } else {
                        error = response.get_responseData();
                    }
                    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
                }
            } else if (onSuccess) {
                onSuccess(result, userContext, methodName);
            }
        } else {
            var msg;
            if (response.get_timedOut()) {
                msg = String.format(Sys.Res.webServiceTimedOut, methodName);
            } else {
                msg = String.format(Sys.Res.webServiceFailedNoMsg, methodName)
            }
            if (onFailure) {
                onFailure(new Sys.Net.WebServiceError(response.get_timedOut(), msg, "", ""), userContext, methodName);
            } else {
                throw Sys.Net.WebServiceProxy._createFailedError(methodName, msg);
            }
        }
    }
    return request;
}
Sys.Net.WebServiceProxy._createFailedError = function Sys$Net$WebServiceProxy$_createFailedError(methodName, errorMessage) {
    var displayMessage = "Sys.Net.WebServiceFailedException: " + errorMessage;
    var e = Error.create(displayMessage, {
        'name': 'Sys.Net.WebServiceFailedException',
        'methodName': methodName
    });
    e.popStackFrame();
    return e;
}
Sys.Net.WebServiceProxy._defaultFailedCallback = function Sys$Net$WebServiceProxy$_defaultFailedCallback(err, methodName) {
    var error = err.get_exceptionType() + "-- " + err.get_message();
    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
}
Sys.Net.WebServiceProxy._generateTypedConstructor = function Sys$Net$WebServiceProxy$_generateTypedConstructor(type) {
    return function(properties) {
        if (properties) {
            for (var name in properties) {
                this[name] = properties[name];
            }
        }
        this.__type = type;
    }
}
Sys._jsonp = 0;
Sys.Net.WebServiceProxy._xdomain = /^\s*([a-zA-Z0-9\+\-\.]+\:)\/\/([^?#\/]+)/;

Sys.Net.WebServiceError = function Sys$Net$WebServiceError(timedOut, message, stackTrace, exceptionType, errorObject) {
    /// <summary locid="M:J#Sys.Net.WebServiceError.#ctor" />
    /// <param name="timedOut" type="Boolean"></param>
    /// <param name="message" type="String" mayBeNull="true"></param>
    /// <param name="stackTrace" type="String" mayBeNull="true" optional="true"></param>
    /// <param name="exceptionType" type="String" mayBeNull="true" optional="true"></param>
    /// <param name="errorObject" type="Object" mayBeNull="true" optional="true"></param>
    var e = Function._validateParams(arguments, [{
        name: "timedOut",
        type: Boolean
    }, {
        name: "message",
        type: String,
        mayBeNull: true
    }, {
        name: "stackTrace",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "exceptionType",
        type: String,
        mayBeNull: true,
        optional: true
    }, {
        name: "errorObject",
        type: Object,
        mayBeNull: true,
        optional: true
    }]);
    if (e) throw e;
    this._timedOut = timedOut;
    this._message = message;
    this._stackTrace = stackTrace;
    this._exceptionType = exceptionType;
    this._errorObject = errorObject;
    this._statusCode = -1;
}

function Sys$Net$WebServiceError$get_timedOut() {
    /// <value type="Boolean" locid="P:J#Sys.Net.WebServiceError.timedOut"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._timedOut;
}

function Sys$Net$WebServiceError$get_statusCode() {
    /// <value type="Number" locid="P:J#Sys.Net.WebServiceError.statusCode"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._statusCode;
}

function Sys$Net$WebServiceError$get_message() {
    /// <value type="String" locid="P:J#Sys.Net.WebServiceError.message"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._message;
}

function Sys$Net$WebServiceError$get_stackTrace() {
    /// <value type="String" locid="P:J#Sys.Net.WebServiceError.stackTrace"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._stackTrace || "";
}

function Sys$Net$WebServiceError$get_exceptionType() {
    /// <value type="String" locid="P:J#Sys.Net.WebServiceError.exceptionType"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._exceptionType || "";
}

function Sys$Net$WebServiceError$get_errorObject() {
    /// <value type="Object" locid="P:J#Sys.Net.WebServiceError.errorObject"></value>
    if (arguments.length !== 0) throw Error.parameterCount();
    return this._errorObject || null;
}
Sys.Net.WebServiceError.prototype = {
    get_timedOut: Sys$Net$WebServiceError$get_timedOut,
    get_statusCode: Sys$Net$WebServiceError$get_statusCode,
    get_message: Sys$Net$WebServiceError$get_message,
    get_stackTrace: Sys$Net$WebServiceError$get_stackTrace,
    get_exceptionType: Sys$Net$WebServiceError$get_exceptionType,
    get_errorObject: Sys$Net$WebServiceError$get_errorObject
}
Sys.Net.WebServiceError.registerClass('Sys.Net.WebServiceError');


Type.registerNamespace('Sys');

Sys.Res = {
    'urlMustBeLessThan1024chars': 'The history state must be small enough to not make the url larger than 1024 characters.',
    'argumentTypeName': 'Value is not the name of an existing type.',
    'cantBeCalledAfterDispose': 'Can\'t be called after dispose.',
    'componentCantSetIdAfterAddedToApp': 'The id property of a component can\'t be set after it\'s been added to the Application object.',
    'behaviorDuplicateName': 'A behavior with name \'{0}\' already exists or it is the name of an existing property on the target element.',
    'notATypeName': 'Value is not a valid type name.',
    'elementNotFound': 'An element with id \'{0}\' could not be found.',
    'stateMustBeStringDictionary': 'The state object can only have null and string fields.',
    'boolTrueOrFalse': 'Value must be \'true\' or \'false\'.',
    'scriptLoadFailedNoHead': 'ScriptLoader requires pages to contain a <head> element.',
    'stringFormatInvalid': 'The format string is invalid.',
    'referenceNotFound': 'Component \'{0}\' was not found.',
    'enumReservedName': '\'{0}\' is a reserved name that can\'t be used as an enum value name.',
    'circularParentChain': 'The chain of control parents can\'t have circular references.',
    'namespaceContainsNonObject': 'Object {0} already exists and is not an object.',
    'undefinedEvent': '\'{0}\' is not an event.',
    'propertyUndefined': '\'{0}\' is not a property or an existing field.',
    'observableConflict': 'Object already contains a member with the name \'{0}\'.',
    'historyCannotEnableHistory': 'Cannot set enableHistory after initialization.',
    'eventHandlerInvalid': 'Handler was not added through the Sys.UI.DomEvent.addHandler method.',
    'scriptLoadFailedDebug': 'The script \'{0}\' failed to load. Check for:\r\n Inaccessible path.\r\n Script errors. (IE) Enable \'Display a notification about every script error\' under advanced settings.',
    'propertyNotWritable': '\'{0}\' is not a writable property.',
    'enumInvalidValueName': '\'{0}\' is not a valid name for an enum value.',
    'controlAlreadyDefined': 'A control is already associated with the element.',
    'addHandlerCantBeUsedForError': 'Can\'t add a handler for the error event using this method. Please set the window.onerror property instead.',
    'cantAddNonFunctionhandler': 'Can\'t add a handler that is not a function.',
    'invalidNameSpace': 'Value is not a valid namespace identifier.',
    'notAnInterface': 'Value is not a valid interface.',
    'eventHandlerNotFunction': 'Handler must be a function.',
    'propertyNotAnArray': '\'{0}\' is not an Array property.',
    'namespaceContainsClass': 'Object {0} already exists as a class, enum, or interface.',
    'typeRegisteredTwice': 'Type {0} has already been registered. The type may be defined multiple times or the script file that defines it may have already been loaded. A possible cause is a change of settings during a partial update.',
    'cantSetNameAfterInit': 'The name property can\'t be set on this object after initialization.',
    'historyMissingFrame': 'For the history feature to work in IE, the page must have an iFrame element with id \'__historyFrame\' pointed to a page that gets its title from the \'title\' query string parameter and calls Sys.Application._onIFrameLoad() on the parent window. This can be done by setting EnableHistory to true on ScriptManager.',
    'appDuplicateComponent': 'Two components with the same id \'{0}\' can\'t be added to the application.',
    'historyCannotAddHistoryPointWithHistoryDisabled': 'A history point can only be added if enableHistory is set to true.',
    'baseNotAClass': 'Value is not a class.',
    'expectedElementOrId': 'Value must be a DOM element or DOM element Id.',
    'methodNotFound': 'No method found with name \'{0}\'.',
    'arrayParseBadFormat': 'Value must be a valid string representation for an array. It must start with a \'[\' and end with a \']\'.',
    'stateFieldNameInvalid': 'State field names must not contain any \'=\' characters.',
    'cantSetId': 'The id property can\'t be set on this object.',
    'stringFormatBraceMismatch': 'The format string contains an unmatched opening or closing brace.',
    'enumValueNotInteger': 'An enumeration definition can only contain integer values.',
    'propertyNullOrUndefined': 'Cannot set the properties of \'{0}\' because it returned a null value.',
    'argumentDomNode': 'Value must be a DOM element or a text node.',
    'componentCantSetIdTwice': 'The id property of a component can\'t be set more than once.',
    'createComponentOnDom': 'Value must be null for Components that are not Controls or Behaviors.',
    'createNotComponent': '{0} does not derive from Sys.Component.',
    'createNoDom': 'Value must not be null for Controls and Behaviors.',
    'cantAddWithoutId': 'Can\'t add a component that doesn\'t have an id.',
    'notObservable': 'Instances of type \'{0}\' cannot be observed.',
    'badTypeName': 'Value is not the name of the type being registered or the name is a reserved word.',
    'argumentInteger': 'Value must be an integer.',
    'invokeCalledTwice': 'Cannot call invoke more than once.',
    'webServiceFailed': 'The server method \'{0}\' failed with the following error: {1}',
    'argumentType': 'Object cannot be converted to the required type.',
    'argumentNull': 'Value cannot be null.',
    'scriptAlreadyLoaded': 'The script \'{0}\' has been referenced multiple times. If referencing Microsoft AJAX scripts explicitly, set the MicrosoftAjaxMode property of the ScriptManager to Explicit.',
    'scriptDependencyNotFound': 'The script \'{0}\' failed to load because it is dependent on script \'{1}\'.',
    'formatBadFormatSpecifier': 'Format specifier was invalid.',
    'requiredScriptReferenceNotIncluded': '\'{0}\' requires that you have included a script reference to \'{1}\'.',
    'webServiceFailedNoMsg': 'The server method \'{0}\' failed.',
    'argumentDomElement': 'Value must be a DOM element.',
    'invalidExecutorType': 'Could not create a valid Sys.Net.WebRequestExecutor from: {0}.',
    'cannotCallBeforeResponse': 'Cannot call {0} when responseAvailable is false.',
    'actualValue': 'Actual value was {0}.',
    'enumInvalidValue': '\'{0}\' is not a valid value for enum {1}.',
    'scriptLoadFailed': 'The script \'{0}\' could not be loaded.',
    'parameterCount': 'Parameter count mismatch.',
    'cannotDeserializeEmptyString': 'Cannot deserialize empty string.',
    'formatInvalidString': 'Input string was not in a correct format.',
    'invalidTimeout': 'Value must be greater than or equal to zero.',
    'cannotAbortBeforeStart': 'Cannot abort when executor has not started.',
    'argument': 'Value does not fall within the expected range.',
    'cannotDeserializeInvalidJson': 'Cannot deserialize. The data does not correspond to valid JSON.',
    'invalidHttpVerb': 'httpVerb cannot be set to an empty or null string.',
    'nullWebRequest': 'Cannot call executeRequest with a null webRequest.',
    'eventHandlerInvalid': 'Handler was not added through the Sys.UI.DomEvent.addHandler method.',
    'cannotSerializeNonFiniteNumbers': 'Cannot serialize non finite numbers.',
    'argumentUndefined': 'Value cannot be undefined.',
    'webServiceInvalidReturnType': 'The server method \'{0}\' returned an invalid type. Expected type: {1}',
    'servicePathNotSet': 'The path to the web service has not been set.',
    'argumentTypeWithTypes': 'Object of type \'{0}\' cannot be converted to type \'{1}\'.',
    'cannotCallOnceStarted': 'Cannot call {0} once started.',
    'badBaseUrl1': 'Base URL does not contain ://.',
    'badBaseUrl2': 'Base URL does not contain another /.',
    'badBaseUrl3': 'Cannot find last / in base URL.',
    'setExecutorAfterActive': 'Cannot set executor after it has become active.',
    'paramName': 'Parameter name: {0}',
    'nullReferenceInPath': 'Null reference while evaluating data path: \'{0}\'.',
    'cannotCallOutsideHandler': 'Cannot call {0} outside of a completed event handler.',
    'cannotSerializeObjectWithCycle': 'Cannot serialize object with cyclic reference within child properties.',
    'format': 'One of the identified items was in an invalid format.',
    'assertFailedCaller': 'Assertion Failed: {0}\r\nat {1}',
    'argumentOutOfRange': 'Specified argument was out of the range of valid values.',
    'webServiceTimedOut': 'The server method \'{0}\' timed out.',
    'notImplemented': 'The method or operation is not implemented.',
    'assertFailed': 'Assertion Failed: {0}',
    'invalidOperation': 'Operation is not valid due to the current state of the object.',
    'breakIntoDebugger': '{0}\r\n\r\nBreak into debugger?'
};

/***** Insert sp.core.DEBUG.js here         ***************/
function ULS6Pv() {
    var o = new Object;
    o.ULSTeamName = "Microsoft SharePoint Foundation";
    o.ULSFileName = "SP.Core.debug.js";
    return o;
}
Type.registerNamespace('SP');
if (typeof(IEnumerator) == "undefined") {
    var IEnumerator = function() {};
    IEnumerator.prototype = {
        get_current: null,
        moveNext: null,
        reset: null
    };
    IEnumerator.registerInterface("IEnumerator");
}

if (typeof(IEnumerable) == "undefined") {
    var IEnumerable = function() {};
    IEnumerable.prototype = {
        getEnumerator: null
    };
    IEnumerable.registerInterface("IEnumerable");
}

if (typeof(IDisposable) == "undefined") {
    var IDisposable = function() {};
    IDisposable.prototype = {
        dispose: null
    };
    IDisposable.registerInterface("IDisposable");
}

SP.EnumerableArray = function SP_EnumerableArray(array) {
    ULS6Pv: ;
    if (array == null)
        array = [];
    this._m_array = array;
}
SP.EnumerableArray.prototype = {
    _m_array: null,

    getEnumerator: function SP_EnumerableArray$getEnumerator() {
        ULS6Pv: ;
        return new SP._arrayEnumerator(this._m_array);
    },

    get_length: function SP_EnumerableArray$get_length() {
        ULS6Pv: ;
        return this._m_array.length;
    },
    get_count: function SP_EnumerableArray$get_count() {
        ULS6Pv: ;
        return this._m_array.length;
    },
    add: function SP_EnumerableArray$add(obj) {
        ULS6Pv: ;
        this._m_array.push(obj);
    },
    addRange: function SP_EnumerableArray$addRange(items) {
        ULS6Pv: ;
        Array.addRange(this._m_array, items);
    },
    clear: function SP_EnumerableArray$clear() {
        ULS6Pv: ;
        this._m_array.length = 0;
    },
    contains: function SP_EnumerableArray$contains(item) {
        ULS6Pv: ;
        return Array.contains(this._m_array, item);
    },
    indexOf: function SP_EnumerableArray$indexOf(item, start) {
        ULS6Pv: ;
        return Array.indexOf(this._m_array, item, start);
    },
    insert: function SP_EnumerableArray$insert(index, item) {
        ULS6Pv: ;
        Array.insert(this._m_array, index, item);
    },
    remove: function SP_EnumerableArray$remove(item) {
        ULS6Pv: ;
        Array.remove(this._m_array, item);
    },
    removeAt: function SP_EnumerableArray$removeAt(index) {
        ULS6Pv: ;
        Array.removeAt(this._m_array, index);
    },
    toArray: function SP_EnumerableArray$toArray() {
        ULS6Pv: ;
        return this._m_array;
    },
    toArrayList: function SP_EnumerableArray$toArrayList() {
        ULS6Pv: ;
        return this._m_array;
    }
}


////////////////////////////////////////////////////////////////////////////////
// SP._arrayEnumerator

SP._arrayEnumerator = function SP__arrayEnumerator(array) {
    ULS6Pv: ;
    this._m_array = array;
    this._m_index = -1;
}
SP._arrayEnumerator.prototype = {
    _m_index: 0,
    _m_array: null,

    get_current: function SP__arrayEnumerator$get_current() {
        ULS6Pv: ;
        return this._m_array[this._m_index];
    },

    moveNext: function SP__arrayEnumerator$moveNext() {
        ULS6Pv: ;
        this._m_index++;
        return this._m_index < this._m_array.length;
    },

    reset: function SP__arrayEnumerator$reset() {
        ULS6Pv: ;
        this._m_index = -1;
    }
}

SP.EnumerableArray.registerClass('SP.EnumerableArray', null, IEnumerable);
SP._arrayEnumerator.registerClass('SP._arrayEnumerator', null, IEnumerator);


Type.registerNamespace('SP');

SP.Guid = function(guidText) {
    ULS6Pv: ;
    guidText = SP.Guid.$K_0(guidText);
    if (SP.Guid.isValid(guidText)) {
        this.$5_0 = guidText;
    } else {
        this.$5_0 = '00000000-0000-0000-0000-000000000000';
        throw Error.argument('guidText');
    }
}
SP.Guid.get_empty = function() {
    ULS6Pv: ;
    if (!SP.Guid.$9_0) {
        SP.Guid.$9_0 = new SP.Guid('00000000-0000-0000-0000-000000000000');
    }
    return SP.Guid.$9_0;
}
SP.Guid.newGuid = function() {
    ULS6Pv: ;
    var $v_0 = '';
    for (var $v_2 = 0; $v_2 < 32; $v_2++) {
        var $v_3 = Math.floor(Math.random() * 16);
        switch ($v_2) {
            case 8:
                $v_0 += '-';
                break;
            case 12:
                $v_3 = 4;
                $v_0 += '-';
                break;
            case 16:
                $v_3 = ($v_3 & 3) | 8;
                $v_0 += '-';
                break;
            case 20:
                $v_0 += '-';
                break;
        }
        $v_0 += SP.Guid.$I_0[$v_3];
    }
    var $v_1 = new SP.Guid($v_0);
    return $v_1;
}
SP.Guid.isValid = function(uuid) {
    ULS6Pv: ;
    if (uuid.length !== 36 || uuid !== uuid.toLowerCase()) {
        return false;
    }
    var $v_0 = uuid.split('-');
    if ($v_0.length !== 5 || $v_0[0].length !== 8 || $v_0[1].length !== 4 || $v_0[2].length !== 4 || $v_0[3].length !== 4 || $v_0[4].length !== 12) {
        return false;
    }
    return true;
}
SP.Guid.$K_0 = function($p0) {
    var $v_0;
    $v_0 = $p0.replace(' ', '');
    $v_0 = $v_0.replace('{', '');
    $v_0 = $v_0.replace('}', '');
    $v_0 = $v_0.toLowerCase();
    return $v_0;
}
SP.Guid.prototype = {
    $5_0: null,

    toString: function() {
        ULS6Pv: ;
        if (!arguments.length) {
            return this.$5_0;
        }
        var $v_0 = arguments[0];
        if ($v_0 === 'B') {
            return '{' + this.$5_0 + '}';
        } else if ($v_0 === 'D') {
            return this.$5_0;
        } else {
            throw Error.argument('format');
        }
    },

    equals: function(uuid) {
        ULS6Pv: ;
        if (!uuid) {
            return false;
        }
        return this.$5_0 === uuid.toString();
    },

    ToSerialized: function() {
        ULS6Pv: ;
        return this.toString();
    }
}


SP.ScriptUtility = function() {}
SP.ScriptUtility.isNullOrEmptyString = function(str) {
    ULS6Pv: ;
    var $v_0 = null;
    return str === $v_0 || typeof(str) === 'undefined' || !str.length;
}
SP.ScriptUtility.isNullOrUndefined = function(obj) {
    ULS6Pv: ;
    var $v_0 = null;
    return obj === $v_0 || typeof(obj) === 'undefined';
}
SP.ScriptUtility.isUndefined = function(obj) {
    ULS6Pv: ;
    return typeof(obj) === 'undefined';
}
SP.ScriptUtility.truncateToInt = function(n) {
    ULS6Pv: ;
    return ((n > 0) ? Math.floor(n) : Math.ceil(n));
}


SP.XmlWriter = function(sb) {
    ULS6Pv: ;
    this.$3_0 = [];
    this.$0_0 = sb;
    this.$2_0 = true;
}
SP.XmlWriter.create = function(sb) {
    ULS6Pv: ;
    return new SP.XmlWriter(sb);
}
SP.XmlWriter.prototype = {
    $0_0: null,
    $7_0: null,
    $2_0: false,
    $4_0: false,

    writeStartElement: function(tagName) {
        ULS6Pv: ;
        this.$A_0();
        this.$8_0();
        Array.add(this.$3_0, tagName);
        this.$7_0 = tagName;
        this.$0_0.append('<');
        this.$0_0.append(tagName);
        this.$2_0 = false;
        this.$4_0 = false;
    },

    writeElementString: function(tagName, value) {
        ULS6Pv: ;
        this.$A_0();
        this.$8_0();
        this.writeStartElement(tagName);
        this.writeString(value);
        this.writeEndElement();
    },

    writeEndElement: function() {
        ULS6Pv: ;
        this.$A_0();
        if (SP.ScriptUtility.isNullOrEmptyString(this.$7_0)) {
            throw Error.invalidOperation();
        }
        if (!this.$2_0) {
            this.$0_0.append(' />');
            this.$2_0 = true;
        } else {
            this.$0_0.append('</');
            this.$0_0.append(this.$7_0);
            this.$0_0.append('>');
        }
        Array.removeAt(this.$3_0, this.$3_0.length - 1);
        if (this.$3_0.length > 0) {
            this.$7_0 = this.$3_0[this.$3_0.length - 1];
        } else {
            this.$7_0 = null;
        }
    },

    $8_0: function() {
        ULS6Pv: ;
        if (!this.$2_0) {
            this.$0_0.append('>');
            this.$2_0 = true;
        }
    },

    writeAttributeString: function(localName, value) {
        ULS6Pv: ;
        if (this.$2_0) {
            throw Error.invalidOperation();
        }
        this.$0_0.append(' ');
        this.$0_0.append(localName);
        this.$0_0.append('=\"');
        this.$B_0(value, true);
        this.$0_0.append('\"');
    },

    writeStartAttribute: function(localName) {
        ULS6Pv: ;
        if (!this.$2_0) {
            throw Error.invalidOperation();
        }
        this.$4_0 = true;
        this.$0_0.append(' ');
        this.$0_0.append(localName);
        this.$0_0.append('=\"');
    },

    writeEndAttribute: function() {
        ULS6Pv: ;
        if (!this.$4_0) {
            throw Error.invalidOperation();
        }
        this.$0_0.append('\"');
        this.$4_0 = false;
    },

    writeString: function(value) {
        ULS6Pv: ;
        if (this.$4_0) {
            this.$B_0(value, true);
            this.$0_0.append(value);
        } else {
            this.$8_0();
            this.$B_0(value, false);
        }
    },

    writeRaw: function(xml) {
        ULS6Pv: ;
        this.$A_0();
        this.$8_0();
        this.$0_0.append(xml);
    },

    $A_0: function() {
        ULS6Pv: ;
        if (this.$4_0) {
            throw Error.invalidOperation();
        }
    },

    $B_0: function($p0, $p1) {
        if (SP.ScriptUtility.isNullOrEmptyString($p0)) {
            return;
        }
        for (var $v_0 = 0; $v_0 < $p0.length; $v_0++) {
            var $v_1 = $p0.charCodeAt($v_0);
            if ($v_1 === 62) {
                this.$0_0.append('&gt;');
            } else if ($v_1 === 60) {
                this.$0_0.append('&lt;');
            } else if ($v_1 === 38) {
                this.$0_0.append('&amp;');
            } else if ($v_1 === 34 && $p1) {
                this.$0_0.append('&quot;');
            } else if ($v_1 === 39 && $p1) {
                this.$0_0.append('&apos;');
            } else if ($v_1 === 9 && $p1) {
                this.$0_0.append('&#09;');
            } else if ($v_1 === 10) {
                this.$0_0.append('&#10;');
            } else if ($v_1 === 13) {
                this.$0_0.append('&#13;');
            } else {
                this.$0_0.append($p0.charAt($v_0).toString());
            }
        }
    },

    close: function() {}
}


Type.registerNamespace('SP.UI');

SP.UI.UIUtility = function() {}
SP.UI.UIUtility.generateRandomElementId = function() {
    ULS6Pv: ;
    var $v_0 = null;
    var $v_1 = null;
    do {
        var $v_2 = Math.random();
        $v_2 = $v_2 * 100000;
        $v_2 = Math.round($v_2);
        $v_0 = 'rnd' + $v_2.toString();
        $v_1 = $get($v_0);
    } while ($v_1);
    return $v_0;
}
SP.UI.UIUtility.cancelEvent = function(evt) {
    ULS6Pv: ;
    if (evt) {
        evt.preventDefault();
        evt.stopPropagation();
    }
}
SP.UI.UIUtility.clearChildNodes = function(elem) {
    ULS6Pv: ;
    if (elem) {
        var $v_0 = [];
        for (var $v_1 = 0; $v_1 < elem.childNodes.length; $v_1++) {
            Array.add($v_0, elem.childNodes[$v_1]);
        }
        for (var $v_2 = 0; $v_2 < $v_0.length; $v_2++) {
            var $v_3 = $v_0[$v_2];
            elem.removeChild($v_3);
        }
    }
}
SP.UI.UIUtility.hideElement = function(elem) {
    ULS6Pv: ;
    if (elem) {
        elem.style.display = 'none';
    }
}
SP.UI.UIUtility.showElement = function(elem) {
    ULS6Pv: ;
    if (elem) {
        elem.style.display = '';
    }
}
SP.UI.UIUtility.insertBefore = function(newElement, referenceElement) {
    ULS6Pv: ;
    var $v_0 = referenceElement.parentNode;
    $v_0.insertBefore(newElement, referenceElement);
}
SP.UI.UIUtility.insertAfter = function(newElement, targetElement) {
    ULS6Pv: ;
    var $v_0 = targetElement.parentNode;
    if ($v_0.lastChild === targetElement) {
        $v_0.appendChild(newElement);
    } else {
        $v_0.insertBefore(newElement, targetElement.nextSibling);
    }
}
SP.UI.UIUtility.removeNode = function(elem) {
    ULS6Pv: ;
    if (elem.parentNode) {
        elem.parentNode.removeChild(elem);
    }
}
SP.UI.UIUtility.calculateOffsetLeft = function(elem) {
    ULS6Pv: ;
    var $v_0 = 0;
    while (elem) {
        $v_0 += elem.offsetLeft;
        elem = elem.offsetParent;
    }
    return $v_0;
}
SP.UI.UIUtility.calculateOffsetTop = function(elem) {
    ULS6Pv: ;
    var $v_0 = 0;
    while (elem) {
        $v_0 += elem.offsetTop;
        elem = elem.offsetParent;
    }
    return $v_0;
}
SP.UI.UIUtility.createHtmlInputText = function(text) {
    ULS6Pv: ;
    var $v_0 = document.createElement('input');
    $v_0.setAttribute('type', 'text');
    if (text) {
        $v_0.setAttribute('value', text);
    }
    return $v_0;
}
SP.UI.UIUtility.createHtmlInputCheckbox = function(isChecked) {
    ULS6Pv: ;
    var $v_0 = document.createElement('input');
    $v_0.setAttribute('type', 'checkbox');
    if (isChecked) {
        $v_0.setAttribute('defaultChecked', isChecked);
    }
    return $v_0;
}
SP.UI.UIUtility.setInnerText = function(elem, text) {
    ULS6Pv: ;
    SP.UI.NativeDomHelper.setInnerText(elem, text);
}
SP.UI.UIUtility.getInnerText = function(elem) {
    ULS6Pv: ;
    if (Sys.Browser.agent === Sys.Browser.Safari || Sys.Browser.agent === Sys.Browser.AppleWebKit) {
        return elem.innerHTML;
    } else if (Sys.Browser.agent === Sys.Browser.Firefox) {
        return elem.textContent;
    } else {
        return elem.innerText;
    }
}
SP.UI.UIUtility.isTextNode = function(elem) {
    ULS6Pv: ;
    return elem.nodeType === 3 || elem.nodeType === 4;
}
SP.UI.UIUtility.isNodeOfType = function(elem, tagNames) {
    ULS6Pv: ;
    for (var $v_0 = 0; $v_0 < tagNames.length; $v_0++) {
        if (elem.tagName === tagNames[$v_0]) {
            return true;
        }
    }
    return false;
}
SP.UI.UIUtility.$J_0 = function($p0) {
    var $v_0 = $p0;
    while ($v_0) {
        var $v_1 = $v_0.className;
        if ($v_1) {
            if ($v_1.indexOf('ms-cui') !== -1 || $v_1.indexOf('ms-rtefocus-invalid') !== -1 || $v_1.indexOf('ms-dlgOverlay') !== -1 || $v_1.indexOf('ms-dlgFrame') !== -1 || $v_1.indexOf('ms-dlgTitle') !== -1 || $v_1.indexOf('ms-dlgTitleText') !== -1) {
                return true;
            }
        }
        $v_0 = $v_0.parentNode;
    }
    if ($p0.tagName === 'HTML') {
        return true;
    }
    return false;
}
SP.UI.UIUtility.focusValidOnThisNode = function(node) {
    ULS6Pv: ;
    if (!node || SP.UI.UIUtility.$C_0 === node) {
        return true;
    }
    if (!SP.UI.UIUtility.$J_0(node)) {
        SP.UI.UIUtility.$C_0 = node;
        return true;
    } else {
        return false;
    }
}


Type.registerNamespace('SP.Utilities');

SP.Utilities.HttpUtility = function() {}
SP.Utilities.HttpUtility.htmlEncode = function(str) {
    ULS6Pv: ;
    return STSHtmlEncode(str);
}
SP.Utilities.HttpUtility.urlPathEncode = function(str) {
    ULS6Pv: ;
    return escapeProperlyCore(str, true);
}
SP.Utilities.HttpUtility.urlKeyValueEncode = function(keyOrValueToEncode) {
    ULS6Pv: ;
    return escapeProperlyCore(keyOrValueToEncode, false);
}
SP.Utilities.HttpUtility.ecmaScriptStringLiteralEncode = function(scriptLiteralToEncode) {
    ULS6Pv: ;
    return STSScriptEncode(scriptLiteralToEncode);
}
SP.Utilities.HttpUtility.navigateTo = function(url) {
    ULS6Pv: ;
    STSNavigate(url);
}
SP.Utilities.HttpUtility.appendSourceAndNavigateTo = function(url) {
    ULS6Pv: ;
    GoToPage(url);
}
SP.Utilities.HttpUtility.escapeXmlText = function(toescape) {
    ULS6Pv: ;
    toescape = toescape.replace(SP.Utilities.HttpUtility.$D_0, '&amp;');
    toescape = toescape.replace(SP.Utilities.HttpUtility.$H_0, '&#39;');
    toescape = toescape.replace(SP.Utilities.HttpUtility.$E_0, '&quot;');
    toescape = toescape.replace(SP.Utilities.HttpUtility.$G_0, '&lt;');
    toescape = toescape.replace(SP.Utilities.HttpUtility.$F_0, '&gt;');
    return toescape;
}


SP.Utilities.UrlBuilder = function(path) {
    ULS6Pv: ;
    this.$6_0 = path;
}
SP.Utilities.UrlBuilder.urlCombine = function(path1, path2) {
    ULS6Pv: ;
    if (path1.endsWith('/')) {
        return path1 + path2;
    } else {
        return path1 + '/' + path2;
    }
}
SP.Utilities.UrlBuilder.replaceOrAddQueryString = function(url, key, value) {
    ULS6Pv: ;
    key = SP.Utilities.HttpUtility.urlKeyValueEncode(key);
    value = SP.Utilities.HttpUtility.urlKeyValueEncode(value);
    return StURLSetVar2(url, key, value);
}
SP.Utilities.UrlBuilder.removeQueryString = function(url, key) {
    ULS6Pv: ;
    key = SP.Utilities.HttpUtility.urlKeyValueEncode(key);
    return RemoveQueryParameterFromUrl(url, key);
}
SP.Utilities.UrlBuilder.prototype = {
    $6_0: null,
    $1_0: null,

    combinePath: function(path) {
        ULS6Pv: ;
        this.$6_0 = SP.Utilities.UrlBuilder.urlCombine(this.$6_0, path);
    },

    addKeyValueQueryString: function(key, value) {
        ULS6Pv: ;
        if (!this.$1_0) {
            this.$1_0 = new Sys.StringBuilder();
        }
        if (!this.$1_0.isEmpty()) {
            this.$1_0.append('&');
        }
        this.$1_0.append(SP.Utilities.HttpUtility.urlKeyValueEncode(key));
        this.$1_0.append('=');
        this.$1_0.append(SP.Utilities.HttpUtility.urlKeyValueEncode(value));
    },

    get_url: function() {
        ULS6Pv: ;
        if (SP.ScriptUtility.isNullOrEmptyString(this.$6_0)) {
            return '';
        }
        if (!this.$1_0 || this.$1_0.isEmpty()) {
            return this.$6_0;
        }
        return this.$6_0 + '?' + this.$1_0.toString();
    },

    toString: function() {
        ULS6Pv: ;
        return this.get_url();
    }
}


Type.registerNamespace('SP.ListOperation');

SP.ListOperation.Selection = function() {}
SP.ListOperation.Selection.selectListItem = function(iid, bSelect) {
    ULS6Pv: ;
    return SelectListItemNative(iid, bSelect);
}
SP.ListOperation.Selection.getSelectedItems = function() {
    ULS6Pv: ;
    return GetSelectedItemsNative();
}
SP.ListOperation.Selection.getSelectedList = function() {
    ULS6Pv: ;
    return GetSelectedListNative();
}
SP.ListOperation.Selection.deselectAllListItems = function(iid) {
    ULS6Pv: ;
    return DeselectAllListItemsNative(iid);
}


SP.Guid.registerClass('SP.Guid');
SP.ScriptUtility.registerClass('SP.ScriptUtility');
SP.XmlWriter.registerClass('SP.XmlWriter');
SP.UI.UIUtility.registerClass('SP.UI.UIUtility');
SP.Utilities.HttpUtility.registerClass('SP.Utilities.HttpUtility');
SP.Utilities.UrlBuilder.registerClass('SP.Utilities.UrlBuilder');
SP.ListOperation.Selection.registerClass('SP.ListOperation.Selection');
SP.Guid.$I_0 = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
SP.Guid.$9_0 = null;
SP.ScriptUtility.emptyString = '';
SP.UI.UIUtility.$C_0 = null;
SP.Utilities.HttpUtility.$D_0 = new RegExp('&', 'g');
SP.Utilities.HttpUtility.$H_0 = new RegExp('\'', 'g');
SP.Utilities.HttpUtility.$E_0 = new RegExp('\"', 'g');
SP.Utilities.HttpUtility.$G_0 = new RegExp('<', 'g');
SP.Utilities.HttpUtility.$F_0 = new RegExp('>', 'g');

SP.UI.NativeDomHelper = function SP_UI_NativeDomHelper() {};
SP.UI.NativeDomHelper.setInnerText = function SP_UI_NativeDomHelper$SetInnerText(elem, text) {
    ULS6Pv: ;
    var doc = elem.ownerDocument;
    if (doc.createTextNode) {
        var textNode = doc.createTextNode(text);
        elem.innerHTML = '';
        elem.appendChild(textNode);
    } else {
        elem.innerText = text;
    }
};

if (typeof(Sys) != "undefined" && Sys && Sys.Application) {
    Sys.Application.notifyScriptLoaded();
}
NotifyScriptLoadedAndExecuteWaitingJobs("sp.core.js");


/***** Insert sp.runtime.DEBUG.js here      ***************/
function ULSqiZ() {
    var o = new Object;
    o.ULSTeamName = "Microsoft SharePoint Foundation";
    o.ULSFileName = "SP.Runtime.debug.js";
    return o;
}


Type.registerNamespace('SP');

SP.DateTimeKind = function() {}
SP.DateTimeKind.prototype = {
    unspecified: 0,
    utc: 1,
    local: 2
}
SP.DateTimeKind.registerEnum('SP.DateTimeKind', false);


SP.ClientRequestStatus = function() {}
SP.ClientRequestStatus.prototype = {
    active: 0,
    inProgress: 1,
    completedSuccess: 2,
    completedException: 3
}
SP.ClientRequestStatus.registerEnum('SP.ClientRequestStatus', false);


SP.IFromJson = function() {}
SP.IFromJson.registerInterface('SP.IFromJson');


SP.ArrayListEnumerator = function(data) {
    ULSqiZ: ;
    this.$2_0 = data;
    this.$L_0 = -1;
    this.$1k_0 = data.length;
}
SP.ArrayListEnumerator.prototype = {
    $2_0: null,
    $L_0: 0,
    $1k_0: 0,

    get_current: function() {
        ULSqiZ: ;
        return this.$2_0[this.$L_0];
    },

    moveNext: function() {
        ULSqiZ: ;
        if (this.$1k_0 !== this.$2_0.length) {
            throw Error.invalidOperation(SP.Res.collectionModified);
        }
        this.$L_0++;
        return this.$L_0 < this.$2_0.length;
    },

    reset: function() {
        ULSqiZ: ;
        this.$L_0 = -1;
    }
}


SP.BaseCollection = function() {}
SP.BaseCollection.prototype = {

    getEnumerator: function() {
        ULSqiZ: ;
        return new SP.BaseCollectionEnumerator(this);
    },

    get_count: function() {
        ULSqiZ: ;
        return 0;
    },

    itemAtIndex: function(index) {
        ULSqiZ: ;
        return null;
    }
}


SP.BaseCollectionEnumerator = function(collection) {
    ULSqiZ: ;
    this.$18_0 = collection;
    this.$L_0 = -1;
}
SP.BaseCollectionEnumerator.prototype = {
    $18_0: null,
    $L_0: 0,

    get_current: function() {
        ULSqiZ: ;
        return this.$18_0.itemAtIndex(this.$L_0);
    },

    moveNext: function() {
        ULSqiZ: ;
        this.$L_0++;
        return this.$L_0 < this.$18_0.get_count();
    },

    reset: function() {
        ULSqiZ: ;
        this.$L_0 = -1;
    }
}


SP.Base64EncodedByteArray = function() {
    ULSqiZ: ;
    if (arguments.length > 0 && !SP.ScriptUtility.isNullOrEmptyString(arguments[0])) {
        var $v_0 = arguments[0];
        this.$2B_0($v_0);
    } else {
        this.$2_0 = ([]);
        this.$A_0 = 0;
    }
}
SP.Base64EncodedByteArray.prototype = {
    $2_0: null,
    $A_0: 0,

    get_length: function() {
        ULSqiZ: ;
        return this.$A_0;
    },

    $2B_0: function($p0) {
        $p0 = $p0.replace('\\u002f', '/');
        $p0 = $p0.replace('\\u002F', '/');
        var $v_0 = new RegExp('[^A-Za-z0-9+/=]', 'g');
        $p0 = $p0.replace($v_0, '');
        var $v_1 = Math.ceil(($p0.length + 1) / 4);
        var $v_2 = Math.ceil(($v_1 * 3 + 1) / 2);
        this.$2_0 = new Array($v_2);
        for (var $v_3 = 0; $v_3 < this.$2_0.length; $v_3++) {
            this.$2_0[$v_3] = 0;
        }
        this.$A_0 = 0;
        for (var $v_4 = 0; $v_4 < $p0.length; $v_4 += 4) {
            var $v_5 = $p0.charAt($v_4);
            var $v_6 = $p0.charAt($v_4 + 1);
            var $v_7 = $p0.charAt($v_4 + 2);
            var $v_8 = $p0.charAt($v_4 + 3);
            var $v_9 = SP.Base64EncodedByteArray.$m_0.indexOf($v_5);
            var $v_A = SP.Base64EncodedByteArray.$m_0.indexOf($v_6);
            var $v_B = SP.Base64EncodedByteArray.$m_0.indexOf($v_7);
            var $v_C = SP.Base64EncodedByteArray.$m_0.indexOf($v_8);
            var $v_D = ($v_9 << 2) | ($v_A >> 4);
            var $v_E = (($v_A & 15) << 4) | ($v_B >> 2);
            var $v_F = (($v_B & 3) << 6) | $v_C;
            this.$n_0(this.$A_0, $v_D);
            this.$A_0++;
            if ($v_B !== 64) {
                this.$n_0(this.$A_0, $v_E);
                this.$A_0++;
            }
            if ($v_C !== 64) {
                this.$n_0(this.$A_0, $v_F);
                this.$A_0++;
            }
        }
    },

    toBase64String: function() {
        ULSqiZ: ;
        var $v_0 = new Sys.StringBuilder();
        var $v_1 = 0;
        var $v_2 = this.$A_0 % 3;
        var $v_3 = this.$A_0 - $v_2;
        var $v_4, $v_5, $v_6;
        var $v_7, $v_8, $v_9, $v_A;
        for ($v_1 = 0; $v_1 < $v_3; $v_1 += 3) {
            $v_4 = this.getByteAt($v_1);
            $v_5 = this.getByteAt($v_1 + 1);
            $v_6 = this.getByteAt($v_1 + 2);
            $v_7 = SP.Base64EncodedByteArray.$H_0[($v_4 & 252) >> 2];
            $v_8 = SP.Base64EncodedByteArray.$H_0[(($v_4 & 3) << 4) | (($v_5 & 240) >> 4)];
            $v_9 = SP.Base64EncodedByteArray.$H_0[(($v_5 & 15) << 2) | (($v_6 & 192) >> 6)];
            $v_A = SP.Base64EncodedByteArray.$H_0[($v_6 & 63)];
            $v_0.append($v_7);
            $v_0.append($v_8);
            $v_0.append($v_9);
            $v_0.append($v_A);
        }
        switch ($v_2) {
            case 2:
                $v_4 = this.getByteAt($v_1);
                $v_5 = this.getByteAt($v_1 + 1);
                $v_7 = SP.Base64EncodedByteArray.$H_0[($v_4 & 252) >> 2];
                $v_8 = SP.Base64EncodedByteArray.$H_0[(($v_4 & 3) << 4) | (($v_5 & 240) >> 4)];
                $v_9 = SP.Base64EncodedByteArray.$H_0[($v_5 & 15) << 2];
                $v_A = SP.Base64EncodedByteArray.$H_0[64];
                $v_0.append($v_7);
                $v_0.append($v_8);
                $v_0.append($v_9);
                $v_0.append($v_A);
                break;
            case 1:
                $v_4 = this.getByteAt($v_1);
                $v_7 = SP.Base64EncodedByteArray.$H_0[($v_4 & 252) >> 2];
                $v_8 = SP.Base64EncodedByteArray.$H_0[($v_4 & 3) << 4];
                $v_9 = SP.Base64EncodedByteArray.$H_0[64];
                $v_A = SP.Base64EncodedByteArray.$H_0[64];
                $v_0.append($v_7);
                $v_0.append($v_8);
                $v_0.append($v_9);
                $v_0.append($v_A);
                break;
        }
        return $v_0.toString();
    },

    append: function(b) {
        ULSqiZ: ;
        if (!(this.$A_0 % 2)) {
            this.$2_0[this.$A_0 / 2 + 1] = 0;
        }
        this.$n_0(this.$A_0, b);
        this.$A_0++;
    },

    getByteAt: function(index) {
        ULSqiZ: ;
        if (index >= this.$A_0) {
            throw Error.argumentOutOfRange('index');
        }
        var $v_0 = Math.floor(index / 2);
        var $v_1 = this.$2_0[$v_0];
        var $v_2 = index % 2;
        if (!$v_2) {
            return ($v_1 & 255);
        } else {
            return (($v_1 & 65280) >> 8);
        }
    },

    setByteAt: function(index, b) {
        ULSqiZ: ;
        if (index >= this.$A_0) {
            throw Error.argumentOutOfRange('index');
        }
        this.$n_0(index, b);
    },

    $n_0: function($p0, $p1) {
        var $v_0 = Math.floor($p0 / 2);
        var $v_1 = this.$2_0[$v_0];
        var $v_2 = $p0 % 2;
        if (!$v_2) {
            $v_1 = ($v_1 & 65280) + ($p1 & 255);
        } else {
            $v_1 = ($p1 & 255) * 256 + ($v_1 & 255);
        }
        this.$2_0[$v_0] = $v_1;
    },

    fromJson: function(initValue) {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrUndefined(initValue)) {
            return;
        }
        if (SP.Base64EncodedByteArray.isInstanceOfType(initValue)) {
            var $v_0 = initValue;
            this.$A_0 = $v_0.$A_0;
            this.$2_0 = $v_0.$2_0;
        }
    },

    customFromJson: function(initValue) {
        ULSqiZ: ;
        return false;
    }
}


SP.ClientDictionaryResultHandler = function(dict) {
    ULSqiZ: ;
    this.$1e_0 = dict;
}
SP.ClientDictionaryResultHandler.prototype = {
    $1e_0: null,

    fromJson: function(obj) {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrUndefined(obj)) {
            return;
        }
        var $v_0 = obj;
        var $$dict_1_0 = $v_0;
        for (var $$key_1_1 in $$dict_1_0) {
            var $v_1 = {
                key: $$key_1_1,
                value: $$dict_1_0[$$key_1_1]
            };
            if (typeof($v_1.value) !== 'function' && $v_1.key !== '_ObjectType_') {
                this.$1e_0[$v_1.key] = $v_1.value;
            }
        }
    },

    customFromJson: function(obj) {
        ULSqiZ: ;
        return false;
    }
}


SP.ClientActionInstantiateObjectPathResult = function(path) {
    ULSqiZ: ;
    this.$X_0 = path;
}
SP.ClientActionInstantiateObjectPathResult.prototype = {
    $X_0: null,

    fromJson: function($p0) {
        if (!SP.ScriptUtility.isNullOrUndefined($p0) && typeof($p0) === 'object') {
            var $v_0 = false;
            if (typeof($p0.IsNull) === 'boolean') {
                $v_0 = $p0.IsNull;
            }
            this.$X_0.$w_0 = $v_0;
        }
    },

    customFromJson: function($p0) {
        return false;
    }
}


SP.ClientObjectCollectionResult = function(context, result) {
    ULSqiZ: ;
    this.$0_0 = context;
    this.$1H_0 = result;
}
SP.ClientObjectCollectionResult.prototype = {
    $1H_0: null,
    $0_0: null,

    fromJson: function($p0) {
        if (!SP.ScriptUtility.isNullOrUndefined($p0) && typeof($p0) === 'object') {
            if (Array.isInstanceOfType($p0)) {
                SP.DataConvert.populateArray(this.$0_0, this.$1H_0, $p0);
            } else {
                var $v_0 = $p0._Child_Items_;
                if (($v_0)) {
                    SP.DataConvert.populateArray(this.$0_0, this.$1H_0, $v_0);
                }
            }
        }
    },

    customFromJson: function($p0) {
        return false;
    }
}


SP.DataConvert = function() {}
SP.DataConvert.writePropertiesToXml = function(writer, obj, propNames, serializationContext) {
    ULSqiZ: ;
    for (var $v_0 = 0; $v_0 < propNames.length; $v_0++) {
        var $v_1 = propNames[$v_0];
        writer.writeStartElement('Property');
        writer.writeAttributeString('Name', $v_1);
        var $v_2 = SP.DataConvert.invokeGetProperty(obj, $v_1);
        SP.DataConvert.writeValueToXmlElement(writer, $v_2, serializationContext);
        writer.writeEndElement();
    }
}
SP.DataConvert.populateDictionaryFromObject = function(dict, parentNode) {
    ULSqiZ: ;
    if (SP.ScriptUtility.isNullOrUndefined(parentNode)) {
        return;
    }
    var $v_0 = parentNode;
    var $$dict_1_0 = $v_0;
    for (var $$key_1_1 in $$dict_1_0) {
        var $v_1 = {
            key: $$key_1_1,
            value: $$dict_1_0[$$key_1_1]
        };
        dict[$v_1.key] = $v_1.value;
    }
}
SP.DataConvert.fixupTypes = function(context, dict) {
    ULSqiZ: ;
    var $$dict_1_0 = dict;
    for (var $$key_1_1 in $$dict_1_0) {
        var $v_0 = {
            key: $$key_1_1,
            value: $$dict_1_0[$$key_1_1]
        };
        if (!SP.ScriptUtility.isNullOrUndefined($v_0.value) && typeof($v_0.value) === 'object') {
            var $v_1 = SP.DataConvert.fixupType(context, $v_0.value);
            dict[$v_0.key] = $v_1;
        }
    }
}
SP.DataConvert.populateArray = function(context, dest, jsonArrayFromServer) {
    ULSqiZ: ;
    if (SP.ScriptUtility.isNullOrUndefined(jsonArrayFromServer)) {
        return;
    }
    for (var $v_0 = 0; $v_0 < jsonArrayFromServer.length; $v_0++) {
        var $v_1 = jsonArrayFromServer[$v_0];
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            Array.add(dest, $v_1);
            continue;
        }
        var $v_2 = SP.DataConvert.fixupType(context, $v_1);
        Array.add(dest, $v_2);
    }
}
SP.DataConvert.fixupType = function(context, obj) {
    ULSqiZ: ;
    var $v_0 = obj;
    if (!SP.ScriptUtility.isNullOrUndefined(obj) && typeof(obj) === 'object') {
        var $v_1 = obj._ObjectType_;
        if (!SP.ScriptUtility.isNullOrUndefined($v_1)) {
            var $v_2 = Type.parse($v_1);
            $v_0 = new $v_2(context);
            if (SP.IFromJson.isInstanceOfType($v_0)) {
                var $v_3 = $v_0;
                if (!$v_3.customFromJson(obj)) {
                    $v_3.fromJson(obj);
                }
            }
        } else if (Array.isInstanceOfType(obj)) {
            var $v_4 = obj;
            for (var $v_5 = 0; $v_5 < $v_4.length; $v_5++) {
                $v_4[$v_5] = SP.DataConvert.fixupType(context, $v_4[$v_5]);
            }
        }
    }
    return $v_0;
}
SP.DataConvert.writeDictionaryToXml = function(writer, dict, topLevelElementTagName, keys, serializationContext) {
    ULSqiZ: ;
    if (!SP.ScriptUtility.isNullOrEmptyString(topLevelElementTagName)) {
        writer.writeStartElement(topLevelElementTagName);
    }
    var $$dict_1_0 = dict;
    for (var $$key_1_1 in $$dict_1_0) {
        var $v_0 = {
            key: $$key_1_1,
            value: $$dict_1_0[$$key_1_1]
        };
        if (!keys || Array.contains(keys, $v_0.key)) {
            writer.writeStartElement('Property');
            writer.writeAttributeString('Name', $v_0.key);
            var $v_1 = $v_0.value;
            SP.DataConvert.writeValueToXmlElement(writer, $v_1, serializationContext);
            writer.writeEndElement();
        }
    }
    if (!SP.ScriptUtility.isNullOrEmptyString(topLevelElementTagName)) {
        writer.writeEndElement();
    }
}
SP.DataConvert.writeValueToXmlElement = function(writer, objValue, serializationContext) {
    ULSqiZ: ;
    if (SP.ScriptUtility.isNullOrUndefined(objValue)) {
        writer.writeAttributeString('Type', 'Null');
    } else if (SP.ClientObject.isInstanceOfType(objValue)) {
        var $v_0 = objValue;
        if (!$v_0.get_path()) {
            throw Error.create(SP.Res.noObjectPathAssociatedWithObject);
        }
        writer.writeAttributeString('ObjectPathId', $v_0.get_path().$1_0.toString());
        serializationContext.addClientObject($v_0);
    } else if (SP.ClientValueObject.isInstanceOfType(objValue)) {
        var $v_1 = objValue;
        writer.writeAttributeString('TypeId', $v_1.get_typeId());
        if (!$v_1.customWriteToXml(writer, serializationContext)) {
            $v_1.writeToXml(writer, serializationContext);
        }
    } else {
        if (Object.getType(objValue) === Array) {
            writer.writeAttributeString('Type', 'Array');
            var $v_2 = objValue;
            for (var $v_3 = 0; $v_3 < $v_2.length; $v_3++) {
                var $v_4 = $v_2[$v_3];
                writer.writeStartElement('Object');
                SP.DataConvert.writeValueToXmlElement(writer, $v_4, serializationContext);
                writer.writeEndElement();
            }
        } else if (Object.getType(objValue) === Date) {
            writer.writeAttributeString('Type', 'DateTime');
            var $v_5 = objValue;
            var $v_6 = SP.DataConvert.getDateTimeKind($v_5);
            var $v_7;
            if (!$v_6) {
                var $v_8 = $v_5.getMonth() + 1;
                $v_7 = SP.DataConvert.$7_0($v_5.getFullYear().toString(), 4) + '-' + SP.DataConvert.$7_0($v_8.toString(), 2) + '-' + SP.DataConvert.$7_0($v_5.getDate().toString(), 2) + 'T' + SP.DataConvert.$7_0($v_5.getHours().toString(), 2) + ':' + SP.DataConvert.$7_0($v_5.getMinutes().toString(), 2) + ':' + SP.DataConvert.$7_0($v_5.getSeconds().toString(), 2) + '.' + SP.DataConvert.$7_0($v_5.getMilliseconds().toString(), 3);
            } else if ($v_6 === 2) {
                var $v_9 = $v_5.getMonth() + 1;
                $v_7 = SP.DataConvert.$7_0($v_5.getFullYear().toString(), 4) + '-' + SP.DataConvert.$7_0($v_9.toString(), 2) + '-' + SP.DataConvert.$7_0($v_5.getDate().toString(), 2) + 'T' + SP.DataConvert.$7_0($v_5.getHours().toString(), 2) + ':' + SP.DataConvert.$7_0($v_5.getMinutes().toString(), 2) + ':' + SP.DataConvert.$7_0($v_5.getSeconds().toString(), 2) + '.' + SP.DataConvert.$7_0($v_5.getMilliseconds().toString(), 3);
                var $v_A = $v_5.getTimezoneOffset() / 60;
                var $v_B = ($v_A <= 0) ? '+' : '-';
                $v_7 = $v_7 + $v_B + SP.DataConvert.$7_0(Math.floor(Math.abs($v_A)).toString(), 2) + ':' + SP.DataConvert.$7_0(Math.abs($v_5.getTimezoneOffset() % 60).toString(), 2);
            } else {
                var $v_C = $v_5.getUTCMonth() + 1;
                $v_7 = SP.DataConvert.$7_0($v_5.getUTCFullYear().toString(), 4) + '-' + SP.DataConvert.$7_0($v_C.toString(), 2) + '-' + SP.DataConvert.$7_0($v_5.getUTCDate().toString(), 2) + 'T' + SP.DataConvert.$7_0($v_5.getUTCHours().toString(), 2) + ':' + SP.DataConvert.$7_0($v_5.getUTCMinutes().toString(), 2) + ':' + SP.DataConvert.$7_0($v_5.getUTCSeconds().toString(), 2) + '.' + SP.DataConvert.$7_0($v_5.getUTCMilliseconds().toString(), 3) + 'Z';
            }
            writer.writeString($v_7);
        } else if (Object.getType(objValue) === String) {
            writer.writeAttributeString('Type', 'String');
            writer.writeString(objValue.toString());
        } else if (Object.getType(objValue) === SP.Guid) {
            writer.writeAttributeString('Type', 'Guid');
            writer.writeString((objValue).toString('B'));
        } else if (Object.getType(objValue) === SP.Base64EncodedByteArray) {
            writer.writeAttributeString('Type', 'Base64Binary');
            writer.writeString((objValue).toBase64String());
        } else if (typeof(objValue) === 'number') {
            writer.writeAttributeString('Type', 'Number');
            writer.writeString(objValue.toString());
        } else if (typeof(objValue) === 'object') {
            writer.writeAttributeString('Type', 'Dictionary');
            var $v_D = objValue;
            var $$dict_3_0 = $v_D;
            for (var $$key_3_1 in $$dict_3_0) {
                var $v_E = {
                    key: $$key_3_1,
                    value: $$dict_3_0[$$key_3_1]
                };
                var $v_F = $v_E.value;
                if (SP.DataConvert.$26_0($v_F)) {
                    writer.writeStartElement('Property');
                    writer.writeAttributeString('Name', $v_E.key);
                    SP.DataConvert.writeValueToXmlElement(writer, $v_E.value, serializationContext);
                    writer.writeEndElement();
                }
            }
        } else if (typeof(objValue) === 'boolean') {
            writer.writeAttributeString('Type', 'Boolean');
            writer.writeString((objValue) ? 'true' : 'false');
        } else {
            writer.writeAttributeString('Type', 'Unspecified');
            writer.writeString(objValue.toString());
        }
    }
}
SP.DataConvert.$26_0 = function($p0) {
    if (SP.ScriptUtility.isNullOrUndefined($p0)) {
        return true;
    }
    if (SP.ClientObject.isInstanceOfType($p0) || SP.ClientValueObject.isInstanceOfType($p0)) {
        return true;
    }
    var $v_0 = Object.getType($p0);
    if ($v_0 === Array || $v_0 === Date || $v_0 === SP.Guid) {
        return true;
    }
    var $v_1 = typeof($p0);
    if ($v_1 === 'number' || $v_1 === 'string' || $v_1 === 'boolean') {
        return true;
    }
    return false;
}
SP.DataConvert.$7_0 = function($p0, $p1) {
    if ($p0.length >= $p1) {
        return $p0;
    }
    if ($p1 - $p0.length >= SP.DataConvert.$1S_0.length) {
        throw Error.argumentOutOfRange('len');
    }
    return SP.DataConvert.$1S_0[$p1 - $p0.length] + $p0;
}
SP.DataConvert.$1q_0 = function($p0) {
    var $v_0;
    var $v_1 = 0;
    for (var $v_2 = 0; $v_2 < $p0.length && $p0.charCodeAt($v_2) >= 65 && $p0.charCodeAt($v_2) <= 90; $v_2++) {
        $v_1++;
    }
    if (!$v_1) {
        $v_0 = $p0;
    } else if ($v_1 === $p0.length) {
        $v_0 = $p0.toLowerCase();
    } else {
        $v_0 = $p0.substr(0, $v_1).toLowerCase() + $p0.substr($v_1);
    }
    return $v_0;
}
SP.DataConvert.invokeSetProperty = function(obj, propName, propValue) {
    ULSqiZ: ;
    var $v_0 = SP.DataConvert.$1q_0(propName);
    obj['set_' + $v_0](propValue);
}
SP.DataConvert.invokeGetProperty = function(obj, propName) {
    ULSqiZ: ;
    var $v_0 = SP.DataConvert.$1q_0(propName);
    var $v_1 = obj['get_' + $v_0]();
    return $v_1;
}
SP.DataConvert.specifyDateTimeKind = function(datetime, kind) {
    ULSqiZ: ;
    datetime.kind = kind;
}
SP.DataConvert.getDateTimeKind = function(datetime) {
    ULSqiZ: ;
    var $v_0 = datetime.kind;
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        return 2;
    }
    return $v_0;
}
SP.DataConvert.createUnspecifiedDateTime = function(year, month, day, hour, minute, second, milliseconds) {
    ULSqiZ: ;
    var $v_0 = new Date(year, month, day, hour, minute, second, milliseconds);
    SP.DataConvert.specifyDateTimeKind($v_0, 0);
    return $v_0;
}
SP.DataConvert.createUtcDateTime = function(milliseconds) {
    ULSqiZ: ;
    var $v_0 = new Date(milliseconds);
    SP.DataConvert.specifyDateTimeKind($v_0, 1);
    return $v_0;
}
SP.DataConvert.createLocalDateTime = function(milliseconds) {
    ULSqiZ: ;
    var $v_0 = new Date(milliseconds);
    SP.DataConvert.specifyDateTimeKind($v_0, 2);
    return $v_0;
}


SP.PageRequestFailedEventArgs = function(executor, errorMessage) {
    ULSqiZ: ;
    SP.PageRequestFailedEventArgs.initializeBase(this);
    this.$e_1 = executor;
    this.$d_1 = errorMessage;
}
SP.PageRequestFailedEventArgs.prototype = {
    $d_1: null,
    $e_1: null,

    get_executor: function() {
        ULSqiZ: ;
        return this.$e_1;
    },

    get_errorMessage: function() {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrEmptyString(this.$d_1)) {
            return 'Cannot complete the request.';
        }
        return this.$d_1;
    },

    get_isErrorPage: function() {
        ULSqiZ: ;
        if (this.$e_1.get_statusCode() !== 200) {
            return true;
        }
        var $v_0 = this.$e_1.getResponseHeader('SharePointError');
        if (!SP.ScriptUtility.isNullOrEmptyString($v_0)) {
            return true;
        }
        return false;
    }
}


SP.PageRequestSucceededEventArgs = function(executor) {
    ULSqiZ: ;
    SP.PageRequestSucceededEventArgs.initializeBase(this);
    this.$e_1 = executor;
}
SP.PageRequestSucceededEventArgs.prototype = {
    $e_1: null,

    get_executor: function() {
        ULSqiZ: ;
        return this.$e_1;
    }
}


SP.PageRequest = function() {
    ULSqiZ: ;
    this.$11 = Function.createDelegate(this, this.$2F_0);
}
SP.PageRequest.doPost = function(url, body, expectedContentType, succeededHandler, failedHandler) {
    ULSqiZ: ;
    var $v_0 = new SP.PageRequest();
    if (succeededHandler) {
        $v_0.add_succeeded(succeededHandler);
    }
    if (failedHandler) {
        $v_0.add_failed(failedHandler);
    }
    $v_0.set_url(url);
    $v_0.set_expectedContentType(expectedContentType);
    $v_0.post(body);
}
SP.PageRequest.doGet = function(url, expectedContentType, succeededHandler, failedHandler) {
    ULSqiZ: ;
    var $v_0 = new SP.PageRequest();
    if (succeededHandler) {
        $v_0.add_succeeded(succeededHandler);
    }
    if (failedHandler) {
        $v_0.add_failed(failedHandler);
    }
    $v_0.set_url(url);
    $v_0.set_expectedContentType(expectedContentType);
    $v_0.get();
}
SP.PageRequest.prototype = {
    $8_0: null,

    get_request: function() {
        ULSqiZ: ;
        if (!this.$8_0) {
            this.$8_0 = new Sys.Net.WebRequest();
        }
        return this.$8_0;
    },

    get_url: function() {
        ULSqiZ: ;
        return this.get_request().get_url();
    },
    set_url: function(value) {
        ULSqiZ: ;
        value = window.escapeUrlForCallback(value);
        this.get_request().set_url(value);
        return value;
    },

    $1C_0: null,

    get_expectedContentType: function() {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrEmptyString(this.$1C_0)) {
            return 'html';
        }
        return this.$1C_0;
    },
    set_expectedContentType: function(value) {
        ULSqiZ: ;
        this.$1C_0 = value;
        return value;
    },

    post: function(body) {
        ULSqiZ: ;
        this.get_request().set_httpVerb('POST');
        this.get_request().set_body(body);
        SP.ClientRequest.$1T(this.get_request());
        this.get_request().add_completed(this.$11);
        this.get_request().invoke();
    },

    get: function() {
        ULSqiZ: ;
        this.get_request().set_httpVerb('GET');
        SP.ClientRequest.$1T(this.get_request());
        this.get_request().add_completed(this.$11);
        this.get_request().invoke();
    },

    $C_0: null,

    get_$E_0: function() {
        ULSqiZ: ;
        if (!this.$C_0) {
            this.$C_0 = new Sys.EventHandlerList();
        }
        return this.$C_0;
    },

    add_succeeded: function(value) {
        ULSqiZ: ;
        this.get_$E_0().addHandler('succeeded', value);
    },
    remove_succeeded: function(value) {
        ULSqiZ: ;
        this.get_$E_0().removeHandler('succeeded', value);
    },

    add_failed: function(value) {
        ULSqiZ: ;
        this.get_$E_0().addHandler('failed', value);
    },
    remove_failed: function(value) {
        ULSqiZ: ;
        this.get_$E_0().removeHandler('failed', value);
    },

    $2F_0: function($p0) {
        var $v_0 = null;
        var $v_1 = null;
        if (this.$C_0) {
            $v_1 = this.$C_0.getHandler('succeeded');
            $v_0 = this.$C_0.getHandler('failed');
        }
        var $v_2 = SP.ClientRequest.$1b($p0, this.get_expectedContentType());
        if ($v_2) {
            if ($v_0) {
                $v_0(this, new SP.PageRequestFailedEventArgs($p0, $v_2));
            } else {
                alert($v_2);
            }
        } else {
            if ($v_1) {
                $v_1(this, new SP.PageRequestSucceededEventArgs($p0));
            }
        }
        this.$C_0 = null;
    }
}


SP.ClientConstants = function() {}


SP.ClientSchemaVersions = function() {}


SP.ClientErrorCodes = function() {}


SP.ClientAction = function(objectPath, name) {
    ULSqiZ: ;
    this.$I_0 = objectPath;
    this.$B_0 = name;
    this.$1_0 = SP.ClientRequest.get_nextSequenceId();
}
SP.ClientAction.prototype = {
    $1_0: 0,
    $I_0: null,
    $B_0: null,

    get_id: function() {
        ULSqiZ: ;
        return this.$1_0;
    },

    get_path: function() {
        ULSqiZ: ;
        return this.$I_0;
    },

    get_name: function() {
        ULSqiZ: ;
        return this.$B_0;
    }
}


SP.ClientActionSetProperty = function(obj, propName, propValue) {
    ULSqiZ: ;
    SP.ClientActionSetProperty.initializeBase(this, [(!obj) ? null : obj.get_path(), propName]);
    if (!obj) {
        throw Error.argumentNull('obj');
    }
    if (!obj.get_path() || !obj.get_path().$V_0) {
        throw Error.create(SP.Res.noObjectPathAssociatedWithObject);
    }
    this.$1m_1 = propName;
    this.$f_1 = propValue;
    this.$5_1 = new SP.SerializationContext();
    var $v_0;
    this.$6_1 = new Sys.StringBuilder();
    $v_0 = SP.XmlWriter.create(this.$6_1);
    this.$Z_1($v_0, this.$5_1);
    $v_0.close();
    this.$f_1 = null;
}
SP.ClientActionSetProperty.prototype = {
    $1m_1: null,
    $f_1: null,
    $5_1: null,
    $6_1: null,

    $22: function($p0, $p1) {
        $p0.writeRaw(this.$6_1.toString());
        $p1.$S(this.$5_1);
    },

    $Z_1: function($p0, $p1) {
        $p0.writeStartElement('SetProperty');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('ObjectPathId', this.$I_0.$1_0.toString());
        $p0.writeAttributeString('Name', this.$1m_1);
        $p1.addObjectPath(this.$I_0);
        $p0.writeStartElement('Parameter');
        SP.DataConvert.writeValueToXmlElement($p0, this.$f_1, $p1);
        $p0.writeEndElement();
        $p0.writeEndElement();
    }
}


SP.ClientActionSetStaticProperty = function(typeId, propName, propValue) {
    ULSqiZ: ;
    SP.ClientActionSetStaticProperty.initializeBase(this, [null, propName]);
    this.$M_1 = typeId;
    this.$f_1 = propValue;
    this.$5_1 = new SP.SerializationContext();
    var $v_0;
    this.$6_1 = new Sys.StringBuilder();
    $v_0 = SP.XmlWriter.create(this.$6_1);
    this.$Z_1($v_0, this.$5_1);
    $v_0.close();
    this.$f_1 = null;
}
SP.ClientActionSetStaticProperty.prototype = {
    $M_1: null,
    $f_1: null,
    $5_1: null,
    $6_1: null,

    $22: function($p0, $p1) {
        $p0.writeRaw(this.$6_1.toString());
        $p1.$S(this.$5_1);
    },

    $Z_1: function($p0, $p1) {
        $p0.writeStartElement('SetStaticProperty');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('TypeId', this.$M_1);
        $p0.writeAttributeString('Name', this.$B_0);
        $p0.writeStartElement('Parameter');
        SP.DataConvert.writeValueToXmlElement($p0, this.$f_1, $p1);
        $p0.writeEndElement();
        $p0.writeEndElement();
    }
}


SP.ClientActionInvokeMethod = function(obj, methodName, parameters) {
    ULSqiZ: ;
    SP.ClientActionInvokeMethod.initializeBase(this, [obj.get_path(), methodName]);
    this.$3_1 = parameters;
    if (!obj.get_path() || !obj.get_path().$V_0) {
        throw Error.create(SP.Res.noObjectPathAssociatedWithObject);
    }
    this.$Y_1 = obj.$4_0.$Y_0;
    this.$5_1 = new SP.SerializationContext();
    var $v_0;
    this.$6_1 = new Sys.StringBuilder();
    $v_0 = SP.XmlWriter.create(this.$6_1);
    this.$Z_1($v_0, this.$5_1);
    $v_0.close();
    this.$3_1 = null;
}
SP.ClientActionInvokeMethod.prototype = {
    $3_1: null,
    $Y_1: null,
    $5_1: null,
    $6_1: null,

    $22: function($p0, $p1) {
        $p0.writeRaw(this.$6_1.toString());
        $p1.$S(this.$5_1);
    },

    $Z_1: function($p0, $p1) {
        $p0.writeStartElement('Method');
        $p0.writeAttributeString('Name', this.$B_0);
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('ObjectPathId', this.$I_0.$1_0.toString());
        if (!SP.ScriptUtility.isNullOrUndefined(this.$Y_1)) {
            $p0.writeAttributeString('Version', this.$Y_1);
        }
        $p1.addObjectPath(this.$I_0);
        if (this.$3_1 && this.$3_1.length > 0) {
            $p0.writeStartElement('Parameters');
            for (var $v_0 = 0; $v_0 < this.$3_1.length; $v_0++) {
                var $v_1 = this.$3_1[$v_0];
                $p0.writeStartElement('Parameter');
                SP.DataConvert.writeValueToXmlElement($p0, $v_1, $p1);
                $p0.writeEndElement();
            }
            $p0.writeEndElement();
        }
        $p0.writeEndElement();
    }
}


SP.ClientActionInvokeStaticMethod = function(typeId, methodName, parameters) {
    ULSqiZ: ;
    SP.ClientActionInvokeStaticMethod.initializeBase(this, [null, methodName]);
    this.$M_1 = typeId;
    this.$3_1 = parameters;
    this.$5_1 = new SP.SerializationContext();
    var $v_0;
    this.$6_1 = new Sys.StringBuilder();
    $v_0 = SP.XmlWriter.create(this.$6_1);
    this.$Z_1($v_0, this.$5_1);
    $v_0.close();
    this.$3_1 = null;
}
SP.ClientActionInvokeStaticMethod.prototype = {
    $3_1: null,
    $M_1: null,
    $5_1: null,
    $6_1: null,

    $22: function($p0, $p1) {
        $p0.writeRaw(this.$6_1.toString());
        $p1.$S(this.$5_1);
    },

    $Z_1: function($p0, $p1) {
        $p0.writeStartElement('StaticMethod');
        $p0.writeAttributeString('TypeId', this.$M_1);
        $p0.writeAttributeString('Name', this.$B_0);
        $p0.writeAttributeString('Id', this.$1_0.toString());
        if (this.$3_1 && this.$3_1.length > 0) {
            $p0.writeStartElement('Parameters');
            for (var $v_0 = 0; $v_0 < this.$3_1.length; $v_0++) {
                var $v_1 = this.$3_1[$v_0];
                $p0.writeStartElement('Parameter');
                SP.DataConvert.writeValueToXmlElement($p0, $v_1, $p1);
                $p0.writeEndElement();
            }
            $p0.writeEndElement();
        }
        $p0.writeEndElement();
    }
}


SP.ClientActionInstantiateObjectPath = function(path) {
    ULSqiZ: ;
    SP.ClientActionInstantiateObjectPath.initializeBase(this, [path, null]);
}
SP.ClientActionInstantiateObjectPath.prototype = {

    $22: function($p0, $p1) {
        $p0.writeStartElement('ObjectPath');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('ObjectPathId', this.$I_0.$1_0.toString());
        $p1.addObjectPath(this.$I_0);
        $p0.writeEndElement();
    }
}


SP.ClientObject = function(context, objectPath) {
    ULSqiZ: ;
    if (!context) {
        throw Error.argumentNull('context');
    }
    this.$0_0 = context;
    this.$4_0 = new SP.ClientObjectData();
    this.$4_0.$X_0 = objectPath;
}
SP.ClientObject.prototype = {
    $0_0: null,
    $4_0: null,

    get_context: function() {
        ULSqiZ: ;
        return this.$0_0;
    },

    get_path: function() {
        ULSqiZ: ;
        return this.$4_0.$X_0;
    },

    get_objectVersion: function() {
        ULSqiZ: ;
        return this.$4_0.$Y_0;
    },
    set_objectVersion: function(value) {
        ULSqiZ: ;
        this.$4_0.$Y_0 = value;
        return value;
    },

    get_objectData: function() {
        ULSqiZ: ;
        return this.$4_0;
    },

    checkUninitializedProperty: function(propName) {
        ULSqiZ: ;
        var $v_0 = this.$4_0.get_properties()[propName];
        if (SP.ScriptUtility.isUndefined($v_0)) {
            throw Error.create(SP.Res.propertyHasNotBeenInitialized);
        }
    },

    $1U: function($p0) {
        this.$4_0 = $p0.$4_0;
    },

    fromJson: function(initValue) {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrUndefined(initValue)) {
            this.$2H();
            return;
        }
        this.initPropertiesFromJson(initValue);
        this.initNonPropertiesFromJson(initValue);
    },

    initPropertiesFromJson: function(initValue) {
        ULSqiZ: ;
        var $v_0 = initValue._ObjectIdentity_;
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            var $v_1 = $v_0;
            if (!SP.ScriptUtility.isNullOrEmptyString($v_1)) {
                var $v_2 = new SP.ObjectPathIdentity(this.$0_0, $v_1);
                if (this.$4_0.$X_0) {
                    $v_2.$1_0 = this.$4_0.$X_0.$1_0;
                }
                this.$4_0.$X_0 = $v_2;
                $v_2.$w_0 = false;
                this.$0_0.$1X($v_2);
            }
            delete initValue._ObjectIdentity_;
        }
        $v_0 = initValue._ObjectVersion_;
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            var $v_3 = $v_0;
            if (!SP.ScriptUtility.isNullOrEmptyString($v_3)) {
                this.$4_0.$Y_0 = $v_3;
            }
            delete initValue._ObjectVersion_;
        }
        delete initValue._ObjectType_;
    },

    initNonPropertiesFromJson: function(initValue) {},

    customFromJson: function(initValue) {
        ULSqiZ: ;
        return false;
    },

    retrieve: function() {
        ULSqiZ: ;
        var $v_0 = this.get_$h();
        if (!arguments.length) {
            $v_0.selectAllProperties();
        } else {
            if (arguments.length === 1 && Array.isInstanceOfType(arguments[0])) {
                var $v_1 = arguments[0];
                for (var $v_2 = 0; $v_2 < $v_1.length; $v_2++) {
                    var $v_3 = $v_1[$v_2];
                    $v_0.select($v_3);
                }
            } else {
                for (var $v_4 = 0; $v_4 < arguments.length; $v_4++) {
                    var $v_5 = arguments[$v_4];
                    $v_0.select($v_5);
                }
            }
        }
    },

    refreshLoad: function() {
        ULSqiZ: ;
        var $v_0 = this.get_$h();
        this.$1x_0($v_0);
    },

    isPropertyAvailable: function(propertyName) {
        ULSqiZ: ;
        var $v_0 = this.$4_0.get_properties()[propertyName];
        return (!SP.ScriptUtility.isUndefined($v_0));
    },

    isObjectPropertyInstantiated: function(propertyName) {
        ULSqiZ: ;
        var $v_0 = this.$4_0.get_clientObjectProperties()[propertyName];
        return (!SP.ScriptUtility.isUndefined($v_0));
    },

    get_$h: function() {
        ULSqiZ: ;
        var $v_0 = this.$4_0.$9_0;
        if (!$v_0 || $v_0 !== this.$0_0.get_pendingRequest().$W_0) {
            $v_0 = new SP.ClientQueryInternal(this, null, false, null);
            this.$4_0.$9_0 = $v_0;
            this.$0_0.addQueryIdAndResultObject($v_0.$1_0, this);
            this.$0_0.addQuery($v_0);
            this.$0_0.$1Y(this);
            this.$1x_0($v_0);
            this.loadExpandoFields();
        }
        return $v_0;
    },

    $1x_0: function($p0) {
        var $$dict_1_0 = this.$4_0.get_properties();
        for (var $$key_1_1 in $$dict_1_0) {
            var $v_0 = {
                key: $$key_1_1,
                value: $$dict_1_0[$$key_1_1]
            };
            $p0.select($v_0.key);
        }
    },

    loadExpandoFields: function() {},

    $13: function() {
        ULSqiZ: ;
        this.$4_0.$9_0 = null;
    },

    $O_0: null,

    removeFromParentCollection: function() {
        ULSqiZ: ;
        if (this.$O_0) {
            this.$O_0.removeChild(this);
        }
    },

    $1o_0: false,

    $2H: function() {
        ULSqiZ: ;
        this.$1o_0 = true;
    },

    get_serverObjectIsNull: function() {
        ULSqiZ: ;
        if (this.$1o_0) {
            return true;
        }
        var $v_0 = this.get_path();
        if (!$v_0) {
            return false;
        }
        return $v_0.$w_0;
    }
}


SP.ClientObjectData = function() {}
SP.ClientObjectData.prototype = {
    $Y_0: null,
    $G_0: null,

    get_properties: function() {
        ULSqiZ: ;
        if (!this.$G_0) {
            this.$G_0 = {};
        }
        return this.$G_0;
    },

    $17_0: null,

    get_clientObjectProperties: function() {
        ULSqiZ: ;
        if (!this.$17_0) {
            this.$17_0 = {};
        }
        return this.$17_0;
    },

    $1F_0: null,

    get_methodReturnObjects: function() {
        ULSqiZ: ;
        if (!this.$1F_0) {
            this.$1F_0 = {};
        }
        return this.$1F_0;
    },

    $9_0: null,
    $N_0: null,
    $X_0: null
}


SP.ClientObjectCollection = function(context, objectPath) {
    ULSqiZ: ;
    SP.ClientObjectCollection.initializeBase(this, [context, objectPath]);
}
SP.ClientObjectCollection.prototype = {
    $p_1: null,

    retrieveItems: function() {
        ULSqiZ: ;
        if (!this.$p_1) {
            this.$p_1 = new SP.ClientObjectPrototype(this.get_$h(), true);
        }
        return this.$p_1;
    },

    $13: function() {
        ULSqiZ: ;
        SP.ClientObjectCollection.callBaseMethod(this, '$13');
        this.$p_1 = null;
    },

    getEnumerator: function() {
        ULSqiZ: ;
        this.$1y();
        return new SP.ArrayListEnumerator(this.get_data());
    },

    getItemAtIndex: function(i) {
        ULSqiZ: ;
        var $v_0 = this.get_data()[i];
        return $v_0;
    },

    get_count: function() {
        ULSqiZ: ;
        this.$1y();
        return this.get_data().length;
    },

    $19_1: false,

    $1y: function() {
        ULSqiZ: ;
        if (!this.$19_1) {
            throw Error.create(SP.Res.collectionHasNotBeenInitialized);
        }
    },

    $2_1: null,

    get_data: function() {
        ULSqiZ: ;
        if (!this.$2_1) {
            this.$2_1 = [];
        }
        return this.$2_1;
    },

    fromJson: function(obj) {
        ULSqiZ: ;
        SP.ClientObjectCollection.callBaseMethod(this, 'fromJson', [obj]);
        var $v_0;
        $v_0 = obj._Child_Items_;
        if (($v_0)) {
            this.$2_1 = [];
            this.$19_1 = true;
            SP.DataConvert.populateArray(this.$0_0, this.$2_1, $v_0);
            for (var $v_1 = 0; $v_1 < this.$2_1.length; $v_1++) {
                if (SP.ClientObject.isInstanceOfType(this.$2_1[$v_1])) {
                    var $v_2 = this.$2_1[$v_1];
                    $v_2.$O_0 = this;
                }
            }
        }
    },

    addChild: function(obj) {
        ULSqiZ: ;
        Array.add(this.get_data(), obj);
        if (!obj.$O_0) {
            obj.$O_0 = this;
        }
        this.$19_1 = true;
    },

    removeChild: function(obj) {
        ULSqiZ: ;
        if (!this.$2_1) {
            return;
        }
        var $v_0 = null;
        if (SP.ObjectPathIdentity.isInstanceOfType(obj.get_path())) {
            $v_0 = obj.get_path();
        }
        for (var $v_1 = this.$2_1.length - 1; $v_1 >= 0; $v_1--) {
            if (this.$2_1[$v_1] === obj) {
                if ((this.$2_1[$v_1]).$O_0 === this) {
                    (this.$2_1[$v_1]).$O_0 = null;
                }
                Array.removeAt(this.$2_1, $v_1);
            } else if ($v_0 && SP.ClientObject.isInstanceOfType(this.$2_1[$v_1]) && SP.ObjectPathIdentity.isInstanceOfType((this.$2_1[$v_1]).get_path()) && $v_0.$k_1 === ((this.$2_1[$v_1]).get_path()).$k_1) {
                if ((this.$2_1[$v_1]).$O_0 === this) {
                    (this.$2_1[$v_1]).$O_0 = null;
                }
                Array.removeAt(this.$2_1, $v_1);
            }
        }
    }
}


SP.ClientObjectPrototype = function(query, childItem) {
    ULSqiZ: ;
    this.$9_0 = query;
    this.$b_0 = childItem;
}
SP.ClientObjectPrototype.prototype = {
    $9_0: null,
    $b_0: false,

    retrieve: function() {
        ULSqiZ: ;
        if (this.$b_0) {
            if (!arguments.length) {
                this.$9_0.get_childItemQuery().selectAllProperties();
            } else {
                if (arguments.length === 1 && Array.isInstanceOfType(arguments[0])) {
                    var $v_0 = arguments[0];
                    for (var $v_1 = 0; $v_1 < $v_0.length; $v_1++) {
                        var $v_2 = $v_0[$v_1];
                        this.$9_0.get_childItemQuery().select($v_2);
                    }
                } else {
                    for (var $v_3 = 0; $v_3 < arguments.length; $v_3++) {
                        var $v_4 = arguments[$v_3];
                        this.$9_0.get_childItemQuery().select($v_4);
                    }
                }
            }
        } else {
            if (!arguments.length) {
                this.$9_0.selectAllProperties();
            } else {
                if (arguments.length === 1 && Array.isInstanceOfType(arguments[0])) {
                    var $v_5 = arguments[0];
                    for (var $v_6 = 0; $v_6 < $v_5.length; $v_6++) {
                        var $v_7 = $v_5[$v_6];
                        this.$9_0.select($v_7);
                    }
                } else {
                    for (var $v_8 = 0; $v_8 < arguments.length; $v_8++) {
                        var $v_9 = arguments[$v_8];
                        this.$9_0.select($v_9);
                    }
                }
            }
        }
    },

    $y_0: null,

    retrieveObject: function(propertyName) {
        ULSqiZ: ;
        if (!this.$y_0) {
            this.$y_0 = {};
        }
        var $v_0 = this.$y_0[propertyName];
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        var $v_1 = false;
        var $v_2;
        if (this.$b_0) {
            $v_2 = this.$9_0.get_childItemQuery().$i(propertyName);
        } else {
            $v_2 = this.$9_0.$i(propertyName);
        }
        if (!$v_2) {
            $v_2 = new SP.ClientQueryInternal(null, propertyName, true, this.$9_0);
            $v_1 = true;
        }
        $v_0 = new SP.ClientObjectPrototype($v_2, false);
        if ($v_1) {
            if (this.$b_0) {
                this.$9_0.get_childItemQuery().selectSubQuery($v_2);
            } else {
                this.$9_0.selectSubQuery($v_2);
            }
        }
        this.$y_0[propertyName] = $v_0;
        return $v_0;
    },

    $x_0: null,

    retrieveCollectionObject: function(propertyName) {
        ULSqiZ: ;
        if (!this.$x_0) {
            this.$x_0 = {};
        }
        var $v_0 = this.$x_0[propertyName];
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        var $v_1 = false;
        var $v_2;
        if (this.$b_0) {
            $v_2 = this.$9_0.get_childItemQuery().$i(propertyName);
        } else {
            $v_2 = this.$9_0.$i(propertyName);
        }
        if (!$v_2) {
            $v_2 = new SP.ClientQueryInternal(null, propertyName, true, this.$9_0);
            $v_1 = true;
        }
        $v_0 = new SP.ClientObjectCollectionPrototype($v_2, false);
        if ($v_1) {
            if (this.$b_0) {
                this.$9_0.get_childItemQuery().selectSubQuery($v_2);
            } else {
                this.$9_0.selectSubQuery($v_2);
            }
        }
        this.$x_0[propertyName] = $v_0;
        return $v_0;
    }
}


SP.ClientObjectCollectionPrototype = function(query, childItem) {
    ULSqiZ: ;
    SP.ClientObjectCollectionPrototype.initializeBase(this, [query, childItem]);
}
SP.ClientObjectCollectionPrototype.prototype = {
    $1E_1: null,

    retrieveItems: function() {
        ULSqiZ: ;
        if (!this.$1E_1) {
            this.$1E_1 = new SP.ClientObjectPrototype(this.$9_0, true);
        }
        return this.$1E_1;
    }
}


SP.ClientQueryProperty = function() {}
SP.ClientQueryProperty.prototype = {
    scalarProperty: false,
    scalarPropertySet: false,
    selectAll: false,
    selectAllSet: false,
    query: null
}


SP.ClientQueryInternal = function(obj, name, subQuery, parentQuery) {
    ULSqiZ: ;
    this.$G_1 = {};
    this.$2E_1 = [];
    SP.ClientQueryInternal.initializeBase(this, [(subQuery) ? null : obj.get_path(), name]);
    if (!subQuery && (!obj.get_path() || !obj.get_path().$V_0)) {
        throw Error.create(SP.Res.noObjectPathAssociatedWithObject);
    }
    if (subQuery) {
        if (!parentQuery) {
            throw Error.argumentNull('parentQuery');
        }
        this.$1I_1 = parentQuery.$1I_1;
        this.$0_1 = parentQuery.$0_1;
    } else {
        if (!obj) {
            throw Error.argumentNull('obj');
        }
        this.$1I_1 = this;
        this.$0_1 = obj.$0_0;
    }
}
SP.ClientQueryInternal.prototype = {
    $1I_1: null,
    $0_1: null,
    $c_1: null,
    $o_1: false,

    get_isChildItemQuery: function() {
        ULSqiZ: ;
        return this.$o_1;
    },

    $2I: function() {
        ULSqiZ: ;
        this.$o_1 = true;
    },

    select: function($p0) {
        if (SP.ScriptUtility.isNullOrEmptyString($p0)) {
            throw Error.argument('propertyName', SP.Res.requestEmptyQueryName);
        }
        var $v_0 = this.$G_1[$p0];
        if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
            $v_0 = new SP.ClientQueryProperty();
            this.$G_1[$p0] = $v_0;
        } else {
            if ($v_0.query) {
                throw Error.argument('propertyName');
            }
        }
        $v_0.scalarProperty = true;
        $v_0.scalarPropertySet = true;
        return this;
    },

    selectWithAll: function($p0) {
        if (SP.ScriptUtility.isNullOrEmptyString($p0)) {
            throw Error.argument('propertyName', SP.Res.requestEmptyQueryName);
        }
        var $v_0 = this.$G_1[$p0];
        if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
            $v_0 = new SP.ClientQueryProperty();
            this.$G_1[$p0] = $v_0;
        }
        $v_0.selectAllSet = true;
        $v_0.selectAll = true;
        return this;
    },

    $1n_1: false,

    selectAllProperties: function() {
        ULSqiZ: ;
        this.$1n_1 = true;
        return this;
    },

    selectSubQuery: function($p0) {
        if (SP.ScriptUtility.isNullOrEmptyString($p0.$B_0)) {
            throw Error.argument('subQuery', SP.Res.requestEmptyQueryName);
        }
        var $v_0 = this.$G_1[$p0.$B_0];
        if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
            $v_0 = new SP.ClientQueryProperty();
            $v_0.query = $p0;
            this.$G_1[$p0.$B_0] = $v_0;
        } else {
            if ($v_0.scalarPropertySet && $v_0.scalarProperty) {
                throw Error.argument('subQuery');
            }
            if ($v_0.query && $v_0.query !== $p0) {
                throw Error.argument('subQuery');
            }
            $v_0.query = $p0;
        }
        return this;
    },

    $i: function($p0) {
        if (SP.ScriptUtility.isNullOrEmptyString($p0)) {
            throw Error.argumentNull('name');
        }
        var $v_0 = this.$G_1[$p0];
        if ($v_0) {
            return $v_0.query;
        }
        return null;
    },

    get_childItemQuery: function() {
        ULSqiZ: ;
        if (!this.$c_1) {
            this.$c_1 = new SP.ClientQueryInternal(null, '_Child_Items_', true, this);
            this.$c_1.$2I();
        }
        return this.$c_1;
    },

    $20: function($p0, $p1) {
        $p0.writeStartElement('Query');
        this.$1z($p0, $p1);
        $p0.writeEndElement();
        if (this.$c_1) {
            $p0.writeStartElement('ChildItemQuery');
            this.$c_1.$1z($p0, $p1);
            $p0.writeEndElement();
        }
    },

    $1z: function($p0, $p1) {
        $p0.writeAttributeString('SelectAllProperties', (this.$1n_1) ? 'true' : 'false');
        $p0.writeStartElement('Properties');
        var $$dict_1_0 = this.$G_1;
        for (var $$key_1_1 in $$dict_1_0) {
            var $v_0 = {
                key: $$key_1_1,
                value: $$dict_1_0[$$key_1_1]
            };
            var $v_1 = $v_0.key;
            var $v_2 = this.$G_1[$v_1];
            $p0.writeStartElement('Property');
            $p0.writeAttributeString('Name', $v_1);
            if ($v_2.scalarPropertySet) {
                $p0.writeAttributeString('ScalarProperty', ($v_2.scalarProperty) ? 'true' : 'false');
            }
            if ($v_2.selectAllSet) {
                $p0.writeAttributeString('SelectAll', ($v_2.selectAll) ? 'true' : 'false');
            }
            if ($v_2.query) {
                $v_2.query.$20($p0, $p1);
            }
            $p0.writeEndElement();
        }
        $p0.writeEndElement();
        if (this.$o_1) {}
    },

    $22: function($p0, $p1) {
        $p0.writeStartElement('Query');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('ObjectPathId', this.$I_0.$1_0.toString());
        $p1.addObjectPath(this.$I_0);
        this.$20($p0, $p1);
        $p0.writeEndElement();
    }
}


SP.ClientRequest = function(context) {
    ULSqiZ: ;
    this.$1W = Function.createDelegate(this, this.$29_0);
    this.$P_0 = 0;
    this.$v_0 = [];
    this.$l_0 = {};
    if (!context) {
        throw Error.argumentNull('context');
    }
    this.$0_0 = context;
}
SP.ClientRequest.get_nextSequenceId = function() {
    ULSqiZ: ;
    var $v_0 = SP.ClientRequest.$1R_0;
    SP.ClientRequest.$1R_0++;
    return $v_0;
}
SP.ClientRequest.$1T = function($p0) {
    if (!SP.ScriptUtility.isUndefined(window._spPageContextInfo) && !SP.ScriptUtility.isUndefined(window._spFormDigestRefreshInterval) && !SP.ScriptUtility.isUndefined(window.UpdateFormDigest)) {
        var $v_2 = window._spPageContextInfo;
        var $v_3 = $v_2.webServerRelativeUrl;
        var $v_4 = window._spFormDigestRefreshInterval;
        UpdateFormDigest($v_3, $v_4);
    }
    var $v_0 = null;
    var $v_1 = document.getElementsByName('__REQUESTDIGEST');
    if ($v_1 && $v_1.length > 0 && $v_1[0].tagName === 'INPUT') {
        var $v_5 = $v_1[0];
        $v_0 = $v_5.value;
    }
    if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $p0.get_headers()['X-RequestDigest'] = $v_0;
    }
}
SP.ClientRequest.$1b = function($p0, $p1) {
    var $v_0;
    if ($p0.get_aborted() || $p0.get_timedOut()) {
        $v_0 = SP.Res.requestAbortedOrTimedOut;
        return $v_0;
    }
    if ($p0.get_statusCode() !== 200) {
        $v_0 = String.format(SP.Res.requestUnexpectedResponseWithStatus, $p0.get_statusCode(), $p0.get_statusText());
        return $v_0;
    }
    if (!SP.ScriptUtility.isNullOrEmptyString($p1)) {
        var $v_2 = $p0.getResponseHeader('content-type');
        if (!$v_2 || $v_2.toLowerCase().indexOf($p1.toLowerCase()) < 0) {
            $v_0 = SP.Res.requestUnexpectedResponse;
            return $v_0;
        }
    }
    var $v_1 = $p0.getResponseHeader('SharePointError');
    if (!SP.ScriptUtility.isNullOrEmptyString($v_1)) {
        $v_0 = SP.Res.requestUnexpectedResponse;
        return $v_0;
    }
    return null;
}
SP.ClientRequest.$1r = function($p0) {
    $p0 = $p0.replace(SP.ClientRequest.$1v_0, '$1SP.DataConvert.createUtcDateTime($2)');
    $p0 = $p0.replace(SP.ClientRequest.$1t_0, '$1SP.DataConvert.createLocalDateTime($2)');
    $p0 = $p0.replace(SP.ClientRequest.$1u_0, '$1SP.DataConvert.createUnspecifiedDateTime($2)');
    $p0 = $p0.replace(SP.ClientRequest.$1w_0, '$1new SP.Guid(\"$2\")');
    $p0 = $p0.replace(SP.ClientRequest.$1s_0, '$1new SP.Base64EncodedByteArray(\"$2\")');
    return $p0;
}
SP.ClientRequest.prototype = {
    $0_0: null,
    $8_0: null,

    get_webRequest: function() {
        ULSqiZ: ;
        if (!this.$8_0) {
            this.$8_0 = new Sys.Net.WebRequest();
            this.$8_0.set_httpVerb('POST');
            this.$8_0.get_headers()['Content-Type'] = 'text/xml';
            var $v_0 = this.get_$2L_0();
            $v_0 = window.escapeUrlForCallback($v_0);
            this.$8_0.set_url($v_0);
        }
        return this.$8_0;
    },

    $g_0: null,

    get_$2L_0: function() {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrEmptyString(this.$g_0)) {
            this.$g_0 = this.$0_0.$1P_0;
            if (!this.$g_0.endsWith('/')) {
                this.$g_0 += '/_vti_bin/client.svc/ProcessQuery';
            } else {
                this.$g_0 += '_vti_bin/client.svc/ProcessQuery';
            }
        }
        return this.$g_0;
    },

    $C_0: null,

    get_$E_0: function() {
        ULSqiZ: ;
        if (!this.$C_0) {
            this.$C_0 = new Sys.EventHandlerList();
        }
        return this.$C_0;
    },

    add_requestSucceeded: function(value) {
        ULSqiZ: ;
        this.get_$E_0().addHandler('succeeded', value);
    },
    remove_requestSucceeded: function(value) {
        ULSqiZ: ;
        this.get_$E_0().removeHandler('succeeded', value);
    },

    add_requestFailed: function(value) {
        ULSqiZ: ;
        this.get_$E_0().addHandler('failed', value);
    },
    remove_requestFailed: function(value) {
        ULSqiZ: ;
        this.get_$E_0().removeHandler('failed', value);
    },

    $W_0: null,

    $12: function($p0) {
        if (this.$P_0) {
            throw Error.create(SP.Res.requestHasBeenExecuted);
        }
        Array.add(this.$v_0, $p0);
        this.$W_0 = $p0;
    },

    $T_0: null,

    $1Y: function($p0) {
        if (!this.$T_0) {
            this.$T_0 = [];
        }
        Array.add(this.$T_0, $p0);
    },

    $U_0: null,

    $23: function($p0) {
        if (!this.$U_0) {
            this.$U_0 = [];
        }
        Array.add(this.$U_0, $p0);
    },

    $1B_0: null,

    get_$14: function() {
        ULSqiZ: ;
        if (!this.$1B_0) {
            this.$1B_0 = [];
        }
        return this.$1B_0;
    },

    $13_0: function() {
        ULSqiZ: ;
        if (this.$T_0) {
            for (var $v_0 = 0; $v_0 < this.$T_0.length; $v_0++) {
                var $v_1 = this.$T_0[$v_0];
                $v_1.$13();
            }
            this.$T_0 = null;
        }
        if (this.$U_0) {
            for (var $v_2 = 0; $v_2 < this.$U_0.length; $v_2++) {
                var $v_3 = this.$U_0[$v_2];
                $v_3.$2C();
            }
            this.$U_0 = null;
        }
    },

    $28: function() {
        ULSqiZ: ;
        if (this.$P_0) {
            throw Error.create(SP.Res.requestHasBeenExecuted);
        }
        this.$P_0 = 1;
        SP.ClientRequest.$1T(this.get_webRequest());
        var $v_0 = this.$24_0();
        this.$13_0();
        this.get_webRequest().add_completed(this.$1W);
        this.get_webRequest().set_body($v_0.toString());
        this.get_webRequest().invoke();
    },

    $5_0: null,

    get_$2G: function() {
        ULSqiZ: ;
        if (!this.$5_0) {
            this.$5_0 = new SP.SerializationContext();
        }
        return this.$5_0;
    },

    $24_0: function() {
        ULSqiZ: ;
        var $v_0 = this.get_$2G();
        var $v_1 = new Sys.StringBuilder();
        var $v_2 = SP.XmlWriter.create($v_1);
        $v_2.writeStartElement('Request');
        $v_2.writeAttributeString('xmlns', 'http://schemas.microsoft.com/sharepoint/clientquery/2009');
        $v_2.writeAttributeString('SchemaVersion', SP.ClientSchemaVersions.currentVersion);
        $v_2.writeAttributeString('LibraryVersion', '14.0.4762.1000');
        if (!SP.ScriptUtility.isNullOrEmptyString(this.$0_0.get_applicationName())) {
            $v_2.writeAttributeString('ApplicationName', this.$0_0.get_applicationName());
        }
        $v_2.writeStartElement('Actions');
        var $v_3 = [];
        for (var $v_5 = 0; $v_5 < this.$v_0.length; $v_5++) {
            var $v_6 = this.$v_0[$v_5];
            if (SP.ClientActionExecutionScopeStart.isInstanceOfType($v_6)) {
                var $v_7 = $v_6;
                $v_7.$F_1.$21($v_2, $v_0);
                $v_3.push($v_7.$F_1);
            } else if (SP.ClientActionExecutionScopeEnd.isInstanceOfType($v_6)) {
                var $v_8 = $v_6;
                if (!$v_3.length || $v_3.pop() !== $v_8.$F_1) {
                    throw SP.ExceptionHandlingScope.$D();
                }
                $v_8.$F_1.$2N($v_2, $v_0);
            } else {
                $v_6.$22($v_2, $v_0);
            }
        }
        if ($v_3.length > 0) {
            throw SP.ExceptionHandlingScope.$D();
        }
        $v_2.writeEndElement();
        $v_2.writeStartElement('ObjectPaths');
        var $v_4 = {};
        do {
            var $v_9 = [];
            var $$dict_2_0 = $v_0.$t_0;
            for (var $$key_2_1 in $$dict_2_0) {
                var $v_A = {
                    key: $$key_2_1,
                    value: $$dict_2_0[$$key_2_1]
                };
                if (SP.ScriptUtility.isUndefined($v_4[$v_A.key])) {
                    Array.add($v_9, ($v_A.value).$1_0);
                }
            }
            if (!$v_9.length) {
                break;
            }
            for (var $v_B = 0; $v_B < $v_9.length; $v_B++) {
                var $v_C = this.$0_0.$r_0[$v_9[$v_B].toString()];
                $v_C.$22($v_2, $v_0);
                $v_4[$v_9[$v_B].toString()] = $v_C;
            }
        } while (true);
        $v_2.writeEndElement();
        $v_2.writeEndElement();
        return $v_1;
    },

    $1G_0: false,

    get_navigateWhenServerRedirect: function() {
        ULSqiZ: ;
        return this.$1G_0;
    },
    set_navigateWhenServerRedirect: function(value) {
        ULSqiZ: ;
        this.$1G_0 = value;
        return value;
    },

    $25_0: function($p0) {
        var $v_0 = SP.ClientRequest.$1b($p0, 'application/json');
        if ($v_0) {
            this.$10_0($v_0, null, 0, null, null, null);
            return true;
        }
        return false;
    },

    $10_0: function($p0, $p1, $p2, $p3, $p4, $p5) {
        var $v_0 = this.get_$E_0().getHandler('failed');
        if ($v_0) {
            $v_0(this, new SP.ClientRequestFailedEventArgs(this, $p0, $p1, $p2, $p3, $p4, $p5));
        } else {
            alert($p0);
        }
    },

    $29_0: function($p0) {
        if (this.$25_0($p0)) {
            this.$8_0 = null;
            return;
        }
        var $v_0 = $p0.get_responseData();
        var $v_1 = SP.ClientRequest._validateJson($v_0);
        if (!$v_1) {
            var $v_6 = SP.Res.requestUnexpectedResponse;
            this.$P_0 = 3;
            this.$10_0($v_6, null, 0, null, null, null);
            this.$8_0 = null;
            return;
        }
        $v_0 = SP.ClientRequest.$1r($v_0);
        var $v_2 = eval($v_0);
        if (!$v_2 || SP.ScriptUtility.isNullOrUndefined($v_2.length) || !($v_2.length >= 1) || SP.ScriptUtility.isNullOrUndefined($v_2[0]) || typeof($v_2[0]) !== 'object' || SP.ScriptUtility.isNullOrEmptyString($v_2[0].SchemaVersion) || SP.ScriptUtility.isNullOrEmptyString($v_2[0].LibraryVersion)) {
            var $v_7 = SP.Res.requestUnexpectedResponse;
            this.$P_0 = 3;
            this.$10_0($v_7, null, 0, null, null, null);
            this.$8_0 = null;
            return;
        }
        var $v_3 = $v_2[0];
        this.$0_0.$2K($v_3.SchemaVersion);
        this.$0_0.$2J($v_3.LibraryVersion);
        var $v_4 = $v_3.ErrorInfo;
        if (!SP.ScriptUtility.isNullOrUndefined($v_4)) {
            var $v_8 = $v_4.ErrorMessage;
            var $v_9 = $v_4.ErrorStackTrace;
            var $v_A = $v_4.ErrorCode;
            var $v_B = $v_4.ErrorTypeName;
            var $v_C = $v_4.ErrorValue;
            var $v_D = $v_4.ErrorDetails;
            $v_D = SP.DataConvert.fixupType(this.$0_0, $v_D);
            this.$P_0 = 3;
            this.$8_0 = null;
            if ($v_A === SP.ClientErrorCodes.redirect && !SP.ScriptUtility.isNullOrEmptyString($v_C) && this.$1G_0) {
                window.navigate($v_C);
            } else {
                this.$10_0($v_8, $v_9, $v_A, $v_C, $v_B, $v_D);
            }
            return;
        }
        this.$0_0.$16_0 = true;
        try {
            for (var $v_E = 1; $v_E < $v_2.length; $v_E += 2) {
                var $v_F = $v_2[$v_E];
                var $v_G = this.$l_0[$v_F.toString()];
                var $v_H = $v_2[$v_E + 1];
                if (!SP.ScriptUtility.isNullOrUndefined($v_G) && !SP.ScriptUtility.isNullOrUndefined($v_H)) {
                    if (SP.IFromJson.isInstanceOfType($v_G)) {
                        var $v_I = $v_G;
                        if (!$v_I.customFromJson($v_H)) {
                            $v_I.fromJson($v_H);
                        }
                    }
                    if (Array.isInstanceOfType($v_G)) {
                        SP.DataConvert.populateArray(this.$0_0, $v_G, $v_H);
                    }
                }
            }
        } finally {
            this.$0_0.$16_0 = false;
        }
        this.$P_0 = 2;
        var $v_5 = this.get_$E_0().getHandler('succeeded');
        if ($v_5) {
            $v_5(this, new SP.ClientRequestSucceededEventArgs(this));
        }
        this.$8_0 = null;
    },

    $1Z: function($p0, $p1) {
        if (this.$P_0) {
            throw Error.create(SP.Res.requestHasBeenExecuted);
        }
        this.$l_0[$p0.toString()] = $p1;
        if (SP.ClientObject.isInstanceOfType($p1)) {
            if (($p1).$4_0.$N_0) {
                this.$l_0[$p0.toString()] = ($p1).$4_0.$N_0;
            }
        }
    }
}


SP.ClientRequestEventArgs = function(request) {
    ULSqiZ: ;
    SP.ClientRequestEventArgs.initializeBase(this);
    this.$8_1 = request;
}
SP.ClientRequestEventArgs.prototype = {
    $8_1: null,

    get_request: function() {
        ULSqiZ: ;
        return this.$8_1;
    }
}


SP.ClientRequestFailedEventArgs = function(request, message, stackTrace, errorCode, errorValue, errorTypeName, errorDetails) {
    ULSqiZ: ;
    SP.ClientRequestFailedEventArgs.initializeBase(this, [request]);
    this.$1j_2 = message;
    this.$1p_2 = stackTrace;
    this.$1f_2 = errorCode;
    this.$1i_2 = errorValue;
    this.$1h_2 = errorTypeName;
    this.$1g_2 = errorDetails;
}
SP.ClientRequestFailedEventArgs.prototype = {
    $1j_2: null,
    $1p_2: null,
    $1f_2: 0,
    $1i_2: null,
    $1h_2: null,
    $1g_2: null,

    get_message: function() {
        ULSqiZ: ;
        return this.$1j_2;
    },

    get_stackTrace: function() {
        ULSqiZ: ;
        return this.$1p_2;
    },

    get_errorCode: function() {
        ULSqiZ: ;
        return this.$1f_2;
    },

    get_errorValue: function() {
        ULSqiZ: ;
        return this.$1i_2;
    },

    get_errorTypeName: function() {
        ULSqiZ: ;
        return this.$1h_2;
    },

    get_errorDetails: function() {
        ULSqiZ: ;
        return this.$1g_2;
    }
}


SP.ClientRequestSucceededEventArgs = function(request) {
    ULSqiZ: ;
    SP.ClientRequestSucceededEventArgs.initializeBase(this, [request]);
}


SP.ClientRuntimeContext = function(serverRelativeUrl) {
    ULSqiZ: ;
    this.$r_0 = {};
    if (!serverRelativeUrl) {
        throw Error.argumentNull('serverRelativeUrl');
    }
    if (!serverRelativeUrl.startsWith('/')) {
        throw Error.argument('serverRelativeUrl');
    }
    this.$1P_0 = serverRelativeUrl;
}
SP.ClientRuntimeContext.prototype = {
    $1P_0: null,

    get_url: function() {
        ULSqiZ: ;
        return this.$1P_0;
    },

    $1c_0: 'Javascript Library',

    get_applicationName: function() {
        ULSqiZ: ;
        return this.$1c_0;
    },
    set_applicationName: function(value) {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrEmptyString(value) || value.length > 128) {
            throw Error.argumentOutOfRange('value');
        }
        this.$1c_0 = value;
        return value;
    },

    $8_0: null,

    get_pendingRequest: function() {
        ULSqiZ: ;
        if (!this.$8_0) {
            this.$8_0 = new SP.ClientRequest(this);
        }
        return this.$8_0;
    },

    get_hasPendingRequest: function() {
        ULSqiZ: ;
        return this.$8_0 && this.$8_0.$W_0;
    },

    $16_0: false,
    $C_0: null,

    get_$E_0: function() {
        ULSqiZ: ;
        if (!this.$C_0) {
            this.$C_0 = new Sys.EventHandlerList();
        }
        return this.$C_0;
    },

    add_requestSucceeded: function(value) {
        ULSqiZ: ;
        this.get_$E_0().addHandler('succeeded', value);
    },
    remove_requestSucceeded: function(value) {
        ULSqiZ: ;
        this.get_$E_0().removeHandler('succeeded', value);
    },

    add_requestFailed: function(value) {
        ULSqiZ: ;
        this.get_$E_0().addHandler('failed', value);
    },
    remove_requestFailed: function(value) {
        ULSqiZ: ;
        this.get_$E_0().removeHandler('failed', value);
    },

    add_beginningRequest: function(value) {
        ULSqiZ: ;
        this.get_$E_0().addHandler('beginningrequest', value);
    },
    remove_beginningRequest: function(value) {
        ULSqiZ: ;
        this.get_$E_0().removeHandler('beginningrequest', value);
    },

    executeQueryAsync: function(succeededCallback, failedCallback) {
        ULSqiZ: ;
        var $v_0 = this.get_pendingRequest();
        if (this.$C_0) {
            var $v_1 = this.$C_0.getHandler('beginningrequest');
            if ($v_1) {
                $v_1(this, new SP.ClientRequestEventArgs($v_0));
            }
        }
        this.$8_0 = null;
        if (!SP.ScriptUtility.isNullOrUndefined(succeededCallback)) {
            $v_0.add_requestSucceeded(succeededCallback);
        }
        if (!SP.ScriptUtility.isNullOrUndefined(failedCallback)) {
            $v_0.add_requestFailed(failedCallback);
        }
        if (this.$C_0) {
            var $v_2 = this.$C_0.getHandler('succeeded');
            if ($v_2) {
                $v_0.add_requestSucceeded($v_2);
            }
            var $v_3 = this.$C_0.getHandler('failed');
            if ($v_3) {
                $v_0.add_requestFailed($v_3);
            }
        }
        $v_0.$28();
    },

    $1O_0: null,

    get_staticObjects: function() {
        ULSqiZ: ;
        if (!this.$1O_0) {
            this.$1O_0 = {};
        }
        return this.$1O_0;
    },

    castTo: function(obj, type) {
        ULSqiZ: ;
        if (!obj) {
            throw Error.argumentNull('obj');
        }
        var $v_0;
        if (!type.inheritsFrom(SP.ClientObject)) {
            throw Error.argument('type');
        }
        if (obj.$0_0 !== this) {
            throw Error.invalidOperation();
        }
        if (type.isInstanceOfType(obj)) {
            $v_0 = new type(this, obj.get_path());
            $v_0.$1U(obj);
            return $v_0;
        }
        if (obj.$4_0.$N_0 && type.isInstanceOfType(obj.$4_0.$N_0)) {
            $v_0 = new type(this, obj.get_path());
            $v_0.$1U(obj);
            return $v_0;
        }
        if (!type.inheritsFrom(Object.getType(obj))) {
            throw Error.argument('type');
        }
        if (obj.$4_0.$N_0 && !type.inheritsFrom(Object.getType(obj.$4_0.$N_0))) {
            throw Error.argument('type');
        }
        $v_0 = new type(this, obj.get_path());
        $v_0.$1U(obj);
        var $v_1 = null;
        if (!obj.$4_0.$N_0) {
            $v_1 = obj;
        } else {
            $v_1 = obj.$4_0.$N_0;
        }
        if ($v_1) {
            var $v_2 = new SP.EnumerableArray();
            var $v_3 = this.get_pendingRequest().$l_0;
            var $$dict_2_0 = $v_3;
            for (var $$key_2_1 in $$dict_2_0) {
                var $v_4 = {
                    key: $$key_2_1,
                    value: $$dict_2_0[$$key_2_1]
                };
                if ($v_4.value === obj) {
                    $v_2.add($v_4.key);
                }
            }
            var $$enum_2_0 = $v_2.getEnumerator();
            while ($$enum_2_0.moveNext()) {
                var $v_5 = $$enum_2_0.get_current();
                $v_3[$v_5] = $v_0;
            }
            obj.$4_0.$N_0 = $v_0;
        }
        return $v_0;
    },

    addQuery: function(query) {
        ULSqiZ: ;
        if (!query) {
            throw Error.argumentNull('query');
        }
        this.get_pendingRequest().$12(query);
    },

    $1Y: function($p0) {
        this.get_pendingRequest().$1Y($p0);
    },

    $1X: function($p0) {
        this.$r_0[$p0.$1_0.toString()] = $p0;
    },

    addQueryIdAndResultObject: function(id, obj) {
        ULSqiZ: ;
        if (!obj) {
            throw Error.argumentNull('obj');
        }
        this.get_pendingRequest().$1Z(id, obj);
    },

    parseObjectFromJsonString: function(json) {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrEmptyString(json)) {
            return null;
        }
        var $v_0 = SP.ClientRequest._validateJson(json);
        if (!$v_0) {
            throw Error.argument('json');
        }
        json = SP.ClientRequest.$1r(json);
        var $v_1 = eval(json);
        var $v_2;
        if (Array.isInstanceOfType($v_1)) {
            var $v_3 = [];
            SP.DataConvert.populateArray(this, $v_3, $v_1);
            $v_2 = $v_3;
        } else {
            $v_2 = SP.DataConvert.fixupType(this, $v_1);
        }
        return $v_2;
    },

    load: function(clientObject) {
        ULSqiZ: ;
        var $v_0 = null;
        if (arguments.length === 2 && Array.isInstanceOfType(arguments[1])) {
            $v_0 = (arguments[1]);
        } else {
            var $v_1 = [];
            for (var $v_2 = 1; $v_2 < arguments.length; $v_2++) {
                Array.add($v_1, arguments[$v_2]);
            }
            $v_0 = $v_1;
        }
        SP.DataRetrievalWithExpressionString.load(clientObject, $v_0);
    },

    loadQuery: function(clientObjectCollection, exp) {
        ULSqiZ: ;
        return SP.DataRetrievalWithExpressionString.loadQuery(clientObjectCollection, exp);
    },

    $1M_0: null,

    get_serverSchemaVersion: function() {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrUndefined(this.$1M_0)) {
            throw Error.create(SP.Res.propertyHasNotBeenInitialized);
        }
        return this.$1M_0;
    },

    $2K: function($p0) {
        this.$1M_0 = $p0;
    },

    $1L_0: null,

    get_serverLibraryVersion: function() {
        ULSqiZ: ;
        if (SP.ScriptUtility.isNullOrUndefined(this.$1L_0)) {
            throw Error.create(SP.Res.propertyHasNotBeenInitialized);
        }
        return this.$1L_0;
    },

    $2J: function($p0) {
        this.$1L_0 = $p0;
    },

    dispose: function() {}
}


SP.ClientValueObject = function() {}
SP.ClientValueObject.prototype = {

    fromJson: function(obj) {
        ULSqiZ: ;
        this.initPropertiesFromJson(obj);
    },

    initPropertiesFromJson: function(obj) {},

    customFromJson: function(obj) {
        ULSqiZ: ;
        return false;
    },

    writeToXml: function(writer, serializationContext) {},

    customWriteToXml: function(writer, serializationContext) {
        ULSqiZ: ;
        return false;
    }
}


SP.DataRetrievalWithExpressionString = function() {}
SP.DataRetrievalWithExpressionString.load = function($p0, $p1) {
    if (!$p1 || !$p1.length) {
        $p0.get_$h().selectAllProperties();
        if (SP.ClientObjectCollection.isInstanceOfType($p0)) {
            $p0.get_$h().get_childItemQuery().selectAllProperties();
        }
    } else {
        for (var $v_0 = 0; $v_0 < $p1.length; $v_0++) {
            var $v_1 = $p1[$v_0];
            SP.DataRetrievalWithExpressionString.$1Q_0($p0.get_$h(), $v_1);
        }
    }
}
SP.DataRetrievalWithExpressionString.loadQuery = function($p0, $p1) {
    var $v_0 = [];
    var $v_1 = new SP.ClientObjectCollectionResult($p0.$0_0, $v_0);
    var $v_2 = new SP.ClientQueryInternal($p0, null, false, null);
    $p0.$0_0.addQueryIdAndResultObject($v_2.$1_0, $v_1);
    $p0.$0_0.addQuery($v_2);
    if (SP.ScriptUtility.isNullOrEmptyString($p1)) {
        $v_2.get_childItemQuery().selectAllProperties();
    } else {
        SP.DataRetrievalWithExpressionString.$1Q_0($v_2, $p1);
    }
    return $v_0;
}
SP.DataRetrievalWithExpressionString.$1Q_0 = function($p0, $p1) {
    if (SP.ScriptUtility.isNullOrEmptyString($p1)) {
        throw Error.argumentOutOfRange('exp');
    }
    var $v_0 = $p1.length;
    $p1 = $p1.trim();
    if (!$p1.length || $v_0 !== $p1.length) {
        throw Error.argumentOutOfRange('exp');
    }
    var $v_1 = $p0;
    var $v_2 = 0;
    var $v_3;
    var $v_4 = null;
    var $v_5 = $p1.length;
    var $v_6 = false;
    for (var $v_7 = 0; $v_7 < $v_5; $v_7++) {
        var $v_8 = $p1.charAt($v_7);
        if ($v_8 === ',' || $v_8 === ')' || $v_6) {
            throw SP.DataRetrievalWithExpressionString.$J_0($p1);
        }
        if ($v_8 === '.' || $v_8 === '(') {
            $v_3 = $p1.substr($v_2, $v_7 - $v_2);
            $v_3 = $v_3.trim();
            if ($v_8 === '(') {
                if ($v_3 !== 'Include' && $v_3 !== 'IncludeWithDefaultProperties') {
                    throw SP.DataRetrievalWithExpressionString.$J_0($p1);
                }
                if ($v_1.$o_1) {
                    throw SP.DataRetrievalWithExpressionString.$J_0($p1);
                }
                var $v_9 = SP.DataRetrievalWithExpressionString.$2A_0($p1, $v_7);
                if ($v_9 < 0) {
                    throw SP.DataRetrievalWithExpressionString.$J_0($p1);
                }
                var $v_A = $p1.substr($v_7 + 1, $v_9 - $v_7 - 1);
                var $v_B = $v_1.get_childItemQuery();
                if ($v_3 === 'IncludeWithDefaultProperties') {
                    $v_B.selectAllProperties();
                }
                var $v_C = SP.DataRetrievalWithExpressionString.$2M_0($v_A);
                for (var $v_D = 0; $v_D < $v_C.length; $v_D++) {
                    var $v_E = $v_C[$v_D];
                    SP.DataRetrievalWithExpressionString.$1Q_0($v_B, $v_E);
                }
                $v_7 = $v_9;
                $v_6 = true;
            } else if ($v_8 === '.') {
                if ($v_6 || !$v_3.length) {
                    throw SP.DataRetrievalWithExpressionString.$J_0($p1);
                }
                var $v_F = $v_1.$i($v_3);
                if (!$v_F) {
                    $v_F = new SP.ClientQueryInternal(null, $v_3, true, $v_1);
                    $v_1.selectSubQuery($v_F);
                }
                $v_1 = $v_F;
            }
            $v_2 = $v_7 + 1;
            $v_4 = $v_3;
        }
    }
    if ($v_2 < $p1.length) {
        $v_3 = $p1.substr($v_2);
        $v_3 = $v_3.trim();
        if ($v_3.length > 0) {
            if ($v_6) {
                throw SP.DataRetrievalWithExpressionString.$J_0($p1);
            }
            $v_1.selectWithAll($v_3);
        }
    }
}
SP.DataRetrievalWithExpressionString.$2A_0 = function($p0, $p1) {
    var $v_0 = $p0.length;
    var $v_1 = 1;
    var $v_2 = -1;
    for (var $v_3 = $p1 + 1; $v_3 < $v_0; $v_3++) {
        var $v_4 = $p0.charAt($v_3);
        if ($v_4 === '(') {
            $v_1++;
        } else if ($v_4 === ')') {
            $v_1--;
            if (!$v_1) {
                $v_2 = $v_3;
                break;
            }
        }
    }
    return $v_2;
}
SP.DataRetrievalWithExpressionString.$2M_0 = function($p0) {
    $p0 = $p0.trim();
    var $v_0 = [];
    var $v_1 = 0;
    var $v_2 = 0;
    var $v_3;
    var $v_4 = $p0.length;
    if (!$v_4) {
        return (($v_0));
    }
    if ($p0.charAt(0) === ',' || $p0.charAt(0) === '(' || $p0.charAt($v_4 - 1) === ',') {
        throw SP.DataRetrievalWithExpressionString.$J_0($p0);
    }
    for (var $v_5 = 0; $v_5 < $v_4; $v_5++) {
        var $v_6 = $p0.charAt($v_5);
        if ($v_6 === '(') {
            $v_1++;
        } else if ($v_6 === ')') {
            $v_1--;
            if ($v_1 < 0) {
                throw SP.DataRetrievalWithExpressionString.$J_0($p0);
            }
        } else if ($v_6 === ',' && !$v_1) {
            $v_3 = $p0.substr($v_2, $v_5 - $v_2);
            $v_3 = $v_3.trim();
            if (!$v_3.length) {
                throw SP.DataRetrievalWithExpressionString.$J_0($p0);
            }
            Array.add($v_0, $v_3);
            $v_2 = $v_5 + 1;
        }
    }
    if ($v_1) {
        throw SP.DataRetrievalWithExpressionString.$J_0($p0);
    }
    if ($v_2 < $p0.length) {
        $v_3 = $p0.substr($v_2);
        $v_3 = $v_3.trim();
        if ($v_3.length > 0) {
            Array.add($v_0, $v_3);
        }
    }
    return (($v_0));
}
SP.DataRetrievalWithExpressionString.$J_0 = function($p0) {
    return Error.argument(null, String.format(SP.Res.notSupportedQueryExpressionWithExpressionDetail, $p0));
}


SP.ClientActionExecutionScopeStart = function(scope, name) {
    ULSqiZ: ;
    SP.ClientActionExecutionScopeStart.initializeBase(this, [null, name]);
    this.$F_1 = scope;
}
SP.ClientActionExecutionScopeStart.prototype = {
    $F_1: null,

    get_scope: function() {
        ULSqiZ: ;
        return this.$F_1;
    },

    $22: function($p0, $p1) {}
}


SP.ClientActionExecutionScopeEnd = function(scope, name) {
    ULSqiZ: ;
    SP.ClientActionExecutionScopeEnd.initializeBase(this, [null, name]);
    this.$F_1 = scope;
}
SP.ClientActionExecutionScopeEnd.prototype = {
    $F_1: null,

    get_scope: function() {
        ULSqiZ: ;
        return this.$F_1;
    },

    $22: function($p0, $p1) {}
}


SP.ExecutionScope = function(context, name, disposingCallback) {
    ULSqiZ: ;
    this.$0_0 = context;
    this.$B_0 = name;
    this.$1_0 = SP.ClientRequest.get_nextSequenceId();
    this.$0_0.get_pendingRequest().get_$14().push(this);
    this.$1d_0 = new SP.ClientActionExecutionScopeStart(this, this.$B_0);
    this.$0_0.get_pendingRequest().$12(this.$1d_0);
    this.$1A_0 = disposingCallback;
}
SP.ExecutionScope.prototype = {
    $0_0: null,
    $R_0: false,
    $B_0: null,
    $1_0: 0,
    $1A_0: null,
    $1d_0: null,

    get_id: function() {
        ULSqiZ: ;
        return this.$1_0;
    },

    get_name: function() {
        ULSqiZ: ;
        return this.$B_0;
    },

    dispose: function() {
        ULSqiZ: ;
        if (this.$R_0) {
            throw SP.ExceptionHandlingScope.$D();
        }
        if (this.$1A_0) {
            this.$1A_0();
        }
        if (this.$0_0.get_pendingRequest().get_$14().length > 0 && this.$0_0.get_pendingRequest().get_$14().pop() === this) {
            this.$0_0.get_pendingRequest().$12(new SP.ClientActionExecutionScopeEnd(this, this.$B_0));
        } else {
            throw SP.ExceptionHandlingScope.$D();
        }
        this.$R_0 = true;
    },

    $21: function($p0, $p1) {
        $p0.writeStartElement(this.$B_0);
        $p0.writeAttributeString('Id', this.$1_0.toString());
    },

    $2N: function($p0, $p1) {
        $p0.writeEndElement();
    }
}


SP.ExceptionHandlingScope = function(context) {
    ULSqiZ: ;
    this.$1V = Function.createDelegate(this, this.$27_0);
    if (!context) {
        throw Error.argumentNull('context');
    }
    this.$0_0 = context;
    this.$1J_0 = SP.ClientRequest.$1a;
}
SP.ExceptionHandlingScope.$D = function() {
    ULSqiZ: ;
    return Error.create(SP.Res.invalidUsageOfExceptionHandlingScope);
}
SP.ExceptionHandlingScope.prototype = {
    $0_0: null,
    $1l_0: false,
    $1D_0: false,
    $d_0: null,
    $1N_0: null,
    $1J_0: 0,
    $1K_0: null,
    $K_0: null,

    get_$2D: function() {
        ULSqiZ: ;
        if (!this.$Q_0) {
            return true;
        }
        return false;
    },

    startScope: function() {
        ULSqiZ: ;
        if (this.$K_0) {
            throw SP.ExceptionHandlingScope.$D();
        }
        this.$K_0 = new SP.ExceptionHandlingExecutionScope(this.$0_0, this, this.$1V);
        this.$0_0.get_pendingRequest().$1Z(this.$K_0.$1_0, this);
        return this.$K_0;
    },

    $27_0: function() {
        ULSqiZ: ;
        if (this.$Q_0) {
            if (!this.$a_0 && !this.$j_0) {
                throw SP.ExceptionHandlingScope.$D();
            }
            var $v_0 = this.$0_0.get_pendingRequest().$W_0;
            if (!$v_0 || !(SP.ClientActionExecutionScopeEnd.isInstanceOfType($v_0))) {
                throw SP.ExceptionHandlingScope.$D();
            }
            var $v_1 = $v_0;
            if ($v_1.$F_1.$B_0 !== 'CatchScope' && $v_1.$F_1.$B_0 !== 'FinallyScope') {
                throw SP.ExceptionHandlingScope.$D();
            }
        }
    },

    $Q_0: null,

    startTry: function() {
        ULSqiZ: ;
        if (!this.$K_0 || this.$K_0.$R_0 || this.$Q_0) {
            throw SP.ExceptionHandlingScope.$D();
        }
        var $v_0 = this.$0_0.get_pendingRequest().$W_0;
        if (!$v_0 || !(SP.ClientActionExecutionScopeStart.isInstanceOfType($v_0))) {
            throw SP.ExceptionHandlingScope.$D();
        }
        if (($v_0).$F_1.$B_0 !== 'ExceptionHandlingScope') {
            throw SP.ExceptionHandlingScope.$D();
        }
        this.$Q_0 = new SP.ExecutionScope(this.$0_0, 'TryScope', null);
        return this.$Q_0;
    },

    $a_0: null,

    startCatch: function() {
        ULSqiZ: ;
        if (!this.$K_0 || this.$K_0.$R_0 || !this.$Q_0 || !this.$Q_0.$R_0 || this.$a_0 || this.$j_0) {
            throw SP.ExceptionHandlingScope.$D();
        }
        var $v_0 = this.$0_0.get_pendingRequest().$W_0;
        if (!$v_0 || !(SP.ClientActionExecutionScopeEnd.isInstanceOfType($v_0))) {
            throw SP.ExceptionHandlingScope.$D();
        }
        if (($v_0).$F_1.$B_0 !== 'TryScope') {
            throw SP.ExceptionHandlingScope.$D();
        }
        this.$a_0 = new SP.ExecutionScope(this.$0_0, 'CatchScope', null);
        return this.$a_0;
    },

    $j_0: null,

    startFinally: function() {
        ULSqiZ: ;
        if (!this.$K_0 || this.$K_0.$R_0 || !this.$Q_0 || !this.$Q_0.$R_0 || (this.$a_0 && !this.$a_0.$R_0) || this.$j_0) {
            throw SP.ExceptionHandlingScope.$D();
        }
        var $v_0 = this.$0_0.get_pendingRequest().$W_0;
        if (!$v_0 || !(SP.ClientActionExecutionScopeEnd.isInstanceOfType($v_0))) {
            throw SP.ExceptionHandlingScope.$D();
        }
        if (($v_0).$F_1.$B_0 !== 'TryScope' && ($v_0).$F_1.$B_0 !== 'CatchScope') {
            throw SP.ExceptionHandlingScope.$D();
        }
        this.$j_0 = new SP.ExecutionScope(this.$0_0, 'FinallyScope', null);
        return this.$j_0;
    },

    get_processed: function() {
        ULSqiZ: ;
        return this.$1l_0;
    },

    get_hasException: function() {
        ULSqiZ: ;
        return this.$1D_0;
    },

    get_errorMessage: function() {
        ULSqiZ: ;
        return this.$d_0;
    },

    get_serverStackTrace: function() {
        ULSqiZ: ;
        return this.$1N_0;
    },

    get_serverErrorCode: function() {
        ULSqiZ: ;
        return this.$1J_0;
    },

    get_serverErrorValue: function() {
        ULSqiZ: ;
        return this.$1K_0;
    },

    fromJson: function(initValue) {
        ULSqiZ: ;
        var $v_0 = initValue;
        if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
            throw Error.create(SP.Res.unknownResponseData);
        }
        var $v_1;
        $v_1 = $v_0.HasException;
        if (SP.ScriptUtility.isUndefined($v_1)) {
            throw Error.create(SP.Res.unknownResponseData);
        }
        this.$1D_0 = $v_1;
        if (this.$1D_0) {
            var $v_2 = $v_0.ErrorInfo;
            if (SP.ScriptUtility.isNullOrUndefined($v_2)) {
                throw Error.create(SP.Res.unknownResponseData);
            }
            $v_1 = $v_2.ErrorMessage;
            if (!SP.ScriptUtility.isUndefined($v_1)) {
                this.$d_0 = $v_1;
            } else {
                this.$d_0 = SP.ScriptUtility.emptyString;
            }
            $v_1 = $v_2.ErrorStackTrace;
            if (!SP.ScriptUtility.isUndefined($v_1)) {
                this.$1N_0 = $v_1;
            } else {
                this.$1N_0 = SP.ScriptUtility.emptyString;
            }
            $v_1 = $v_2.ErrorCode;
            if (!SP.ScriptUtility.isUndefined($v_1)) {
                this.$1J_0 = $v_1;
            }
            $v_1 = $v_2.ErrorValue;
            if (!SP.ScriptUtility.isUndefined($v_1)) {
                this.$1K_0 = $v_1;
            } else {
                this.$1K_0 = SP.ScriptUtility.emptyString;
            }
        }
        this.$1l_0 = true;
    },

    customFromJson: function(initValue) {
        ULSqiZ: ;
        return false;
    }
}


SP.ExceptionHandlingExecutionScope = function(context, scope, callback) {
    ULSqiZ: ;
    SP.ExceptionHandlingExecutionScope.initializeBase(this, [context, 'ExceptionHandlingScope', callback]);
    this.$F_1 = scope;
}
SP.ExceptionHandlingExecutionScope.prototype = {
    $F_1: null,

    $21: function($p0, $p1) {
        if (this.$F_1.get_$2D()) {
            $p0.writeStartElement('ExceptionHandlingScopeSimple');
            $p0.writeAttributeString('Id', this.$1_0.toString());
        } else {
            SP.ExceptionHandlingExecutionScope.callBaseMethod(this, '$21', [$p0, $p1]);
        }
    }
}


SP.ObjectIdentityQuery = function(objectPath) {
    ULSqiZ: ;
    SP.ObjectIdentityQuery.initializeBase(this, [objectPath, null]);
}
SP.ObjectIdentityQuery.prototype = {

    $22: function($p0, $p1) {
        $p0.writeStartElement('ObjectIdentityQuery');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('ObjectPathId', this.$I_0.$1_0.toString());
        $p1.addObjectPath(this.$I_0);
        $p0.writeEndElement();
    }
}


SP.ObjectPath = function(context, parent, addToContext) {
    ULSqiZ: ;
    this.$0_0 = context;
    if (!parent) {
        this.$s_0 = SP.ClientRequest.$15;
    } else {
        this.$s_0 = parent.$1_0;
    }
    this.$1_0 = SP.ClientRequest.get_nextSequenceId();
    if (addToContext) {
        context.$1X(this);
        if (!context.$16_0) {
            var $v_0 = new SP.ClientActionInstantiateObjectPath(this);
            context.addQuery($v_0);
            var $v_1 = new SP.ClientActionInstantiateObjectPathResult(this);
            context.addQueryIdAndResultObject($v_0.$1_0, $v_1);
        }
    }
    this.$w_0 = false;
    this.$V_0 = true;
}
SP.ObjectPath.prototype = {
    $s_0: 0,
    $1_0: 0,
    $0_0: null,
    $w_0: false,

    get_$z: function() {
        ULSqiZ: ;
        if (this.$s_0 === SP.ClientRequest.$15) {
            return null;
        }
        return this.$0_0.$r_0[this.$s_0.toString()];
    },

    $V_0: false,

    $2C: function() {},

    setPendingReplace: function() {
        ULSqiZ: ;
        this.$0_0.get_pendingRequest().$23(this);
    }
}


SP.ObjectPathProperty = function(context, parent, propertyName) {
    ULSqiZ: ;
    SP.ObjectPathProperty.initializeBase(this, [context, parent, true]);
    this.$u_1 = propertyName;
}
SP.ObjectPathProperty.prototype = {
    $u_1: null,

    $22: function($p0, $p1) {
        $p0.writeStartElement('Property');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('ParentId', this.get_$z().$1_0.toString());
        $p1.addObjectPath(this.get_$z());
        $p0.writeAttributeString('Name', this.$u_1);
        $p0.writeEndElement();
    }
}


SP.ObjectPathStaticProperty = function(context, typeId, propertyName) {
    ULSqiZ: ;
    SP.ObjectPathStaticProperty.initializeBase(this, [context, null, true]);
    this.$M_1 = typeId;
    this.$u_1 = propertyName;
}
SP.ObjectPathStaticProperty.prototype = {
    $u_1: null,
    $M_1: null,

    $22: function($p0, $p1) {
        $p0.writeStartElement('StaticProperty');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('TypeId', this.$M_1);
        $p0.writeAttributeString('Name', this.$u_1);
        $p0.writeEndElement();
    }
}


SP.ObjectPathMethod = function(context, parent, methodName, parameters) {
    ULSqiZ: ;
    SP.ObjectPathMethod.initializeBase(this, [context, parent, true]);
    this.$q_1 = methodName;
    this.$3_1 = parameters;
    this.$5_1 = new SP.SerializationContext();
    var $v_0;
    this.$6_1 = new Sys.StringBuilder();
    $v_0 = SP.XmlWriter.create(this.$6_1);
    this.$Z_1($v_0, this.$5_1);
    $v_0.close();
    this.$3_1 = null;
}
SP.ObjectPathMethod.prototype = {
    $q_1: null,
    $5_1: null,
    $6_1: null,
    $3_1: null,

    $22: function($p0, $p1) {
        $p0.writeRaw(this.$6_1.toString());
        $p1.$S(this.$5_1);
    },

    $Z_1: function($p0, $p1) {
        $p0.writeStartElement('Method');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('ParentId', this.get_$z().$1_0.toString());
        $p1.addObjectPath(this.get_$z());
        $p0.writeAttributeString('Name', this.$q_1);
        if (this.$3_1 && this.$3_1.length > 0) {
            $p0.writeStartElement('Parameters');
            for (var $v_0 = 0; $v_0 < this.$3_1.length; $v_0++) {
                var $v_1 = this.$3_1[$v_0];
                $p0.writeStartElement('Parameter');
                SP.DataConvert.writeValueToXmlElement($p0, $v_1, $p1);
                $p0.writeEndElement();
            }
            $p0.writeEndElement();
        }
        $p0.writeEndElement();
    },

    $2C: function() {
        ULSqiZ: ;
        this.$3_1 = null;
        this.$6_1 = null;
        this.$5_1 = null;
        this.$V_0 = false;
    }
}


SP.ObjectPathStaticMethod = function(context, typeId, methodName, parameters) {
    ULSqiZ: ;
    SP.ObjectPathStaticMethod.initializeBase(this, [context, null, true]);
    this.$M_1 = typeId;
    this.$q_1 = methodName;
    this.$3_1 = parameters;
    this.$5_1 = new SP.SerializationContext();
    var $v_0;
    this.$6_1 = new Sys.StringBuilder();
    $v_0 = SP.XmlWriter.create(this.$6_1);
    this.$Z_1($v_0, this.$5_1);
    $v_0.close();
    this.$3_1 = null;
}
SP.ObjectPathStaticMethod.prototype = {
    $M_1: null,
    $q_1: null,
    $3_1: null,
    $5_1: null,
    $6_1: null,

    $22: function($p0, $p1) {
        $p0.writeRaw(this.$6_1.toString());
        $p1.$S(this.$5_1);
    },

    $Z_1: function($p0, $p1) {
        $p0.writeStartElement('StaticMethod');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('Name', this.$q_1);
        $p0.writeAttributeString('TypeId', this.$M_1);
        if (this.$3_1 && this.$3_1.length > 0) {
            $p0.writeStartElement('Parameters');
            for (var $v_0 = 0; $v_0 < this.$3_1.length; $v_0++) {
                var $v_1 = this.$3_1[$v_0];
                $p0.writeStartElement('Parameter');
                SP.DataConvert.writeValueToXmlElement($p0, $v_1, $p1);
                $p0.writeEndElement();
            }
            $p0.writeEndElement();
        }
        $p0.writeEndElement();
    },

    $2C: function() {
        ULSqiZ: ;
        this.$3_1 = null;
        this.$6_1 = null;
        this.$5_1 = null;
        this.$V_0 = false;
    }
}


SP.ObjectPathConstructor = function(context, typeId, parameters) {
    ULSqiZ: ;
    SP.ObjectPathConstructor.initializeBase(this, [context, null, true]);
    this.$M_1 = typeId;
    this.$3_1 = parameters;
    this.$5_1 = new SP.SerializationContext();
    var $v_0;
    this.$6_1 = new Sys.StringBuilder();
    $v_0 = SP.XmlWriter.create(this.$6_1);
    this.$Z_1($v_0, this.$5_1);
    $v_0.close();
    this.$3_1 = null;
}
SP.ObjectPathConstructor.prototype = {
    $M_1: null,
    $3_1: null,
    $5_1: null,
    $6_1: null,

    $22: function($p0, $p1) {
        $p0.writeRaw(this.$6_1.toString());
        $p1.$S(this.$5_1);
    },

    $Z_1: function($p0, $p1) {
        $p0.writeStartElement('Constructor');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('TypeId', this.$M_1);
        if (this.$3_1 && this.$3_1.length > 0) {
            $p0.writeStartElement('Parameters');
            for (var $v_0 = 0; $v_0 < this.$3_1.length; $v_0++) {
                var $v_1 = this.$3_1[$v_0];
                $p0.writeStartElement('Parameter');
                SP.DataConvert.writeValueToXmlElement($p0, $v_1, $p1);
                $p0.writeEndElement();
            }
            $p0.writeEndElement();
        }
        $p0.writeEndElement();
    },

    $2C: function() {
        ULSqiZ: ;
        this.$3_1 = null;
        this.$6_1 = null;
        this.$5_1 = null;
        this.$V_0 = false;
    }
}


SP.ObjectPathIdentity = function(context, identity) {
    ULSqiZ: ;
    SP.ObjectPathIdentity.initializeBase(this, [context, null, false]);
    this.$k_1 = identity;
}
SP.ObjectPathIdentity.prototype = {
    $k_1: null,

    get_identity: function() {
        ULSqiZ: ;
        return this.$k_1;
    },

    $22: function($p0, $p1) {
        $p0.writeStartElement('Identity');
        $p0.writeAttributeString('Id', this.$1_0.toString());
        $p0.writeAttributeString('Name', this.$k_1);
        $p0.writeEndElement();
    }
}


SP.SerializationContext = function() {
    ULSqiZ: ;
    this.$t_0 = {};
}
SP.SerializationContext.prototype = {

    addClientObject: function(obj) {
        ULSqiZ: ;
        if (obj.get_path()) {
            this.addObjectPath(obj.get_path());
        }
    },

    addObjectPath: function(path) {
        ULSqiZ: ;
        this.$t_0[path.$1_0.toString()] = path;
    },

    $S: function($p0) {
        var $$dict_1_0 = $p0.$t_0;
        for (var $$key_1_1 in $$dict_1_0) {
            var $v_0 = {
                key: $$key_1_1,
                value: $$dict_1_0[$$key_1_1]
            };
            this.addObjectPath($v_0.value);
        }
    }
}


SP.OfficeVersion = function() {}


SP.ArrayListEnumerator.registerClass('SP.ArrayListEnumerator', null, IEnumerator);
SP.BaseCollection.registerClass('SP.BaseCollection', null, IEnumerable);
SP.BaseCollectionEnumerator.registerClass('SP.BaseCollectionEnumerator', null, IEnumerator);
SP.Base64EncodedByteArray.registerClass('SP.Base64EncodedByteArray', null, SP.IFromJson);
SP.ClientDictionaryResultHandler.registerClass('SP.ClientDictionaryResultHandler', null, SP.IFromJson);
SP.ClientActionInstantiateObjectPathResult.registerClass('SP.ClientActionInstantiateObjectPathResult', null, SP.IFromJson);
SP.ClientObjectCollectionResult.registerClass('SP.ClientObjectCollectionResult', null, SP.IFromJson);
SP.DataConvert.registerClass('SP.DataConvert');
SP.PageRequestFailedEventArgs.registerClass('SP.PageRequestFailedEventArgs', Sys.EventArgs);
SP.PageRequestSucceededEventArgs.registerClass('SP.PageRequestSucceededEventArgs', Sys.EventArgs);
SP.PageRequest.registerClass('SP.PageRequest');
SP.ClientConstants.registerClass('SP.ClientConstants');
SP.ClientSchemaVersions.registerClass('SP.ClientSchemaVersions');
SP.ClientErrorCodes.registerClass('SP.ClientErrorCodes');
SP.ClientAction.registerClass('SP.ClientAction');
SP.ClientActionSetProperty.registerClass('SP.ClientActionSetProperty', SP.ClientAction);
SP.ClientActionSetStaticProperty.registerClass('SP.ClientActionSetStaticProperty', SP.ClientAction);
SP.ClientActionInvokeMethod.registerClass('SP.ClientActionInvokeMethod', SP.ClientAction);
SP.ClientActionInvokeStaticMethod.registerClass('SP.ClientActionInvokeStaticMethod', SP.ClientAction);
SP.ClientActionInstantiateObjectPath.registerClass('SP.ClientActionInstantiateObjectPath', SP.ClientAction);
SP.ClientObject.registerClass('SP.ClientObject', null, SP.IFromJson);
SP.ClientObjectData.registerClass('SP.ClientObjectData');
SP.ClientObjectCollection.registerClass('SP.ClientObjectCollection', SP.ClientObject, IEnumerable);
SP.ClientObjectPrototype.registerClass('SP.ClientObjectPrototype');
SP.ClientObjectCollectionPrototype.registerClass('SP.ClientObjectCollectionPrototype', SP.ClientObjectPrototype);
SP.ClientQueryProperty.registerClass('SP.ClientQueryProperty');
SP.ClientQueryInternal.registerClass('SP.ClientQueryInternal', SP.ClientAction);
SP.ClientRequest.registerClass('SP.ClientRequest');
SP.ClientRequestEventArgs.registerClass('SP.ClientRequestEventArgs', Sys.EventArgs);
SP.ClientRequestFailedEventArgs.registerClass('SP.ClientRequestFailedEventArgs', SP.ClientRequestEventArgs);
SP.ClientRequestSucceededEventArgs.registerClass('SP.ClientRequestSucceededEventArgs', SP.ClientRequestEventArgs);
SP.ClientRuntimeContext.registerClass('SP.ClientRuntimeContext', null, Sys.IDisposable);
SP.ClientValueObject.registerClass('SP.ClientValueObject', null, SP.IFromJson);
SP.DataRetrievalWithExpressionString.registerClass('SP.DataRetrievalWithExpressionString');
SP.ClientActionExecutionScopeStart.registerClass('SP.ClientActionExecutionScopeStart', SP.ClientAction);
SP.ClientActionExecutionScopeEnd.registerClass('SP.ClientActionExecutionScopeEnd', SP.ClientAction);
SP.ExecutionScope.registerClass('SP.ExecutionScope', null, IDisposable);
SP.ExceptionHandlingScope.registerClass('SP.ExceptionHandlingScope', null, SP.IFromJson);
SP.ExceptionHandlingExecutionScope.registerClass('SP.ExceptionHandlingExecutionScope', SP.ExecutionScope);
SP.ObjectIdentityQuery.registerClass('SP.ObjectIdentityQuery', SP.ClientAction);
SP.ObjectPath.registerClass('SP.ObjectPath');
SP.ObjectPathProperty.registerClass('SP.ObjectPathProperty', SP.ObjectPath);
SP.ObjectPathStaticProperty.registerClass('SP.ObjectPathStaticProperty', SP.ObjectPath);
SP.ObjectPathMethod.registerClass('SP.ObjectPathMethod', SP.ObjectPath);
SP.ObjectPathStaticMethod.registerClass('SP.ObjectPathStaticMethod', SP.ObjectPath);
SP.ObjectPathConstructor.registerClass('SP.ObjectPathConstructor', SP.ObjectPath);
SP.ObjectPathIdentity.registerClass('SP.ObjectPathIdentity', SP.ObjectPath);
SP.SerializationContext.registerClass('SP.SerializationContext');
SP.OfficeVersion.registerClass('SP.OfficeVersion');
SP.Base64EncodedByteArray.$m_0 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
SP.Base64EncodedByteArray.$H_0 = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/', '='];
SP.DataConvert.$1S_0 = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000'];
SP.ClientConstants.AddExpandoFieldTypeSuffix = 'AddExpandoFieldTypeSuffix';
SP.ClientConstants.Actions = 'Actions';
SP.ClientConstants.ApplicationName = 'ApplicationName';
SP.ClientConstants.Body = 'Body';
SP.ClientConstants.CatchScope = 'CatchScope';
SP.ClientConstants.ChildItemQuery = 'ChildItemQuery';
SP.ClientConstants.ChildItems = '_Child_Items_';
SP.ClientConstants.ConditionalScope = 'ConditionalScope';
SP.ClientConstants.Constructor = 'Constructor';
SP.ClientConstants.Context = 'Context';
SP.ClientConstants.ErrorInfo = 'ErrorInfo';
SP.ClientConstants.ErrorMessage = 'ErrorMessage';
SP.ClientConstants.ErrorStackTrace = 'ErrorStackTrace';
SP.ClientConstants.ErrorCode = 'ErrorCode';
SP.ClientConstants.ErrorTypeName = 'ErrorTypeName';
SP.ClientConstants.ErrorValue = 'ErrorValue';
SP.ClientConstants.ErrorDetails = 'ErrorDetails';
SP.ClientConstants.ExceptionHandlingScope = 'ExceptionHandlingScope';
SP.ClientConstants.ExceptionHandlingScopeSimple = 'ExceptionHandlingScopeSimple';
SP.ClientConstants.QueryableExpression = 'QueryableExpression';
SP.ClientConstants.FinallyScope = 'FinallyScope';
SP.ClientConstants.HasException = 'HasException';
SP.ClientConstants.Id = 'Id';
SP.ClientConstants.Identity = 'Identity';
SP.ClientConstants.IfFalseScope = 'IfFalseScope';
SP.ClientConstants.IfTrueScope = 'IfTrueScope';
SP.ClientConstants.IsNull = 'IsNull';
SP.ClientConstants.LibraryVersion = 'LibraryVersion';
SP.ClientConstants.Count = 'Count';
SP.ClientConstants.Method = 'Method';
SP.ClientConstants.Methods = 'Methods';
SP.ClientConstants.Name = 'Name';
SP.ClientConstants.Object = 'Object';
SP.ClientConstants.ObjectPathId = 'ObjectPathId';
SP.ClientConstants.ObjectPath = 'ObjectPath';
SP.ClientConstants.ObjectPaths = 'ObjectPaths';
SP.ClientConstants.ObjectType = '_ObjectType_';
SP.ClientConstants.ObjectIdentity = '_ObjectIdentity_';
SP.ClientConstants.ObjectIdentityQuery = 'ObjectIdentityQuery';
SP.ClientConstants.ObjectVersion = '_ObjectVersion_';
SP.ClientConstants.Parameter = 'Parameter';
SP.ClientConstants.Parameters = 'Parameters';
SP.ClientConstants.ParentId = 'ParentId';
SP.ClientConstants.Processed = 'Processed';
SP.ClientConstants.Property = 'Property';
SP.ClientConstants.Properties = 'Properties';
SP.ClientConstants.Query = 'Query';
SP.ClientConstants.QueryResult = 'QueryResult';
SP.ClientConstants.Request = 'Request';
SP.ClientConstants.Results = 'Results';
SP.ClientConstants.ScalarProperty = 'ScalarProperty';
SP.ClientConstants.SchemaVersion = 'SchemaVersion';
SP.ClientConstants.ScopeId = 'ScopeId';
SP.ClientConstants.SelectAll = 'SelectAll';
SP.ClientConstants.SelectAllProperties = 'SelectAllProperties';
SP.ClientConstants.SetProperty = 'SetProperty';
SP.ClientConstants.SetStaticProperty = 'SetStaticProperty';
SP.ClientConstants.StaticMethod = 'StaticMethod';
SP.ClientConstants.StaticProperty = 'StaticProperty';
SP.ClientConstants.SuffixChar = '$   Char';
SP.ClientConstants.SuffixByte = '$   Byte';
SP.ClientConstants.SuffixInt16 = '$  Int16';
SP.ClientConstants.SuffixUInt16 = '$ UInt16';
SP.ClientConstants.SuffixInt32 = '$  Int32';
SP.ClientConstants.SuffixUInt32 = '$ UInt32';
SP.ClientConstants.SuffixInt64 = '$  Int64';
SP.ClientConstants.SuffixUInt64 = '$ UInt64';
SP.ClientConstants.SuffixSingle = '$ Single';
SP.ClientConstants.SuffixDouble = '$ Double';
SP.ClientConstants.SuffixArray = '$  Array';
SP.ClientConstants.Test = 'Test';
SP.ClientConstants.TryScope = 'TryScope';
SP.ClientConstants.Type = 'Type';
SP.ClientConstants.TypeId = 'TypeId';
SP.ClientConstants.Update = '$Update';
SP.ClientConstants.Version = 'Version';
SP.ClientConstants.XmlNamespace = 'http://schemas.microsoft.com/sharepoint/clientquery/2009';
SP.ClientConstants.FieldValuesMethodName = '$m_dict';
SP.ClientConstants.RequestTokenHeader = 'X-RequestToken';
SP.ClientConstants.FormDigestHeader = 'X-RequestDigest';
SP.ClientConstants.useWebLanguageHeader = 'X-UseWebLanguage';
SP.ClientConstants.useWebLanguageHeaderValue = 'true';
SP.ClientConstants.greaterThan = 'GT';
SP.ClientConstants.lessThan = 'LT';
SP.ClientConstants.equal = 'EQ';
SP.ClientConstants.notEqual = 'NE';
SP.ClientConstants.greaterThanOrEqual = 'GE';
SP.ClientConstants.lessThanOrEqual = 'LE';
SP.ClientConstants.andAlso = 'AND';
SP.ClientConstants.orElse = 'OR';
SP.ClientConstants.not = 'NOT';
SP.ClientConstants.expressionParameter = 'ExpressionParameter';
SP.ClientConstants.expressionProperty = 'ExpressionProperty';
SP.ClientConstants.expressionStaticProperty = 'ExpressionStaticProperty';
SP.ClientConstants.expressionMethod = 'ExpressionMethod';
SP.ClientConstants.expressionStaticMethod = 'ExpressionStaticMethod';
SP.ClientConstants.expressionConstant = 'ExpressionConstant';
SP.ClientConstants.expressionConvert = 'ExpressionConvert';
SP.ClientConstants.take = 'Take';
SP.ClientConstants.where = 'Where';
SP.ClientConstants.queryableObject = 'QueryableObject';
SP.ClientConstants.ServiceFileName = 'client.svc';
SP.ClientConstants.ServiceMethodName = 'ProcessQuery';
SP.ClientConstants.fluidApplicationInitParamUrl = 'MS.SP.url';
SP.ClientConstants.fluidApplicationInitParamViaUrl = 'MS.SP.viaUrl';
SP.ClientConstants.fluidApplicationInitParamRequestToken = 'MS.SP.requestToken';
SP.ClientConstants.fluidApplicationInitParamFormDigestTimeoutSeconds = 'MS.SP.formDigestTimeoutSeconds';
SP.ClientConstants.fluidApplicationInitParamFormDigest = 'MS.SP.formDigest';
SP.ClientSchemaVersions.version14 = '14.0.0.0';
SP.ClientSchemaVersions.currentVersion = '14.0.0.0';
SP.ClientErrorCodes.genericError = -1;
SP.ClientErrorCodes.accessDenied = -2147024891;
SP.ClientErrorCodes.docAlreadyExists = -2130575257;
SP.ClientErrorCodes.versionConflict = -2130575339;
SP.ClientErrorCodes.listItemDeleted = -2130575338;
SP.ClientErrorCodes.invalidFieldValue = -2130575155;
SP.ClientErrorCodes.notSupported = -2147024846;
SP.ClientErrorCodes.redirect = -2130575152;
SP.ClientErrorCodes.notSupportedRequestVersion = -2130575151;
SP.ClientRequest.$1R_0 = 0;
SP.ClientRequest.$15 = -1;
SP.ClientRequest.$1a = -1;
SP.ClientRequest.$1u_0 = new RegExp('(^|[^\\\\])\\\"\\\\/Date\\(([0-9]+(?:,[0-9]+){2,6})\\)\\\\/\\\"', 'g');
SP.ClientRequest.$1t_0 = new RegExp('(^|[^\\\\])\\\"\\\\/Date\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\+|-)[0-9]{4})\\)\\\\/\\\"', 'g');
SP.ClientRequest.$1v_0 = new RegExp('(^|[^\\\\])\\\"\\\\/Date\\((-?[0-9]+)\\)\\\\/\\\"', 'g');
SP.ClientRequest.$1w_0 = new RegExp('(^|[^\\\\])\\\"\\\\/Guid\\(([0-9a-fA-F\\-]+)\\)\\\\/\\\"', 'g');
SP.ClientRequest.$1s_0 = new RegExp('(^|[^\\\\])\\\"\\\\/Base64Binary\\(([^\\)]*)\\)\\\\/\\\"', 'g');
SP.OfficeVersion.majorBuildVersion = 14;
SP.OfficeVersion.majorVersion = '14';
SP.OfficeVersion.previousVersion = '12';
SP.OfficeVersion.majorVersionDotZero = '14.0';
SP.OfficeVersion.previousVersionDotZero = '12.0';
SP.OfficeVersion.assemblyVersion = '14.0.0.0';
SP.OfficeVersion.fullBuildVersion = '14.0.4762.1000';
SP.OfficeVersion.fullBuildBase = '14.0.4762.0';
SP.OfficeVersion.wssMajorVersion = '4';

SP.ClientRequest._validateJson = function SP_ClientRequest$validateJson(text) {
    ULSqiZ: ;
    // Use the regular expression from http://www.json.org/json2.js  to validate the 
    // JSON response
    return (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, '')));
}

////////////////////////////////////////////////////////////////////////////////
// SP.Result

SP.Result = function SP_Result() {}
SP.Result.prototype = {
    m_value: 0,

    get_value: function SP_Result$get_value() {
        ULSqiZ: ;
        return this.m_value;
    },

    fromJson: function SP_Result$fromJson(obj) {
        ULSqiZ: ;
        this.m_value = obj;
    },
    customFromJson: function SP_Result$customFromJson(obj) {
        ULSqiZ: ;
        return false;
    }
}
SP.Result.registerClass('SP.Result', null, SP.IFromJson);
SP.BooleanResult = SP.Result;
SP.ByteResult = SP.Result;
SP.IntResult = SP.Result;
SP.DoubleResult = SP.Result;
SP.DateTimeResult = SP.Result;
SP.GuidResult = SP.Result;
SP.StringResult = SP.Result;

if (typeof(Sys) != "undefined" && Sys && Sys.Application) {
    Sys.Application.notifyScriptLoaded();
}
NotifyScriptLoadedAndExecuteWaitingJobs("sp.runtime.js");


/***** Insert sp.DEBUG.js here              ***************/
function ULS5Vl() {
    var o = new Object;
    o.ULSTeamName = "Microsoft SharePoint Foundation";
    o.ULSFileName = "SP.debug.js";
    return o;
}
// JScript File


Type.registerNamespace('SP');

SP.PermissionKind = function() {}
SP.PermissionKind.prototype = {
    emptyMask: 0,
    viewListItems: 1,
    addListItems: 2,
    editListItems: 3,
    deleteListItems: 4,
    approveItems: 5,
    openItems: 6,
    viewVersions: 7,
    deleteVersions: 8,
    cancelCheckout: 9,
    managePersonalViews: 10,
    manageLists: 12,
    viewFormPages: 13,
    open: 17,
    viewPages: 18,
    addAndCustomizePages: 19,
    applyThemeAndBorder: 20,
    applyStyleSheets: 21,
    viewUsageData: 22,
    createSSCSite: 23,
    manageSubwebs: 24,
    createGroups: 25,
    managePermissions: 26,
    browseDirectories: 27,
    browseUserInfo: 28,
    addDelPrivateWebParts: 29,
    updatePersonalWebParts: 30,
    manageWeb: 31,
    useClientIntegration: 37,
    useRemoteAPIs: 38,
    manageAlerts: 39,
    createAlerts: 40,
    editMyUserInfo: 41,
    enumeratePermissions: 63,
    fullMask: 65
}
SP.PermissionKind.registerEnum('SP.PermissionKind', false);


SP.ULSTraceLevel = function() {}
SP.ULSTraceLevel.prototype = {
    verbose: 100
}
SP.ULSTraceLevel.registerEnum('SP.ULSTraceLevel', false);


SP.AddFieldOptions = function() {}
SP.AddFieldOptions.prototype = {
    defaultValue: 0,
    addToDefaultContentType: 1,
    addToNoContentType: 2,
    addToAllContentTypes: 4,
    addFieldInternalNameHint: 8,
    addFieldToDefaultView: 16,
    addFieldCheckDisplayName: 32
}
SP.AddFieldOptions.registerEnum('SP.AddFieldOptions', false);


SP.BaseType = function() {}
SP.BaseType.prototype = {
    none: -1,
    genericList: 0,
    documentLibrary: 1,
    unused: 2,
    discussionBoard: 3,
    survey: 4,
    issue: 5
}
SP.BaseType.registerEnum('SP.BaseType', false);


SP.BrowserFileHandling = function() {}
SP.BrowserFileHandling.prototype = {
    permissive: 0,
    strict: 1
}
SP.BrowserFileHandling.registerEnum('SP.BrowserFileHandling', false);


SP.CalendarType = function() {}
SP.CalendarType.prototype = {
    none: 0,
    gregorian: 1,
    japan: 3,
    taiwan: 4,
    korea: 5,
    hijri: 6,
    thai: 7,
    hebrew: 8,
    gregorianMEFrench: 9,
    gregorianArabic: 10,
    gregorianXLITEnglish: 11,
    gregorianXLITFrench: 12,
    koreaJapanLunar: 14,
    chineseLunar: 15,
    sakaEra: 16
}
SP.CalendarType.registerEnum('SP.CalendarType', false);


SP.ChangeType = function() {}
SP.ChangeType.prototype = {
    noChange: 0,
    add: 1,
    update: 2,
    deleteObject: 3,
    rename: 4,
    moveAway: 5,
    moveInto: 6,
    restore: 7,
    roleAdd: 8,
    roleDelete: 9,
    roleUpdate: 10,
    assignmentAdd: 11,
    assignmentDelete: 12,
    memberAdd: 13,
    memberDelete: 14,
    systemUpdate: 15,
    navigation: 16,
    scopeAdd: 17,
    scopeDelete: 18,
    listContentTypeAdd: 19,
    listContentTypeDelete: 20
}
SP.ChangeType.registerEnum('SP.ChangeType', false);


SP.CheckinType = function() {}
SP.CheckinType.prototype = {
    minorCheckIn: 0,
    majorCheckIn: 1,
    overwriteCheckIn: 2
}
SP.CheckinType.registerEnum('SP.CheckinType', false);


SP.CheckOutType = function() {}
SP.CheckOutType.prototype = {
    online: 0,
    offline: 1,
    none: 2
}
SP.CheckOutType.registerEnum('SP.CheckOutType', false);


SP.ChoiceFormatType = function() {}
SP.ChoiceFormatType.prototype = {
    dropdown: 0,
    radioButtons: 1
}
SP.ChoiceFormatType.registerEnum('SP.ChoiceFormatType', false);


SP.CustomizedPageStatus = function() {}
SP.CustomizedPageStatus.prototype = {
    none: 0,
    uncustomized: 1,
    customized: 2
}
SP.CustomizedPageStatus.registerEnum('SP.CustomizedPageStatus', false);


SP.DateTimeFieldFormatType = function() {}
SP.DateTimeFieldFormatType.prototype = {
    dateOnly: 0,
    dateTime: 1
}
SP.DateTimeFieldFormatType.registerEnum('SP.DateTimeFieldFormatType', false);


SP.DraftVisibilityType = function() {}
SP.DraftVisibilityType.prototype = {
    reader: 0,
    author: 1,
    approver: 2
}
SP.DraftVisibilityType.registerEnum('SP.DraftVisibilityType', false);


SP.FeatureDefinitionScope = function() {}
SP.FeatureDefinitionScope.prototype = {
    none: 0,
    farm: 1,
    site: 2
}
SP.FeatureDefinitionScope.registerEnum('SP.FeatureDefinitionScope', false);


SP.FieldType = function() {}
SP.FieldType.prototype = {
    invalid: 0,
    integer: 1,
    text: 2,
    note: 3,
    dateTime: 4,
    counter: 5,
    choice: 6,
    lookup: 7,
    boolean: 8,
    number: 9,
    currency: 10,
    URL: 11,
    computed: 12,
    threading: 13,
    guid: 14,
    multiChoice: 15,
    gridChoice: 16,
    calculated: 17,
    file: 18,
    attachments: 19,
    user: 20,
    recurrence: 21,
    crossProjectLink: 22,
    modStat: 23,
    error: 24,
    contentTypeId: 25,
    pageSeparator: 26,
    threadIndex: 27,
    workflowStatus: 28,
    allDayEvent: 29,
    workflowEventType: 30,
    maxItems: 31
}
SP.FieldType.registerEnum('SP.FieldType', false);


SP.FieldUserSelectionMode = function() {}
SP.FieldUserSelectionMode.prototype = {
    peopleOnly: 0,
    peopleAndGroups: 1
}
SP.FieldUserSelectionMode.registerEnum('SP.FieldUserSelectionMode', false);


SP.FileLevel = function() {}
SP.FileLevel.prototype = {
    published: 1,
    draft: 2,
    checkout: 255
}
SP.FileLevel.registerEnum('SP.FileLevel', false);


SP.FileSystemObjectType = function() {}
SP.FileSystemObjectType.prototype = {
    invalid: -1,
    file: 0,
    folder: 1,
    web: 2
}
SP.FileSystemObjectType.registerEnum('SP.FileSystemObjectType', false);


SP.ListDataValidationFailureReason = function() {}
SP.ListDataValidationFailureReason.prototype = {
    dataFailure: 0,
    formulaError: 1
}
SP.ListDataValidationFailureReason.registerEnum('SP.ListDataValidationFailureReason', false);


SP.ListDataValidationType = function() {}
SP.ListDataValidationType.prototype = {
    userFormulaField: 0,
    userFormulaItem: 1,
    requiredField: 2,
    choiceField: 3,
    minMaxField: 4,
    textField: 5
}
SP.ListDataValidationType.registerEnum('SP.ListDataValidationType', false);


SP.ListTemplateType = function() {}
SP.ListTemplateType.prototype = {
    invalidType: -1,
    noListTemplate: 0,
    genericList: 100,
    documentLibrary: 101,
    survey: 102,
    links: 103,
    announcements: 104,
    contacts: 105,
    events: 106,
    tasks: 107,
    discussionBoard: 108,
    pictureLibrary: 109,
    dataSources: 110,
    webTemplateCatalog: 111,
    userInformation: 112,
    webPartCatalog: 113,
    listTemplateCatalog: 114,
    xmlForm: 115,
    masterPageCatalog: 116,
    noCodeWorkflows: 117,
    workflowProcess: 118,
    webPageLibrary: 119,
    customGrid: 120,
    solutionCatalog: 121,
    noCodePublic: 122,
    themeCatalog: 123,
    dataConnectionLibrary: 130,
    workflowHistory: 140,
    ganttTasks: 150,
    meetings: 200,
    agenda: 201,
    meetingUser: 202,
    decision: 204,
    meetingObjective: 207,
    textBox: 210,
    thingsToBring: 211,
    homePageLibrary: 212,
    posts: 301,
    comments: 302,
    categories: 303,
    facility: 402,
    whereabouts: 403,
    callTrack: 404,
    circulation: 405,
    timecard: 420,
    holidays: 421,
    imeDic: 499,
    externalList: 600,
    issueTracking: 1100,
    adminTasks: 1200,
    healthRules: 1220,
    healthReports: 1221
}
SP.ListTemplateType.registerEnum('SP.ListTemplateType', false);


SP.MoveOperations = function() {}
SP.MoveOperations.prototype = {
    none: 0,
    overwrite: 1,
    allowBrokenThickets: 8,
    bypassApprovePermission: 64
}
SP.MoveOperations.registerEnum('SP.MoveOperations', false);


SP.PageType = function() {}
SP.PageType.prototype = {
    invalid: -1,
    defaultView: 0,
    normalView: 1,
    dialogView: 2,
    view: 3,
    displayForm: 4,
    displayFormDialog: 5,
    editForm: 6,
    editFormDialog: 7,
    newForm: 8,
    newFormDialog: 9,
    solutionForm: 10,
    pagE_MAXITEMS: 11
}
SP.PageType.registerEnum('SP.PageType', false);


SP.QuickLaunchOptions = function() {}
SP.QuickLaunchOptions.prototype = {
    off: 0,
    on: 1,
    defaultValue: 2
}
SP.QuickLaunchOptions.registerEnum('SP.QuickLaunchOptions', false);


SP.RecycleBinItemState = function() {}
SP.RecycleBinItemState.prototype = {
    none: 0,
    firstStageRecycleBin: 1,
    secondStageRecycleBin: 2
}
SP.RecycleBinItemState.registerEnum('SP.RecycleBinItemState', false);


SP.RecycleBinItemType = function() {}
SP.RecycleBinItemType.prototype = {
    none: 0,
    file: 1,
    fileVersion: 2,
    listItem: 3,
    list: 4,
    folder: 5,
    folderWithLists: 6,
    attachment: 7,
    listItemVersion: 8,
    cascadeParent: 9
}
SP.RecycleBinItemType.registerEnum('SP.RecycleBinItemType', false);


SP.RelationshipDeleteBehaviorType = function() {}
SP.RelationshipDeleteBehaviorType.prototype = {
    none: 0,
    cascade: 1,
    restrict: 2
}
SP.RelationshipDeleteBehaviorType.registerEnum('SP.RelationshipDeleteBehaviorType', false);


SP.RoleType = function() {}
SP.RoleType.prototype = {
    none: 0,
    guest: 1,
    reader: 2,
    contributor: 3,
    webDesigner: 4,
    administrator: 5
}
SP.RoleType.registerEnum('SP.RoleType', false);


SP.TemplateFileType = function() {}
SP.TemplateFileType.prototype = {
    standardPage: 0,
    wikiPage: 1,
    formPage: 2
}
SP.TemplateFileType.registerEnum('SP.TemplateFileType', false);


SP.UrlFieldFormatType = function() {}
SP.UrlFieldFormatType.prototype = {
    hyperlink: 0,
    image: 1
}
SP.UrlFieldFormatType.registerEnum('SP.UrlFieldFormatType', false);


SP.UserCustomActionRegistrationType = function() {}
SP.UserCustomActionRegistrationType.prototype = {
    none: 0,
    list: 1,
    contentType: 2,
    progId: 3,
    fileType: 4
}
SP.UserCustomActionRegistrationType.registerEnum('SP.UserCustomActionRegistrationType', false);


SP.UserCustomActionScope = function() {}
SP.UserCustomActionScope.prototype = {
    unknown: 0,
    site: 2,
    web: 3,
    list: 4
}
SP.UserCustomActionScope.registerEnum('SP.UserCustomActionScope', false);


SP.ViewScope = function() {}
SP.ViewScope.prototype = {
    defaultValue: 0,
    recursive: 1,
    recursiveAll: 2,
    filesOnly: 3
}
SP.ViewScope.registerEnum('SP.ViewScope', false);


SP.ViewType = function() {}
SP.ViewType.prototype = {
    none: 0,
    html: 1,
    grid: 2048,
    calendar: 524288,
    recurrence: 8193,
    chart: 131072,
    gantt: 67108864
}
SP.ViewType.registerEnum('SP.ViewType', false);


SP.ClientContext = function(serverRelativeUrl) {
    ULS5Vl: ;
    SP.ClientContext.initializeBase(this, [(SP.ScriptUtility.isNullOrUndefined(serverRelativeUrl)) ? SP.PageContextInfo.get_webServerRelativeUrl() : serverRelativeUrl]);
}
SP.ClientContext.get_current = function() {
    ULS5Vl: ;
    if (!SP.ClientContext.$1S_1) {
        SP.ClientContext.$1S_1 = new SP.ClientContext(SP.PageContextInfo.get_webServerRelativeUrl());
    }
    return SP.ClientContext.$1S_1;
}
SP.ClientContext.prototype = {
    $N_1: null,

    get_web: function() {
        ULS5Vl: ;
        if (!this.$N_1) {
            var $v_0 = SP.RequestContext.getCurrent(this);
            this.$N_1 = $v_0.get_web();
        }
        return this.$N_1;
    },

    $M_1: null,

    get_site: function() {
        ULS5Vl: ;
        if (!this.$M_1) {
            var $v_0 = SP.RequestContext.getCurrent(this);
            this.$M_1 = $v_0.get_site();
        }
        return this.$M_1;
    },

    get_serverVersion: function() {
        ULS5Vl: ;
        return this.get_serverLibraryVersion();
    }
}


SP.PageContextInfo = function() {}
SP.PageContextInfo.get_$g_0 = function() {
    ULS5Vl: ;
    if (!SP.PageContextInfo.$1T_0) {
        SP.PageContextInfo.$1T_0 = window._spPageContextInfo;
    }
    return SP.PageContextInfo.$1T_0;
}
SP.PageContextInfo.get_webServerRelativeUrl = function() {
    ULS5Vl: ;
    return SP.PageContextInfo.get_$g_0().webServerRelativeUrl;
}
SP.PageContextInfo.get_webLanguage = function() {
    ULS5Vl: ;
    return SP.PageContextInfo.get_$g_0().webLanguage;
}
SP.PageContextInfo.get_currentLanguage = function() {
    ULS5Vl: ;
    return SP.PageContextInfo.get_$g_0().currentLanguage;
}
SP.PageContextInfo.get_pageItemId = function() {
    ULS5Vl: ;
    return SP.PageContextInfo.get_$g_0().pageItemId;
}
SP.PageContextInfo.get_pageListId = function() {
    ULS5Vl: ;
    return SP.PageContextInfo.get_$g_0().pageListId;
}


SP.ULS = function() {}
SP.ULS.$2x_0 = function() {
    ULS5Vl: ;
    if (SP.ULS.$2T_0) {
        return null;
    }
    var $v_0 = window.top.s_sp_debugWindow;
    if (SP.ScriptUtility.isNullOrUndefined($v_0) || $v_0.closed) {
        try {
            $v_0 = window.open('/_layouts/blank.htm', null, 'width=400,height=200,scrollbars=yes,resizable=yes,status=no,location=no,menubar=no,toolbar=no');
        } catch ($$e_2_0) {
            SP.ULS.$2T_0 = true;
        }
        if ($v_0) {
            window.setTimeout(SP.ULS.$3q_0, 100);
        }
        window.top.s_sp_debugWindow = $v_0;
    }
    return $v_0;
}
SP.ULS.$3q_0 = function() {
    ULS5Vl: ;
    var $v_0 = window.top.s_sp_debugWindow;
    if (!$v_0) {
        return;
    }
    try {
        var $v_1 = $v_0.document;
        var $v_2;
        $v_2 = $v_1.createElement('DIV');
        $v_1.body.appendChild($v_2);
        var $v_3 = $v_1.createElement('INPUT');
        $v_3.setAttribute('type', 'checkbox');
        $v_3.id = 'UlsConfigTraceApi';
        $v_2.appendChild($v_3);
        $v_2.appendChild($v_1.createTextNode('Trace API'));
        $v_2 = $v_1.createElement('DIV');
        $v_2.id = 'UlsLogs';
        $v_1.body.appendChild($v_2);
        $v_2 = $v_1.getElementById('UlsLogs');
        $v_2.appendChild($v_1.createTextNode('Use double-click to clear the entries.'));
        $addHandler($v_1.body, 'dblclick', SP.ULS.$3f_0);
        $addHandler($v_3, 'click', SP.ULS.$4F_0);
        $v_1.title = 'Debug Output';
    } catch ($$e_1_0) {}
}
SP.ULS.get_enabled = function() {
    ULS5Vl: ;
    return SP.ULS.$W_0;
}
SP.ULS.set_enabled = function(value) {
    ULS5Vl: ;
    SP.ULS.$W_0 = value;
    return value;
}
SP.ULS.log = function(debugMessage) {
    ULS5Vl: ;
    if (!SP.ULS.$W_0) {
        return;
    }
    var $v_0 = (new Date()).format('hh:mm:ss.ffff');
    var $v_1 = SP.ULS.$H_0 + debugMessage;
    if (SP.ULS.$E_0) {
        for (var $v_3 = 0; $v_3 < SP.ULS.$E_0.length; $v_3++) {
            var $v_4 = SP.ULS.$E_0[$v_3];
            var $v_5 = SP.ULS.$32_0($v_4['time'], $v_4['msg']);
            if (!$v_5) {
                SP.ULS.$3Y_0($v_0, $v_1);
                return;
            }
        }
        SP.ULS.$E_0 = null;
    }
    var $v_2 = SP.ULS.$32_0($v_0, $v_1);
    if (!$v_2) {
        SP.ULS.$3Y_0($v_0, $v_1);
    }
}
SP.ULS.$3Y_0 = function($p0, $p1) {
    if (!SP.ULS.$E_0) {
        SP.ULS.$E_0 = new Array(0);
    }
    var $v_0 = {};
    $v_0['time'] = $p0;
    $v_0['msg'] = $p1;
    SP.ULS.$E_0[SP.ULS.$E_0.length] = $v_0;
}
SP.ULS.$32_0 = function($p0, $p1) {
    var $v_0 = SP.ULS.$2x_0();
    if ($v_0) {
        try {
            var $v_1 = $v_0.document.createElement('DIV');
            $v_1.style.fontSize = '8pt';
            $v_1.style.fontFamily = 'Consolas, Courier, Sans-Serif';
            if (SP.ULS.$1R_0) {
                $v_1.style.backgroundColor = 'gray';
            }
            SP.ULS.$1R_0 = !SP.ULS.$1R_0;
            var $v_2 = $v_0.document.createElement('SPAN');
            $v_2.style.fontWeight = 'bold';
            var $v_3 = $v_0.document.createElement('SPAN');
            $v_1.appendChild($v_2);
            $v_1.appendChild($v_3);
            var $v_4 = $v_0.document.getElementById('UlsLogs');
            if ($v_4) {
                $v_4.appendChild($v_1);
                SP.UI.UIUtility.setInnerText($v_2, $p0);
                SP.UI.UIUtility.setInnerText($v_3, $p1);
                return true;
            }
        } catch ($$e_2_0) {}
    }
    return false;
}
SP.ULS.$3f_0 = function($p0) {
    var $v_0 = SP.ULS.$2x_0();
    if ($v_0 && $v_0.document) {
        $v_0.document.getElementById('UlsLogs').innerHTML = '';
    }
}
SP.ULS.$4F_0 = function($p0) {
    SP.ULS.$1U_0 = ($p0.target).checked;
}
SP.ULS.increaseIndent = function() {
    ULS5Vl: ;
    SP.ULS.$2U_0++;
    SP.ULS.$H_0 = SP.ULS.$H_0 + String.fromCharCode(160);
}
SP.ULS.decreaseIndent = function() {
    ULS5Vl: ;
    SP.ULS.$2U_0--;
    if (SP.ULS.$H_0.length > 0) {
        SP.ULS.$H_0 = SP.ULS.$H_0.substr(0, SP.ULS.$H_0.length - 1);
    }
}
SP.ULS.traceApiEnter = function(functionName) {
    ULS5Vl: ;
    if (!SP.ULS.$W_0) {
        return;
    }
    if (!SP.ULS.$1U_0) {
        return;
    }
    SP.ULS.$2V_0.push(functionName);
    var $v_0 = 'Enter ' + functionName + '(';
    for (var $v_1 = 1; $v_1 < arguments.length; $v_1++) {
        var $v_2 = arguments[$v_1];
        if ($v_1 !== 1) {
            $v_0 = $v_0 + ', ';
        }
        switch (typeof($v_2)) {
            case 'number':
                $v_0 = $v_0 + $v_2.toString();
                break;
            case 'string':
                $v_0 = $v_0 + $v_2;
                break;
            case 'boolean':
                $v_0 = $v_0 + $v_2.toString();
                break;
            case 'object':
                $v_0 = $v_0 + '[object]';
                break;
            default:
                $v_0 = $v_0 + '[unknownobj]';
                break;
        }
    }
    $v_0 += ')';
    SP.ULS.log($v_0);
    SP.ULS.increaseIndent();
}
SP.ULS.traceApiLeave = function() {
    ULS5Vl: ;
    if (!SP.ULS.$W_0) {
        return;
    }
    if (!SP.ULS.$1U_0) {
        return;
    }
    SP.ULS.decreaseIndent();
    var $v_0 = SP.ULS.$2V_0.pop();
    var $v_1 = 'Leave ' + $v_0;
    SP.ULS.log($v_1);
}


SP.BasePermissions = function() {
    ULS5Vl: ;
    SP.BasePermissions.initializeBase(this);
}
SP.BasePermissions.prototype = {
    $3_1: 0,
    $4_1: 0,

    set: function(perm) {
        ULS5Vl: ;
        if (perm === 65) {
            this.$4_1 = 65535;
            this.$3_1 = 32767;
            return;
        }
        if (!perm) {
            this.$4_1 = 0;
            this.$3_1 = 0;
            return;
        }
        var $v_0 = perm;
        $v_0 = $v_0 - 1;
        var $v_1 = 1;
        if ($v_0 >= 0 && $v_0 < 32) {
            $v_1 = $v_1 << $v_0;
            this.$4_1 = this.$4_1 | $v_1;
        } else if ($v_0 >= 32 && $v_0 < 64) {
            $v_1 = $v_1 << ($v_0 - 32);
            this.$3_1 = this.$3_1 | $v_1;
        }
    },

    clear: function(perm) {
        ULS5Vl: ;
        var $v_0 = perm;
        $v_0 = $v_0 - 1;
        var $v_1 = 1;
        if ($v_0 >= 0 && $v_0 < 32) {
            $v_1 = $v_1 << $v_0;
            $v_1 = ~$v_1;
            this.$4_1 = this.$4_1 & $v_1;
        } else if ($v_0 >= 32 && $v_0 < 64) {
            $v_1 = $v_1 << ($v_0 - 32);
            $v_1 = ~$v_1;
            this.$3_1 = this.$3_1 & $v_1;
        }
    },

    clearAll: function() {
        ULS5Vl: ;
        this.$3_1 = 0;
        this.$4_1 = 0;
    },

    has: function(perm) {
        ULS5Vl: ;
        if (!perm) {
            return true;
        }
        if (perm === 65) {
            return (this.$3_1 & 32767) === 32767 && this.$4_1 === 65535;
        }
        var $v_0 = perm;
        $v_0 = $v_0 - 1;
        var $v_1 = 1;
        if ($v_0 >= 0 && $v_0 < 32) {
            $v_1 = $v_1 << $v_0;
            return 0 !== (this.$4_1 & $v_1);
        } else if ($v_0 >= 32 && $v_0 < 64) {
            $v_1 = $v_1 << ($v_0 - 32);
            return 0 !== (this.$3_1 & $v_1);
        }
        return false;
    },

    equals: function(perm) {
        ULS5Vl: ;
        if (!perm) {
            return false;
        }
        return perm.$3_1 === this.$3_1 && perm.$4_1 === this.$4_1;
    },

    hasPermissions: function(high, low) {
        ULS5Vl: ;
        return ((this.$3_1 & high) === high) && ((this.$4_1 & low) === low);
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{db780e5a-6bc6-41ad-8e64-9dfa761afb6d}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        writer.writeStartElement(SP.ClientConstants.Property);
        writer.writeAttributeString(SP.ClientConstants.Name, 'High');
        SP.DataConvert.writeValueToXmlElement(writer, this.$3_1, serializationContext);
        writer.writeEndElement();
        writer.writeStartElement(SP.ClientConstants.Property);
        writer.writeAttributeString(SP.ClientConstants.Name, 'Low');
        SP.DataConvert.writeValueToXmlElement(writer, this.$4_1, serializationContext);
        writer.writeEndElement();
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.High;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3_1 = ($v_0);
            delete parentNode.High;
        }
        $v_0 = parentNode.Low;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$4_1 = ($v_0);
            delete parentNode.Low;
        }
    }
}


SP.CamlQuery = function() {
    ULS5Vl: ;
    SP.CamlQuery.initializeBase(this);
    this.$w_1 = true;
}
SP.CamlQuery.createAllItemsQuery = function() {
    ULS5Vl: ;
    var $v_0 = new SP.CamlQuery();
    $v_0.$d_1 = '<View Scope=\"RecursiveAll\">\r\n    <Query>\r\n    </Query>\r\n</View>';
    return $v_0;
}
SP.CamlQuery.createAllFoldersQuery = function() {
    ULS5Vl: ;
    var $v_0 = new SP.CamlQuery();
    $v_0.$d_1 = '<View Scope=\"RecursiveAll\">\r\n    <Query>\r\n        <Where>\r\n            <Eq>\r\n                <FieldRef Name=\"FSObjType\" />\r\n                <Value Type=\"Integer\">1</Value>\r\n            </Eq>\r\n        </Where>\r\n    </Query>\r\n</View>';
    return $v_0;
}
SP.CamlQuery.prototype = {
    $20_1: null,
    $w_1: false,
    $d_1: null,
    $26_1: null,

    get_folderServerRelativeUrl: function() {
        ULS5Vl: ;
        return this.$20_1;
    },
    set_folderServerRelativeUrl: function(value) {
        ULS5Vl: ;
        this.$20_1 = value;
        return value;
    },

    get_datesInUtc: function() {
        ULS5Vl: ;
        return this.$w_1;
    },
    set_datesInUtc: function(value) {
        ULS5Vl: ;
        this.$w_1 = value;
        return value;
    },

    get_viewXml: function() {
        ULS5Vl: ;
        return this.$d_1;
    },
    set_viewXml: function(value) {
        ULS5Vl: ;
        this.$d_1 = value;
        return value;
    },

    get_listItemCollectionPosition: function() {
        ULS5Vl: ;
        return this.$26_1;
    },
    set_listItemCollectionPosition: function(value) {
        ULS5Vl: ;
        this.$26_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{3d248d7b-fc86-40a3-aa97-02a75d69fb8a}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['FolderServerRelativeUrl', 'DatesInUtc', 'ViewXml', 'ListItemCollectionPosition'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.FolderServerRelativeUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$20_1 = ($v_0);
            delete parentNode.FolderServerRelativeUrl;
        }
        $v_0 = parentNode.DatesInUtc;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$w_1 = ($v_0);
            delete parentNode.DatesInUtc;
        }
        $v_0 = parentNode.ViewXml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$d_1 = ($v_0);
            delete parentNode.ViewXml;
        }
        $v_0 = parentNode.ListItemCollectionPosition;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$26_1 = ((SP.DataConvert.fixupType(null, $v_0)));
            delete parentNode.ListItemCollectionPosition;
        }
    }
}


SP.Change = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Change.initializeBase(this, [Context, ObjectPath]);
}
SP.Change.prototype = {

    get_changeType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ChangeType');
        return ((this.get_objectData().get_properties()['ChangeType']));
    },

    get_siteId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SiteId');
        return ((this.get_objectData().get_properties()['SiteId']));
    },

    get_time: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Time');
        return ((this.get_objectData().get_properties()['Time']));
    },

    get_changeToken: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ChangeToken');
        return ((this.get_objectData().get_properties()['ChangeToken']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Change.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.ChangeType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ChangeType'] = ($v_0);
            delete parentNode.ChangeType;
        }
        $v_0 = parentNode.SiteId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SiteId'] = ($v_0);
            delete parentNode.SiteId;
        }
        $v_0 = parentNode.Time;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Time'] = ($v_0);
            delete parentNode.Time;
        }
        $v_0 = parentNode.ChangeToken;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ChangeToken'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.ChangeToken;
        }
    }
}


SP.ChangePropertyNames = function() {}


SP.ChangeAlert = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeAlert.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeAlert.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_alertId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AlertId');
        return ((this.get_objectData().get_properties()['AlertId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeAlert.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.AlertId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AlertId'] = ($v_0);
            delete parentNode.AlertId;
        }
    }
}


SP.ChangeAlertPropertyNames = function() {}


SP.ChangeCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    }
}


SP.ChangeContentType = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeContentType.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeContentType.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_contentTypeId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ContentTypeId');
        return ((this.get_objectData().get_properties()['ContentTypeId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeContentType.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.ContentTypeId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ContentTypeId'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.ContentTypeId;
        }
    }
}


SP.ChangeContentTypePropertyNames = function() {}


SP.ChangeField = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeField.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeField.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_fieldId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FieldId');
        return ((this.get_objectData().get_properties()['FieldId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeField.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.FieldId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FieldId'] = ($v_0);
            delete parentNode.FieldId;
        }
    }
}


SP.ChangeFieldPropertyNames = function() {}


SP.ChangeFile = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeFile.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeFile.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_uniqueId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UniqueId');
        return ((this.get_objectData().get_properties()['UniqueId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeFile.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.UniqueId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UniqueId'] = ($v_0);
            delete parentNode.UniqueId;
        }
    }
}


SP.ChangeFilePropertyNames = function() {}


SP.ChangeFolder = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeFolder.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeFolder.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_uniqueId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UniqueId');
        return ((this.get_objectData().get_properties()['UniqueId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeFolder.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.UniqueId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UniqueId'] = ($v_0);
            delete parentNode.UniqueId;
        }
    }
}


SP.ChangeFolderPropertyNames = function() {}


SP.ChangeGroup = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeGroup.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeGroup.prototype = {

    get_groupId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('GroupId');
        return ((this.get_objectData().get_properties()['GroupId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeGroup.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.GroupId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['GroupId'] = ($v_0);
            delete parentNode.GroupId;
        }
    }
}


SP.ChangeGroupPropertyNames = function() {}


SP.ChangeItem = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeItem.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeItem.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_listId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListId');
        return ((this.get_objectData().get_properties()['ListId']));
    },

    get_itemId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ItemId');
        return ((this.get_objectData().get_properties()['ItemId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeItem.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.ListId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListId'] = ($v_0);
            delete parentNode.ListId;
        }
        $v_0 = parentNode.ItemId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ItemId'] = ($v_0);
            delete parentNode.ItemId;
        }
    }
}


SP.ChangeItemPropertyNames = function() {}


SP.ChangeList = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeList.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeList.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_listId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListId');
        return ((this.get_objectData().get_properties()['ListId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeList.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.ListId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListId'] = ($v_0);
            delete parentNode.ListId;
        }
    }
}


SP.ChangeListPropertyNames = function() {}


SP.ChangeQuery = function(allChangeObjectTypes, allChangeTypes) {
    ULS5Vl: ;
    SP.ChangeQuery.initializeBase(this);
    if (!arguments.length) {
        allChangeObjectTypes = false;
        allChangeTypes = false;
    }
    this.$3w_1(allChangeObjectTypes, allChangeTypes);
}
SP.ChangeQuery.prototype = {
    $1r_1: null,
    $1q_1: null,
    $13_1: false,
    $G_1: false,
    $N_1: false,
    $M_1: false,
    $z_1: false,
    $10_1: false,
    $r_1: false,
    $1M_1: false,
    $F_1: false,
    $v_1: false,
    $K_1: false,
    $1H_1: false,
    $1N_1: false,
    $q_1: false,
    $1L_1: false,
    $x_1: false,
    $1A_1: false,
    $14_1: false,
    $1B_1: false,
    $1E_1: false,
    $1F_1: false,
    $1G_1: false,
    $1C_1: false,
    $1D_1: false,
    $11_1: false,
    $12_1: false,
    $1I_1: false,
    $15_1: false,

    $3w_1: function($p0, $p1) {
        if ($p0) {
            this.$13_1 = true;
            this.$G_1 = true;
            this.$N_1 = true;
            this.$M_1 = true;
            this.$z_1 = true;
            this.$10_1 = true;
            this.$r_1 = true;
            this.$1M_1 = true;
            this.$F_1 = true;
            this.$v_1 = true;
            this.$K_1 = true;
            this.$1H_1 = true;
            this.$1N_1 = true;
        }
        if ($p1) {
            this.$q_1 = true;
            this.$1L_1 = true;
            this.$x_1 = true;
            this.$1A_1 = true;
            this.$14_1 = true;
            this.$1B_1 = true;
            this.$1E_1 = true;
            this.$1F_1 = true;
            this.$1G_1 = true;
            this.$1C_1 = true;
            this.$1D_1 = true;
            this.$11_1 = true;
            this.$12_1 = true;
            this.$1I_1 = true;
            this.$15_1 = true;
        }
    },

    get_changeTokenStart: function() {
        ULS5Vl: ;
        return this.$1r_1;
    },
    set_changeTokenStart: function(value) {
        ULS5Vl: ;
        this.$1r_1 = value;
        return value;
    },

    get_changeTokenEnd: function() {
        ULS5Vl: ;
        return this.$1q_1;
    },
    set_changeTokenEnd: function(value) {
        ULS5Vl: ;
        this.$1q_1 = value;
        return value;
    },

    get_item: function() {
        ULS5Vl: ;
        return this.$13_1;
    },
    set_item: function(value) {
        ULS5Vl: ;
        this.$13_1 = value;
        return value;
    },

    get_list: function() {
        ULS5Vl: ;
        return this.$G_1;
    },
    set_list: function(value) {
        ULS5Vl: ;
        this.$G_1 = value;
        return value;
    },

    get_web: function() {
        ULS5Vl: ;
        return this.$N_1;
    },
    set_web: function(value) {
        ULS5Vl: ;
        this.$N_1 = value;
        return value;
    },

    get_site: function() {
        ULS5Vl: ;
        return this.$M_1;
    },
    set_site: function(value) {
        ULS5Vl: ;
        this.$M_1 = value;
        return value;
    },

    get_file: function() {
        ULS5Vl: ;
        return this.$z_1;
    },
    set_file: function(value) {
        ULS5Vl: ;
        this.$z_1 = value;
        return value;
    },

    get_folder: function() {
        ULS5Vl: ;
        return this.$10_1;
    },
    set_folder: function(value) {
        ULS5Vl: ;
        this.$10_1 = value;
        return value;
    },

    get_alert: function() {
        ULS5Vl: ;
        return this.$r_1;
    },
    set_alert: function(value) {
        ULS5Vl: ;
        this.$r_1 = value;
        return value;
    },

    get_user: function() {
        ULS5Vl: ;
        return this.$1M_1;
    },
    set_user: function(value) {
        ULS5Vl: ;
        this.$1M_1 = value;
        return value;
    },

    get_group: function() {
        ULS5Vl: ;
        return this.$F_1;
    },
    set_group: function(value) {
        ULS5Vl: ;
        this.$F_1 = value;
        return value;
    },

    get_contentType: function() {
        ULS5Vl: ;
        return this.$v_1;
    },
    set_contentType: function(value) {
        ULS5Vl: ;
        this.$v_1 = value;
        return value;
    },

    get_field: function() {
        ULS5Vl: ;
        return this.$K_1;
    },
    set_field: function(value) {
        ULS5Vl: ;
        this.$K_1 = value;
        return value;
    },

    get_securityPolicy: function() {
        ULS5Vl: ;
        return this.$1H_1;
    },
    set_securityPolicy: function(value) {
        ULS5Vl: ;
        this.$1H_1 = value;
        return value;
    },

    get_view: function() {
        ULS5Vl: ;
        return this.$1N_1;
    },
    set_view: function(value) {
        ULS5Vl: ;
        this.$1N_1 = value;
        return value;
    },

    get_add: function() {
        ULS5Vl: ;
        return this.$q_1;
    },
    set_add: function(value) {
        ULS5Vl: ;
        this.$q_1 = value;
        return value;
    },

    get_update: function() {
        ULS5Vl: ;
        return this.$1L_1;
    },
    set_update: function(value) {
        ULS5Vl: ;
        this.$1L_1 = value;
        return value;
    },

    get_deleteObject: function() {
        ULS5Vl: ;
        return this.$x_1;
    },
    set_deleteObject: function(value) {
        ULS5Vl: ;
        this.$x_1 = value;
        return value;
    },

    get_rename: function() {
        ULS5Vl: ;
        return this.$1A_1;
    },
    set_rename: function(value) {
        ULS5Vl: ;
        this.$1A_1 = value;
        return value;
    },

    get_move: function() {
        ULS5Vl: ;
        return this.$14_1;
    },
    set_move: function(value) {
        ULS5Vl: ;
        this.$14_1 = value;
        return value;
    },

    get_restore: function() {
        ULS5Vl: ;
        return this.$1B_1;
    },
    set_restore: function(value) {
        ULS5Vl: ;
        this.$1B_1 = value;
        return value;
    },

    get_roleDefinitionAdd: function() {
        ULS5Vl: ;
        return this.$1E_1;
    },
    set_roleDefinitionAdd: function(value) {
        ULS5Vl: ;
        this.$1E_1 = value;
        return value;
    },

    get_roleDefinitionDelete: function() {
        ULS5Vl: ;
        return this.$1F_1;
    },
    set_roleDefinitionDelete: function(value) {
        ULS5Vl: ;
        this.$1F_1 = value;
        return value;
    },

    get_roleDefinitionUpdate: function() {
        ULS5Vl: ;
        return this.$1G_1;
    },
    set_roleDefinitionUpdate: function(value) {
        ULS5Vl: ;
        this.$1G_1 = value;
        return value;
    },

    get_roleAssignmentAdd: function() {
        ULS5Vl: ;
        return this.$1C_1;
    },
    set_roleAssignmentAdd: function(value) {
        ULS5Vl: ;
        this.$1C_1 = value;
        return value;
    },

    get_roleAssignmentDelete: function() {
        ULS5Vl: ;
        return this.$1D_1;
    },
    set_roleAssignmentDelete: function(value) {
        ULS5Vl: ;
        this.$1D_1 = value;
        return value;
    },

    get_groupMembershipAdd: function() {
        ULS5Vl: ;
        return this.$11_1;
    },
    set_groupMembershipAdd: function(value) {
        ULS5Vl: ;
        this.$11_1 = value;
        return value;
    },

    get_groupMembershipDelete: function() {
        ULS5Vl: ;
        return this.$12_1;
    },
    set_groupMembershipDelete: function(value) {
        ULS5Vl: ;
        this.$12_1 = value;
        return value;
    },

    get_systemUpdate: function() {
        ULS5Vl: ;
        return this.$1I_1;
    },
    set_systemUpdate: function(value) {
        ULS5Vl: ;
        this.$1I_1 = value;
        return value;
    },

    get_navigation: function() {
        ULS5Vl: ;
        return this.$15_1;
    },
    set_navigation: function(value) {
        ULS5Vl: ;
        this.$15_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{887a7218-1232-4cfc-b78f-88d54e9d8ec7}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['ChangeTokenStart', 'ChangeTokenEnd', 'Item', 'List', 'Web', 'Site', 'File', 'Folder', 'Alert', 'User', 'Group', 'ContentType', 'Field', 'SecurityPolicy', 'View', 'Add', 'Update', 'DeleteObject', 'Rename', 'Move', 'Restore', 'RoleDefinitionAdd', 'RoleDefinitionDelete', 'RoleDefinitionUpdate', 'RoleAssignmentAdd', 'RoleAssignmentDelete', 'GroupMembershipAdd', 'GroupMembershipDelete', 'SystemUpdate', 'Navigation'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.ChangeTokenStart;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1r_1 = ((SP.DataConvert.fixupType(null, $v_0)));
            delete parentNode.ChangeTokenStart;
        }
        $v_0 = parentNode.ChangeTokenEnd;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1q_1 = ((SP.DataConvert.fixupType(null, $v_0)));
            delete parentNode.ChangeTokenEnd;
        }
        $v_0 = parentNode.Item;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$13_1 = ($v_0);
            delete parentNode.Item;
        }
        $v_0 = parentNode.List;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$G_1 = ($v_0);
            delete parentNode.List;
        }
        $v_0 = parentNode.Web;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$N_1 = ($v_0);
            delete parentNode.Web;
        }
        $v_0 = parentNode.Site;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$M_1 = ($v_0);
            delete parentNode.Site;
        }
        $v_0 = parentNode.File;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$z_1 = ($v_0);
            delete parentNode.File;
        }
        $v_0 = parentNode.Folder;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$10_1 = ($v_0);
            delete parentNode.Folder;
        }
        $v_0 = parentNode.Alert;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$r_1 = ($v_0);
            delete parentNode.Alert;
        }
        $v_0 = parentNode.User;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1M_1 = ($v_0);
            delete parentNode.User;
        }
        $v_0 = parentNode.Group;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$F_1 = ($v_0);
            delete parentNode.Group;
        }
        $v_0 = parentNode.ContentType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$v_1 = ($v_0);
            delete parentNode.ContentType;
        }
        $v_0 = parentNode.Field;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$K_1 = ($v_0);
            delete parentNode.Field;
        }
        $v_0 = parentNode.SecurityPolicy;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1H_1 = ($v_0);
            delete parentNode.SecurityPolicy;
        }
        $v_0 = parentNode.View;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1N_1 = ($v_0);
            delete parentNode.View;
        }
        $v_0 = parentNode.Add;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$q_1 = ($v_0);
            delete parentNode.Add;
        }
        $v_0 = parentNode.Update;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1L_1 = ($v_0);
            delete parentNode.Update;
        }
        $v_0 = parentNode.DeleteObject;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$x_1 = ($v_0);
            delete parentNode.DeleteObject;
        }
        $v_0 = parentNode.Rename;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1A_1 = ($v_0);
            delete parentNode.Rename;
        }
        $v_0 = parentNode.Move;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$14_1 = ($v_0);
            delete parentNode.Move;
        }
        $v_0 = parentNode.Restore;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1B_1 = ($v_0);
            delete parentNode.Restore;
        }
        $v_0 = parentNode.RoleDefinitionAdd;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1E_1 = ($v_0);
            delete parentNode.RoleDefinitionAdd;
        }
        $v_0 = parentNode.RoleDefinitionDelete;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1F_1 = ($v_0);
            delete parentNode.RoleDefinitionDelete;
        }
        $v_0 = parentNode.RoleDefinitionUpdate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1G_1 = ($v_0);
            delete parentNode.RoleDefinitionUpdate;
        }
        $v_0 = parentNode.RoleAssignmentAdd;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1C_1 = ($v_0);
            delete parentNode.RoleAssignmentAdd;
        }
        $v_0 = parentNode.RoleAssignmentDelete;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1D_1 = ($v_0);
            delete parentNode.RoleAssignmentDelete;
        }
        $v_0 = parentNode.GroupMembershipAdd;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$11_1 = ($v_0);
            delete parentNode.GroupMembershipAdd;
        }
        $v_0 = parentNode.GroupMembershipDelete;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$12_1 = ($v_0);
            delete parentNode.GroupMembershipDelete;
        }
        $v_0 = parentNode.SystemUpdate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1I_1 = ($v_0);
            delete parentNode.SystemUpdate;
        }
        $v_0 = parentNode.Navigation;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$15_1 = ($v_0);
            delete parentNode.Navigation;
        }
    }
}


SP.ChangeSite = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeSite.initializeBase(this, [Context, ObjectPath]);
}


SP.ChangeToken = function() {
    ULS5Vl: ;
    SP.ChangeToken.initializeBase(this);
}
SP.ChangeToken.prototype = {
    $V_1: null,

    get_stringValue: function() {
        ULS5Vl: ;
        return this.$V_1;
    },
    set_stringValue: function(value) {
        ULS5Vl: ;
        this.$V_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{41c5be82-b5bf-4b5a-9712-97111fb87686}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['StringValue'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.StringValue;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$V_1 = ($v_0);
            delete parentNode.StringValue;
        }
    }
}


SP.ChangeUser = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeUser.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeUser.prototype = {

    get_userId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UserId');
        return ((this.get_objectData().get_properties()['UserId']));
    },

    get_activate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Activate');
        return ((this.get_objectData().get_properties()['Activate']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeUser.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.UserId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UserId'] = ($v_0);
            delete parentNode.UserId;
        }
        $v_0 = parentNode.Activate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Activate'] = ($v_0);
            delete parentNode.Activate;
        }
    }
}


SP.ChangeUserPropertyNames = function() {}


SP.ChangeView = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeView.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeView.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_listId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListId');
        return ((this.get_objectData().get_properties()['ListId']));
    },

    get_viewId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ViewId');
        return ((this.get_objectData().get_properties()['ViewId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeView.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.ListId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListId'] = ($v_0);
            delete parentNode.ListId;
        }
        $v_0 = parentNode.ViewId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ViewId'] = ($v_0);
            delete parentNode.ViewId;
        }
    }
}


SP.ChangeViewPropertyNames = function() {}


SP.ChangeWeb = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ChangeWeb.initializeBase(this, [Context, ObjectPath]);
}
SP.ChangeWeb.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ChangeWeb.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
    }
}


SP.ChangeWebPropertyNames = function() {}


SP.ContentType = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ContentType.initializeBase(this, [Context, ObjectPath]);
}
SP.ContentType.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Description'] = $p0.$2_1;
            this.get_objectData().get_properties()['Group'] = $p0.$F_1;
            this.get_objectData().get_properties()['Name'] = $p0.$5_1;
        }
    },

    get_displayFormTemplateName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DisplayFormTemplateName');
        return ((this.get_objectData().get_properties()['DisplayFormTemplateName']));
    },
    set_displayFormTemplateName: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DisplayFormTemplateName'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DisplayFormTemplateName', value));
        }
        return value;
    },

    get_editFormTemplateName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EditFormTemplateName');
        return ((this.get_objectData().get_properties()['EditFormTemplateName']));
    },
    set_editFormTemplateName: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EditFormTemplateName'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EditFormTemplateName', value));
        }
        return value;
    },

    get_newFormTemplateName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('NewFormTemplateName');
        return ((this.get_objectData().get_properties()['NewFormTemplateName']));
    },
    set_newFormTemplateName: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['NewFormTemplateName'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'NewFormTemplateName', value));
        }
        return value;
    },

    get_newFormUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('NewFormUrl');
        return ((this.get_objectData().get_properties()['NewFormUrl']));
    },
    set_newFormUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['NewFormUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'NewFormUrl', value));
        }
        return value;
    },

    get_editFormUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EditFormUrl');
        return ((this.get_objectData().get_properties()['EditFormUrl']));
    },
    set_editFormUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EditFormUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EditFormUrl', value));
        }
        return value;
    },

    get_displayFormUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DisplayFormUrl');
        return ((this.get_objectData().get_properties()['DisplayFormUrl']));
    },
    set_displayFormUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DisplayFormUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DisplayFormUrl', value));
        }
        return value;
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_readOnly: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ReadOnly');
        return ((this.get_objectData().get_properties()['ReadOnly']));
    },
    set_readOnly: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ReadOnly'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ReadOnly', value));
        }
        return value;
    },

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },
    set_name: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Name'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Name', value));
        }
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Description'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Description', value));
        }
        return value;
    },

    get_hidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Hidden');
        return ((this.get_objectData().get_properties()['Hidden']));
    },
    set_hidden: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Hidden'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Hidden', value));
        }
        return value;
    },

    get_scope: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Scope');
        return ((this.get_objectData().get_properties()['Scope']));
    },

    get_group: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Group');
        return ((this.get_objectData().get_properties()['Group']));
    },
    set_group: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Group'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Group', value));
        }
        return value;
    },

    get_fieldLinks: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['FieldLinks']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FieldLinkCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'FieldLinks'));
            this.get_objectData().get_clientObjectProperties()['FieldLinks'] = $v_0;
        }
        return $v_0;
    },

    get_workflowAssociations: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['WorkflowAssociations']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Workflow.WorkflowAssociationCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'WorkflowAssociations'));
            this.get_objectData().get_clientObjectProperties()['WorkflowAssociations'] = $v_0;
        }
        return $v_0;
    },

    get_documentTemplateUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DocumentTemplateUrl');
        return ((this.get_objectData().get_properties()['DocumentTemplateUrl']));
    },

    get_documentTemplate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DocumentTemplate');
        return ((this.get_objectData().get_properties()['DocumentTemplate']));
    },
    set_documentTemplate: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DocumentTemplate'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DocumentTemplate', value));
        }
        return value;
    },

    get_schemaXml: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SchemaXml');
        return ((this.get_objectData().get_properties()['SchemaXml']));
    },

    get_parent: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Parent']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ContentType(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Parent'));
            this.get_objectData().get_clientObjectProperties()['Parent'] = $v_0;
        }
        return $v_0;
    },

    get_fields: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Fields']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FieldCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Fields'));
            this.get_objectData().get_clientObjectProperties()['Fields'] = $v_0;
        }
        return $v_0;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ContentType.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.DisplayFormTemplateName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DisplayFormTemplateName'] = ($v_0);
            delete parentNode.DisplayFormTemplateName;
        }
        $v_0 = parentNode.EditFormTemplateName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EditFormTemplateName'] = ($v_0);
            delete parentNode.EditFormTemplateName;
        }
        $v_0 = parentNode.NewFormTemplateName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['NewFormTemplateName'] = ($v_0);
            delete parentNode.NewFormTemplateName;
        }
        $v_0 = parentNode.NewFormUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['NewFormUrl'] = ($v_0);
            delete parentNode.NewFormUrl;
        }
        $v_0 = parentNode.EditFormUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EditFormUrl'] = ($v_0);
            delete parentNode.EditFormUrl;
        }
        $v_0 = parentNode.DisplayFormUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DisplayFormUrl'] = ($v_0);
            delete parentNode.DisplayFormUrl;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.Id;
        }
        $v_0 = parentNode.ReadOnly;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ReadOnly'] = ($v_0);
            delete parentNode.ReadOnly;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.Hidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Hidden'] = ($v_0);
            delete parentNode.Hidden;
        }
        $v_0 = parentNode.Scope;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Scope'] = ($v_0);
            delete parentNode.Scope;
        }
        $v_0 = parentNode.Group;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Group'] = ($v_0);
            delete parentNode.Group;
        }
        $v_0 = parentNode.FieldLinks;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_fieldLinks().fromJson($v_0);
            delete parentNode.FieldLinks;
        }
        $v_0 = parentNode.WorkflowAssociations;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_workflowAssociations().fromJson($v_0);
            delete parentNode.WorkflowAssociations;
        }
        $v_0 = parentNode.DocumentTemplateUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DocumentTemplateUrl'] = ($v_0);
            delete parentNode.DocumentTemplateUrl;
        }
        $v_0 = parentNode.DocumentTemplate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DocumentTemplate'] = ($v_0);
            delete parentNode.DocumentTemplate;
        }
        $v_0 = parentNode.SchemaXml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SchemaXml'] = ($v_0);
            delete parentNode.SchemaXml;
        }
        $v_0 = parentNode.Parent;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_parent().fromJson($v_0);
            delete parentNode.Parent;
        }
        $v_0 = parentNode.Fields;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_fields().fromJson($v_0);
            delete parentNode.Fields;
        }
    },

    update: function(updateChildren) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', [updateChildren]);
        this.get_context().addQuery($v_0);
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.ContentTypePropertyNames = function() {}


SP.ContentTypeObjectPropertyNames = function() {}


SP.ContentTypeCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ContentTypeCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.ContentTypeCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getById: function(contentTypeId) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[contentTypeId]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.ContentType(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [contentTypeId]));
        $v_1[contentTypeId] = $v_0;
        return $v_0;
    },

    addExistingContentType: function(contentType) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.ContentType(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'AddExistingContentType', [contentType]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.ContentType(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    }
}


SP.ContentTypeCreationInformation = function() {
    ULS5Vl: ;
    SP.ContentTypeCreationInformation.initializeBase(this);
}
SP.ContentTypeCreationInformation.prototype = {
    $28_1: null,
    $5_1: null,
    $F_1: null,
    $2_1: null,

    get_parentContentType: function() {
        ULS5Vl: ;
        return this.$28_1;
    },
    set_parentContentType: function(value) {
        ULS5Vl: ;
        this.$28_1 = value;
        return value;
    },

    get_name: function() {
        ULS5Vl: ;
        return this.$5_1;
    },
    set_name: function(value) {
        ULS5Vl: ;
        this.$5_1 = value;
        return value;
    },

    get_group: function() {
        ULS5Vl: ;
        return this.$F_1;
    },
    set_group: function(value) {
        ULS5Vl: ;
        this.$F_1 = value;
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        return this.$2_1;
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.$2_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{168f3091-4554-4f14-8866-b20d48e45b54}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['ParentContentType', 'Name', 'Group', 'Description'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.ParentContentType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$28_1.fromJson($v_0);
            delete parentNode.ParentContentType;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$5_1 = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.Group;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$F_1 = ($v_0);
            delete parentNode.Group;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2_1 = ($v_0);
            delete parentNode.Description;
        }
    }
}


SP.ContentTypeId = function() {
    ULS5Vl: ;
    SP.ContentTypeId.initializeBase(this);
}
SP.ContentTypeId.prototype = {
    $V_1: null,

    customFromJson: function(parentNode) {
        ULS5Vl: ;
        if (!parentNode) {
            throw Error.argumentNull('parentNode');
        }
        var $v_0;
        $v_0 = parentNode.StringValue;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$V_1 = ($v_0);
        }
        return true;
    },

    customWriteToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        writer.writeStartElement(SP.ClientConstants.Property);
        writer.writeAttributeString(SP.ClientConstants.Name, 'StringValue');
        SP.DataConvert.writeValueToXmlElement(writer, this.$V_1, serializationContext);
        writer.writeEndElement();
        return true;
    },

    toString: function() {
        ULS5Vl: ;
        return this.$V_1;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{da0f1e90-296f-480e-bc27-cefe51eff241}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
    }
}


SP.Feature = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Feature.initializeBase(this, [Context, ObjectPath]);
}
SP.Feature.prototype = {

    get_definitionId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefinitionId');
        return ((this.get_objectData().get_properties()['DefinitionId']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Feature.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.DefinitionId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefinitionId'] = ($v_0);
            delete parentNode.DefinitionId;
        }
    }
}


SP.FeaturePropertyNames = function() {}


SP.FeatureCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FeatureCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.FeatureCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getById: function(featureId) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[featureId.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Feature(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [featureId]));
        $v_1[featureId.toString()] = $v_0;
        return $v_0;
    },

    add: function(featureId, force, featdefScope) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Feature(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [featureId, force, featdefScope]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    },

    remove: function(featureId, force) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Remove', [featureId, force]);
        this.get_context().addQuery($v_0);
    }
}


SP.Field = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Field.initializeBase(this, [Context, ObjectPath]);
}
SP.Field.prototype = {

    get_typeDisplayName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TypeDisplayName');
        return ((this.get_objectData().get_properties()['TypeDisplayName']));
    },

    get_typeShortDescription: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TypeShortDescription');
        return ((this.get_objectData().get_properties()['TypeShortDescription']));
    },

    get_internalName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('InternalName');
        return ((this.get_objectData().get_properties()['InternalName']));
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_enforceUniqueValues: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EnforceUniqueValues');
        return ((this.get_objectData().get_properties()['EnforceUniqueValues']));
    },
    set_enforceUniqueValues: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EnforceUniqueValues'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EnforceUniqueValues', value));
        }
        return value;
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Title'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Title', value));
        }
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Description'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Description', value));
        }
        return value;
    },

    get_group: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Group');
        return ((this.get_objectData().get_properties()['Group']));
    },
    set_group: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Group'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Group', value));
        }
        return value;
    },

    get_defaultValue: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefaultValue');
        return ((this.get_objectData().get_properties()['DefaultValue']));
    },
    set_defaultValue: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DefaultValue'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DefaultValue', value));
        }
        return value;
    },

    get_validationFormula: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ValidationFormula');
        return ((this.get_objectData().get_properties()['ValidationFormula']));
    },
    set_validationFormula: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ValidationFormula'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ValidationFormula', value));
        }
        return value;
    },

    get_validationMessage: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ValidationMessage');
        return ((this.get_objectData().get_properties()['ValidationMessage']));
    },
    set_validationMessage: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ValidationMessage'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ValidationMessage', value));
        }
        return value;
    },

    get_fieldTypeKind: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FieldTypeKind');
        return ((this.get_objectData().get_properties()['FieldTypeKind']));
    },
    set_fieldTypeKind: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['FieldTypeKind'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'FieldTypeKind', value));
        }
        return value;
    },

    get_typeAsString: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TypeAsString');
        return ((this.get_objectData().get_properties()['TypeAsString']));
    },
    set_typeAsString: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['TypeAsString'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'TypeAsString', value));
        }
        return value;
    },

    get_fromBaseType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FromBaseType');
        return ((this.get_objectData().get_properties()['FromBaseType']));
    },

    get_sealed: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Sealed');
        return ((this.get_objectData().get_properties()['Sealed']));
    },

    get_canBeDeleted: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CanBeDeleted');
        return ((this.get_objectData().get_properties()['CanBeDeleted']));
    },

    get_required: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Required');
        return ((this.get_objectData().get_properties()['Required']));
    },
    set_required: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Required'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Required', value));
        }
        return value;
    },

    get_readOnlyField: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ReadOnlyField');
        return ((this.get_objectData().get_properties()['ReadOnlyField']));
    },
    set_readOnlyField: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ReadOnlyField'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ReadOnlyField', value));
        }
        return value;
    },

    get_hidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Hidden');
        return ((this.get_objectData().get_properties()['Hidden']));
    },
    set_hidden: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Hidden'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Hidden', value));
        }
        return value;
    },

    get_direction: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Direction');
        return ((this.get_objectData().get_properties()['Direction']));
    },
    set_direction: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Direction'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Direction', value));
        }
        return value;
    },

    get_sortable: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Sortable');
        return ((this.get_objectData().get_properties()['Sortable']));
    },

    get_filterable: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Filterable');
        return ((this.get_objectData().get_properties()['Filterable']));
    },

    get_schemaXml: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SchemaXml');
        return ((this.get_objectData().get_properties()['SchemaXml']));
    },
    set_schemaXml: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['SchemaXml'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'SchemaXml', value));
        }
        return value;
    },

    get_staticName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('StaticName');
        return ((this.get_objectData().get_properties()['StaticName']));
    },
    set_staticName: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['StaticName'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'StaticName', value));
        }
        return value;
    },

    get_scope: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Scope');
        return ((this.get_objectData().get_properties()['Scope']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Field.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.TypeDisplayName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TypeDisplayName'] = ($v_0);
            delete parentNode.TypeDisplayName;
        }
        $v_0 = parentNode.TypeShortDescription;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TypeShortDescription'] = ($v_0);
            delete parentNode.TypeShortDescription;
        }
        $v_0 = parentNode.InternalName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['InternalName'] = ($v_0);
            delete parentNode.InternalName;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.EnforceUniqueValues;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EnforceUniqueValues'] = ($v_0);
            delete parentNode.EnforceUniqueValues;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.Group;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Group'] = ($v_0);
            delete parentNode.Group;
        }
        $v_0 = parentNode.DefaultValue;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefaultValue'] = ($v_0);
            delete parentNode.DefaultValue;
        }
        $v_0 = parentNode.ValidationFormula;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ValidationFormula'] = ($v_0);
            delete parentNode.ValidationFormula;
        }
        $v_0 = parentNode.ValidationMessage;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ValidationMessage'] = ($v_0);
            delete parentNode.ValidationMessage;
        }
        $v_0 = parentNode.FieldTypeKind;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FieldTypeKind'] = ($v_0);
            delete parentNode.FieldTypeKind;
        }
        $v_0 = parentNode.TypeAsString;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TypeAsString'] = ($v_0);
            delete parentNode.TypeAsString;
        }
        $v_0 = parentNode.FromBaseType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FromBaseType'] = ($v_0);
            delete parentNode.FromBaseType;
        }
        $v_0 = parentNode.Sealed;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Sealed'] = ($v_0);
            delete parentNode.Sealed;
        }
        $v_0 = parentNode.CanBeDeleted;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CanBeDeleted'] = ($v_0);
            delete parentNode.CanBeDeleted;
        }
        $v_0 = parentNode.Required;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Required'] = ($v_0);
            delete parentNode.Required;
        }
        $v_0 = parentNode.ReadOnlyField;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ReadOnlyField'] = ($v_0);
            delete parentNode.ReadOnlyField;
        }
        $v_0 = parentNode.Hidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Hidden'] = ($v_0);
            delete parentNode.Hidden;
        }
        $v_0 = parentNode.Direction;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Direction'] = ($v_0);
            delete parentNode.Direction;
        }
        $v_0 = parentNode.Sortable;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Sortable'] = ($v_0);
            delete parentNode.Sortable;
        }
        $v_0 = parentNode.Filterable;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Filterable'] = ($v_0);
            delete parentNode.Filterable;
        }
        $v_0 = parentNode.SchemaXml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SchemaXml'] = ($v_0);
            delete parentNode.SchemaXml;
        }
        $v_0 = parentNode.StaticName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['StaticName'] = ($v_0);
            delete parentNode.StaticName;
        }
        $v_0 = parentNode.Scope;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Scope'] = ($v_0);
            delete parentNode.Scope;
        }
    },

    updateAndPushChanges: function(pushChangesToLists) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'UpdateAndPushChanges', [pushChangesToLists]);
        this.get_context().addQuery($v_0);
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.FieldPropertyNames = function() {}


SP.FieldCalculated = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldCalculated.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldCalculated.prototype = {

    get_formula: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Formula');
        return ((this.get_objectData().get_properties()['Formula']));
    },
    set_formula: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Formula'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Formula', value));
        }
        return value;
    },

    get_outputType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('OutputType');
        return ((this.get_objectData().get_properties()['OutputType']));
    },
    set_outputType: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['OutputType'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'OutputType', value));
        }
        return value;
    },

    get_dateFormat: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DateFormat');
        return ((this.get_objectData().get_properties()['DateFormat']));
    },
    set_dateFormat: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DateFormat'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DateFormat', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldCalculated.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Formula;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Formula'] = ($v_0);
            delete parentNode.Formula;
        }
        $v_0 = parentNode.OutputType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['OutputType'] = ($v_0);
            delete parentNode.OutputType;
        }
        $v_0 = parentNode.DateFormat;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DateFormat'] = ($v_0);
            delete parentNode.DateFormat;
        }
    }
}


SP.FieldCalculatedPropertyNames = function() {}


SP.FieldCalculatedErrorValue = function() {
    ULS5Vl: ;
    SP.FieldCalculatedErrorValue.initializeBase(this);
}
SP.FieldCalculatedErrorValue.prototype = {
    $38_1: null,

    get_errorMessage: function() {
        ULS5Vl: ;
        return this.$38_1;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{3387286b-36e3-4199-bdca-f20048ce8328}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['ErrorMessage'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.ErrorMessage;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$38_1 = ($v_0);
            delete parentNode.ErrorMessage;
        }
    }
}


SP.FieldChoice = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldChoice.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldChoice.prototype = {

    get_editFormat: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EditFormat');
        return ((this.get_objectData().get_properties()['EditFormat']));
    },
    set_editFormat: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EditFormat'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EditFormat', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldChoice.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.EditFormat;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EditFormat'] = ($v_0);
            delete parentNode.EditFormat;
        }
    }
}


SP.FieldChoicePropertyNames = function() {}


SP.FieldCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_schemaXml: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SchemaXml');
        return ((this.get_objectData().get_properties()['SchemaXml']));
    },

    getByTitle: function(displayName) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByTitle']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByTitle'] = $v_1;
        }
        $v_0 = (($v_1[displayName]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Field(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByTitle', [displayName]));
        $v_1[displayName] = $v_0;
        return $v_0;
    },

    getById: function(id) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[id.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Field(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [id]));
        $v_1[id.toString()] = $v_0;
        return $v_0;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldCollection.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.SchemaXml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SchemaXml'] = ($v_0);
            delete parentNode.SchemaXml;
        }
    },

    getByInternalNameOrTitle: function(strName) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByInternalNameOrTitle']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByInternalNameOrTitle'] = $v_1;
        }
        $v_0 = (($v_1[strName]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Field(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByInternalNameOrTitle', [strName]));
        $v_1[strName] = $v_0;
        return $v_0;
    },

    add: function(field) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Field(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [field]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    },

    addDependentLookup: function(displayName, primaryLookupField, lookupField) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Field(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'AddDependentLookup', [displayName, primaryLookupField, lookupField]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    },

    addFieldAsXml: function(schemaXml, addToDefaultView, options) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Field(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'AddFieldAsXml', [schemaXml, addToDefaultView, options]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    }
}


SP.FieldCollectionPropertyNames = function() {}


SP.FieldComputed = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldComputed.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldComputed.prototype = {

    get_enableLookup: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EnableLookup');
        return ((this.get_objectData().get_properties()['EnableLookup']));
    },
    set_enableLookup: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EnableLookup'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EnableLookup', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldComputed.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.EnableLookup;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EnableLookup'] = ($v_0);
            delete parentNode.EnableLookup;
        }
    }
}


SP.FieldComputedPropertyNames = function() {}


SP.FieldCurrency = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldCurrency.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldCurrency.prototype = {

    get_currencyLocaleId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CurrencyLocaleId');
        return ((this.get_objectData().get_properties()['CurrencyLocaleId']));
    },
    set_currencyLocaleId: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['CurrencyLocaleId'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'CurrencyLocaleId', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldCurrency.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.CurrencyLocaleId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CurrencyLocaleId'] = ($v_0);
            delete parentNode.CurrencyLocaleId;
        }
    }
}


SP.FieldCurrencyPropertyNames = function() {}


SP.FieldDateTime = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldDateTime.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldDateTime.prototype = {

    get_dateTimeCalendarType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DateTimeCalendarType');
        return ((this.get_objectData().get_properties()['DateTimeCalendarType']));
    },
    set_dateTimeCalendarType: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DateTimeCalendarType'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DateTimeCalendarType', value));
        }
        return value;
    },

    get_displayFormat: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DisplayFormat');
        return ((this.get_objectData().get_properties()['DisplayFormat']));
    },
    set_displayFormat: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DisplayFormat'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DisplayFormat', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldDateTime.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.DateTimeCalendarType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DateTimeCalendarType'] = ($v_0);
            delete parentNode.DateTimeCalendarType;
        }
        $v_0 = parentNode.DisplayFormat;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DisplayFormat'] = ($v_0);
            delete parentNode.DisplayFormat;
        }
    }
}


SP.FieldDateTimePropertyNames = function() {}


SP.FieldGuid = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldGuid.initializeBase(this, [Context, ObjectPath]);
}


SP.FieldLink = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldLink.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldLink.prototype = {

    $7: function($p0) {},

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_required: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Required');
        return ((this.get_objectData().get_properties()['Required']));
    },
    set_required: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Required'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Required', value));
        }
        return value;
    },

    get_hidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Hidden');
        return ((this.get_objectData().get_properties()['Hidden']));
    },
    set_hidden: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Hidden'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Hidden', value));
        }
        return value;
    },

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldLink.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.Required;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Required'] = ($v_0);
            delete parentNode.Required;
        }
        $v_0 = parentNode.Hidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Hidden'] = ($v_0);
            delete parentNode.Hidden;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.FieldLinkPropertyNames = function() {}


SP.FieldLinkCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldLinkCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldLinkCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.FieldLink(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    }
}


SP.FieldLinkCreationInformation = function() {
    ULS5Vl: ;
    SP.FieldLinkCreationInformation.initializeBase(this);
}
SP.FieldLinkCreationInformation.prototype = {
    $K_1: null,

    get_field: function() {
        ULS5Vl: ;
        return this.$K_1;
    },
    set_field: function(value) {
        ULS5Vl: ;
        this.$K_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{63fb2c92-8f65-4bbb-a658-b6cd294403f4}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Field'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Field;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$K_1.fromJson($v_0);
            delete parentNode.Field;
        }
    }
}


SP.FieldLookup = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldLookup.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldLookup.prototype = {

    get_lookupWebId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('LookupWebId');
        return ((this.get_objectData().get_properties()['LookupWebId']));
    },
    set_lookupWebId: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['LookupWebId'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'LookupWebId', value));
        }
        return value;
    },

    get_lookupList: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('LookupList');
        return ((this.get_objectData().get_properties()['LookupList']));
    },
    set_lookupList: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['LookupList'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'LookupList', value));
        }
        return value;
    },

    get_lookupField: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('LookupField');
        return ((this.get_objectData().get_properties()['LookupField']));
    },
    set_lookupField: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['LookupField'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'LookupField', value));
        }
        return value;
    },

    get_relationshipDeleteBehavior: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RelationshipDeleteBehavior');
        return ((this.get_objectData().get_properties()['RelationshipDeleteBehavior']));
    },
    set_relationshipDeleteBehavior: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['RelationshipDeleteBehavior'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'RelationshipDeleteBehavior', value));
        }
        return value;
    },

    get_isRelationship: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsRelationship');
        return ((this.get_objectData().get_properties()['IsRelationship']));
    },
    set_isRelationship: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['IsRelationship'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'IsRelationship', value));
        }
        return value;
    },

    get_allowMultipleValues: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowMultipleValues');
        return ((this.get_objectData().get_properties()['AllowMultipleValues']));
    },
    set_allowMultipleValues: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowMultipleValues'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowMultipleValues', value));
        }
        return value;
    },

    get_primaryFieldId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('PrimaryFieldId');
        return ((this.get_objectData().get_properties()['PrimaryFieldId']));
    },
    set_primaryFieldId: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['PrimaryFieldId'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'PrimaryFieldId', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldLookup.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.LookupWebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['LookupWebId'] = ($v_0);
            delete parentNode.LookupWebId;
        }
        $v_0 = parentNode.LookupList;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['LookupList'] = ($v_0);
            delete parentNode.LookupList;
        }
        $v_0 = parentNode.LookupField;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['LookupField'] = ($v_0);
            delete parentNode.LookupField;
        }
        $v_0 = parentNode.RelationshipDeleteBehavior;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RelationshipDeleteBehavior'] = ($v_0);
            delete parentNode.RelationshipDeleteBehavior;
        }
        $v_0 = parentNode.IsRelationship;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsRelationship'] = ($v_0);
            delete parentNode.IsRelationship;
        }
        $v_0 = parentNode.AllowMultipleValues;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowMultipleValues'] = ($v_0);
            delete parentNode.AllowMultipleValues;
        }
        $v_0 = parentNode.PrimaryFieldId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['PrimaryFieldId'] = ($v_0);
            delete parentNode.PrimaryFieldId;
        }
    }
}


SP.FieldLookupPropertyNames = function() {}


SP.FieldLookupValue = function() {
    ULS5Vl: ;
    SP.FieldLookupValue.initializeBase(this);
}
SP.FieldLookupValue.prototype = {
    $L_1: 0,
    $b_1: null,

    get_lookupId: function() {
        ULS5Vl: ;
        return this.$L_1;
    },
    set_lookupId: function(value) {
        ULS5Vl: ;
        this.$L_1 = value;
        return value;
    },

    get_lookupValue: function() {
        ULS5Vl: ;
        return this.$b_1;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{f1d34cc0-9b50-4a78-be78-d5facfcccfb7}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['LookupId', 'LookupValue'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.LookupId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$L_1 = ($v_0);
            delete parentNode.LookupId;
        }
        $v_0 = parentNode.LookupValue;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$b_1 = ($v_0);
            delete parentNode.LookupValue;
        }
    }
}


SP.FieldMultiChoice = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldMultiChoice.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldMultiChoice.prototype = {

    get_fillInChoice: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FillInChoice');
        return ((this.get_objectData().get_properties()['FillInChoice']));
    },
    set_fillInChoice: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['FillInChoice'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'FillInChoice', value));
        }
        return value;
    },

    get_choices: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Choices');
        return ((this.get_objectData().get_properties()['Choices']));
    },
    set_choices: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Choices'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Choices', value));
        }
        return value;
    },

    get_mappings: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Mappings');
        return ((this.get_objectData().get_properties()['Mappings']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldMultiChoice.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.FillInChoice;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FillInChoice'] = ($v_0);
            delete parentNode.FillInChoice;
        }
        $v_0 = parentNode.Choices;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Choices'] = ($v_0);
            delete parentNode.Choices;
        }
        $v_0 = parentNode.Mappings;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Mappings'] = ($v_0);
            delete parentNode.Mappings;
        }
    }
}


SP.FieldMultiChoicePropertyNames = function() {}


SP.FieldMultiLineText = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldMultiLineText.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldMultiLineText.prototype = {

    get_wikiLinking: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WikiLinking');
        return ((this.get_objectData().get_properties()['WikiLinking']));
    },

    get_numberOfLines: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('NumberOfLines');
        return ((this.get_objectData().get_properties()['NumberOfLines']));
    },
    set_numberOfLines: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['NumberOfLines'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'NumberOfLines', value));
        }
        return value;
    },

    get_allowHyperlink: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowHyperlink');
        return ((this.get_objectData().get_properties()['AllowHyperlink']));
    },
    set_allowHyperlink: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowHyperlink'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowHyperlink', value));
        }
        return value;
    },

    get_restrictedMode: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RestrictedMode');
        return ((this.get_objectData().get_properties()['RestrictedMode']));
    },
    set_restrictedMode: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['RestrictedMode'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'RestrictedMode', value));
        }
        return value;
    },

    get_richText: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RichText');
        return ((this.get_objectData().get_properties()['RichText']));
    },
    set_richText: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['RichText'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'RichText', value));
        }
        return value;
    },

    get_appendOnly: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AppendOnly');
        return ((this.get_objectData().get_properties()['AppendOnly']));
    },
    set_appendOnly: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AppendOnly'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AppendOnly', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldMultiLineText.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WikiLinking;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WikiLinking'] = ($v_0);
            delete parentNode.WikiLinking;
        }
        $v_0 = parentNode.NumberOfLines;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['NumberOfLines'] = ($v_0);
            delete parentNode.NumberOfLines;
        }
        $v_0 = parentNode.AllowHyperlink;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowHyperlink'] = ($v_0);
            delete parentNode.AllowHyperlink;
        }
        $v_0 = parentNode.RestrictedMode;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RestrictedMode'] = ($v_0);
            delete parentNode.RestrictedMode;
        }
        $v_0 = parentNode.RichText;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RichText'] = ($v_0);
            delete parentNode.RichText;
        }
        $v_0 = parentNode.AppendOnly;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AppendOnly'] = ($v_0);
            delete parentNode.AppendOnly;
        }
    }
}


SP.FieldMultiLineTextPropertyNames = function() {}


SP.FieldNumber = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldNumber.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldNumber.prototype = {

    get_minimumValue: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MinimumValue');
        return ((this.get_objectData().get_properties()['MinimumValue']));
    },
    set_minimumValue: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['MinimumValue'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'MinimumValue', value));
        }
        return value;
    },

    get_maximumValue: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MaximumValue');
        return ((this.get_objectData().get_properties()['MaximumValue']));
    },
    set_maximumValue: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['MaximumValue'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'MaximumValue', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldNumber.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.MinimumValue;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MinimumValue'] = ($v_0);
            delete parentNode.MinimumValue;
        }
        $v_0 = parentNode.MaximumValue;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MaximumValue'] = ($v_0);
            delete parentNode.MaximumValue;
        }
    }
}


SP.FieldNumberPropertyNames = function() {}


SP.FieldRatingScale = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldRatingScale.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldRatingScale.prototype = {

    get_gridStartNumber: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('GridStartNumber');
        return ((this.get_objectData().get_properties()['GridStartNumber']));
    },
    set_gridStartNumber: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['GridStartNumber'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'GridStartNumber', value));
        }
        return value;
    },

    get_gridEndNumber: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('GridEndNumber');
        return ((this.get_objectData().get_properties()['GridEndNumber']));
    },
    set_gridEndNumber: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['GridEndNumber'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'GridEndNumber', value));
        }
        return value;
    },

    get_rangeCount: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RangeCount');
        return ((this.get_objectData().get_properties()['RangeCount']));
    },

    get_gridTextRangeLow: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('GridTextRangeLow');
        return ((this.get_objectData().get_properties()['GridTextRangeLow']));
    },
    set_gridTextRangeLow: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['GridTextRangeLow'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'GridTextRangeLow', value));
        }
        return value;
    },

    get_gridTextRangeAverage: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('GridTextRangeAverage');
        return ((this.get_objectData().get_properties()['GridTextRangeAverage']));
    },
    set_gridTextRangeAverage: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['GridTextRangeAverage'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'GridTextRangeAverage', value));
        }
        return value;
    },

    get_gridTextRangeHigh: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('GridTextRangeHigh');
        return ((this.get_objectData().get_properties()['GridTextRangeHigh']));
    },
    set_gridTextRangeHigh: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['GridTextRangeHigh'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'GridTextRangeHigh', value));
        }
        return value;
    },

    get_gridNAOptionText: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('GridNAOptionText');
        return ((this.get_objectData().get_properties()['GridNAOptionText']));
    },
    set_gridNAOptionText: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['GridNAOptionText'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'GridNAOptionText', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldRatingScale.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.GridStartNumber;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['GridStartNumber'] = ($v_0);
            delete parentNode.GridStartNumber;
        }
        $v_0 = parentNode.GridEndNumber;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['GridEndNumber'] = ($v_0);
            delete parentNode.GridEndNumber;
        }
        $v_0 = parentNode.RangeCount;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RangeCount'] = ($v_0);
            delete parentNode.RangeCount;
        }
        $v_0 = parentNode.GridTextRangeLow;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['GridTextRangeLow'] = ($v_0);
            delete parentNode.GridTextRangeLow;
        }
        $v_0 = parentNode.GridTextRangeAverage;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['GridTextRangeAverage'] = ($v_0);
            delete parentNode.GridTextRangeAverage;
        }
        $v_0 = parentNode.GridTextRangeHigh;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['GridTextRangeHigh'] = ($v_0);
            delete parentNode.GridTextRangeHigh;
        }
        $v_0 = parentNode.GridNAOptionText;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['GridNAOptionText'] = ($v_0);
            delete parentNode.GridNAOptionText;
        }
    }
}


SP.FieldRatingScalePropertyNames = function() {}


SP.FieldRatingScaleQuestionAnswer = function() {
    ULS5Vl: ;
    SP.FieldRatingScaleQuestionAnswer.initializeBase(this);
}
SP.FieldRatingScaleQuestionAnswer.prototype = {
    $2C_1: null,
    $1n_1: 0,

    get_question: function() {
        ULS5Vl: ;
        return this.$2C_1;
    },
    set_question: function(value) {
        ULS5Vl: ;
        this.$2C_1 = value;
        return value;
    },

    get_answer: function() {
        ULS5Vl: ;
        return this.$1n_1;
    },
    set_answer: function(value) {
        ULS5Vl: ;
        this.$1n_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{9b88fe8e-47cd-4ddc-9d66-0d12d70dde28}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Question', 'Answer'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Question;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2C_1 = ($v_0);
            delete parentNode.Question;
        }
        $v_0 = parentNode.Answer;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1n_1 = ($v_0);
            delete parentNode.Answer;
        }
    }
}


SP.FieldStringValues = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldStringValues.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldStringValues.prototype = {

    get_fieldValues: function() {
        ULS5Vl: ;
        var $v_0 = this.get_objectData().get_methodReturnObjects()[SP.ClientConstants.FieldValuesMethodName];
        if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
            $v_0 = {};
            this.get_objectData().get_methodReturnObjects()[SP.ClientConstants.FieldValuesMethodName] = $v_0;
        }
        return $v_0;
    },

    get_item: function(fieldName) {
        ULS5Vl: ;
        return this.$1m(fieldName);
    },

    initNonPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.DataConvert.populateDictionaryFromObject(this.get_fieldValues(), parentNode);
        SP.DataConvert.fixupTypes(this.get_context(), this.get_fieldValues());
    },

    $1m: function($p0) {
        var $v_0 = this.get_fieldValues()[$p0];
        if (SP.ScriptUtility.isUndefined($v_0)) {
            throw Error.create(SP.Res.propertyHasNotBeenInitialized);
        }
        return $v_0;
    },

    refreshLoad: function() {
        ULS5Vl: ;
        SP.FieldStringValues.callBaseMethod(this, 'refreshLoad');
        this.loadExpandoFields();
    },

    loadExpandoFields: function() {
        ULS5Vl: ;
        var $$dict_1_0 = this.get_fieldValues();
        for (var $$key_1_1 in $$dict_1_0) {
            var $v_0 = {
                key: $$key_1_1,
                value: $$dict_1_0[$$key_1_1]
            };
            this.retrieve($v_0.key);
        }
    }
}


SP.FieldText = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldText.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldText.prototype = {

    get_maxLength: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MaxLength');
        return ((this.get_objectData().get_properties()['MaxLength']));
    },
    set_maxLength: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['MaxLength'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'MaxLength', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldText.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.MaxLength;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MaxLength'] = ($v_0);
            delete parentNode.MaxLength;
        }
    }
}


SP.FieldTextPropertyNames = function() {}


SP.FieldUrl = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldUrl.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldUrl.prototype = {

    get_displayFormat: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DisplayFormat');
        return ((this.get_objectData().get_properties()['DisplayFormat']));
    },
    set_displayFormat: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DisplayFormat'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DisplayFormat', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldUrl.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.DisplayFormat;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DisplayFormat'] = ($v_0);
            delete parentNode.DisplayFormat;
        }
    }
}


SP.FieldUrlPropertyNames = function() {}


SP.FieldUrlValue = function() {
    ULS5Vl: ;
    SP.FieldUrlValue.initializeBase(this);
}
SP.FieldUrlValue.prototype = {
    $6_1: null,
    $2_1: null,

    get_url: function() {
        ULS5Vl: ;
        return this.$6_1;
    },
    set_url: function(value) {
        ULS5Vl: ;
        this.$6_1 = value;
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        return this.$2_1;
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.$2_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{fa8b44af-7b43-43f2-904a-bd319497011e}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Url', 'Description'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Url;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$6_1 = ($v_0);
            delete parentNode.Url;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2_1 = ($v_0);
            delete parentNode.Description;
        }
    }
}


SP.FieldUser = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FieldUser.initializeBase(this, [Context, ObjectPath]);
}
SP.FieldUser.prototype = {

    get_presence: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Presence');
        return ((this.get_objectData().get_properties()['Presence']));
    },
    set_presence: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Presence'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Presence', value));
        }
        return value;
    },

    get_allowDisplay: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowDisplay');
        return ((this.get_objectData().get_properties()['AllowDisplay']));
    },
    set_allowDisplay: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowDisplay'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowDisplay', value));
        }
        return value;
    },

    get_selectionMode: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SelectionMode');
        return ((this.get_objectData().get_properties()['SelectionMode']));
    },
    set_selectionMode: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['SelectionMode'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'SelectionMode', value));
        }
        return value;
    },

    get_selectionGroup: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SelectionGroup');
        return ((this.get_objectData().get_properties()['SelectionGroup']));
    },
    set_selectionGroup: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['SelectionGroup'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'SelectionGroup', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FieldUser.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Presence;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Presence'] = ($v_0);
            delete parentNode.Presence;
        }
        $v_0 = parentNode.AllowDisplay;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowDisplay'] = ($v_0);
            delete parentNode.AllowDisplay;
        }
        $v_0 = parentNode.SelectionMode;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SelectionMode'] = ($v_0);
            delete parentNode.SelectionMode;
        }
        $v_0 = parentNode.SelectionGroup;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SelectionGroup'] = ($v_0);
            delete parentNode.SelectionGroup;
        }
    }
}


SP.FieldUserPropertyNames = function() {}


SP.FieldUserValue = function() {
    ULS5Vl: ;
    SP.FieldUserValue.initializeBase(this);
}
SP.FieldUserValue.fromUser = function(userName) {
    ULS5Vl: ;
    var $v_0 = new SP.FieldUserValue();
    $v_0.$L_1 = -1;
    $v_0.$4D(userName);
    return $v_0;
}
SP.FieldUserValue.prototype = {
    $b_1: null,
    $L_1: 0,

    $4D: function($p0) {
        this.$b_1 = $p0;
    },

    get_lookupValue: function() {
        ULS5Vl: ;
        return this.$b_1;
    },

    get_lookupId: function() {
        ULS5Vl: ;
        return this.$L_1;
    },
    set_lookupId: function(value) {
        ULS5Vl: ;
        this.$L_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{c956ab54-16bd-4c18-89d2-996f57282a6f}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['LookupValue', 'LookupId'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.LookupValue;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$b_1 = ($v_0);
            delete parentNode.LookupValue;
        }
        $v_0 = parentNode.LookupId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$L_1 = ($v_0);
            delete parentNode.LookupId;
        }
    }
}


SP.File = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.File.initializeBase(this, [Context, ObjectPath]);
}
SP.File.prototype = {

    get_exists: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Exists');
        return ((this.get_objectData().get_properties()['Exists']));
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },

    get_author: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Author']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.User(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Author'));
            this.get_objectData().get_clientObjectProperties()['Author'] = $v_0;
        }
        return $v_0;
    },

    get_modifiedBy: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ModifiedBy']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.User(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ModifiedBy'));
            this.get_objectData().get_clientObjectProperties()['ModifiedBy'] = $v_0;
        }
        return $v_0;
    },

    get_timeCreated: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TimeCreated');
        return ((this.get_objectData().get_properties()['TimeCreated']));
    },

    get_timeLastModified: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TimeLastModified');
        return ((this.get_objectData().get_properties()['TimeLastModified']));
    },

    get_customizedPageStatus: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CustomizedPageStatus');
        return ((this.get_objectData().get_properties()['CustomizedPageStatus']));
    },

    get_eTag: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ETag');
        return ((this.get_objectData().get_properties()['ETag']));
    },

    get_lockedByUser: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['LockedByUser']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.User(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'LockedByUser'));
            this.get_objectData().get_clientObjectProperties()['LockedByUser'] = $v_0;
        }
        return $v_0;
    },

    get_checkOutType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CheckOutType');
        return ((this.get_objectData().get_properties()['CheckOutType']));
    },

    get_checkedOutByUser: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['CheckedOutByUser']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.User(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'CheckedOutByUser'));
            this.get_objectData().get_clientObjectProperties()['CheckedOutByUser'] = $v_0;
        }
        return $v_0;
    },

    get_checkInComment: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CheckInComment');
        return ((this.get_objectData().get_properties()['CheckInComment']));
    },

    get_uiVersion: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UIVersion');
        return ((this.get_objectData().get_properties()['UIVersion']));
    },

    get_majorVersion: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MajorVersion');
        return ((this.get_objectData().get_properties()['MajorVersion']));
    },

    get_minorVersion: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MinorVersion');
        return ((this.get_objectData().get_properties()['MinorVersion']));
    },

    get_uiVersionLabel: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UIVersionLabel');
        return ((this.get_objectData().get_properties()['UIVersionLabel']));
    },

    get_serverRelativeUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ServerRelativeUrl');
        return ((this.get_objectData().get_properties()['ServerRelativeUrl']));
    },

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },

    get_versions: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Versions']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FileVersionCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Versions'));
            this.get_objectData().get_clientObjectProperties()['Versions'] = $v_0;
        }
        return $v_0;
    },

    get_listItemAllFields: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ListItemAllFields']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ListItem(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ListItemAllFields'));
            this.get_objectData().get_clientObjectProperties()['ListItemAllFields'] = $v_0;
        }
        return $v_0;
    },

    get_level: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Level');
        return ((this.get_objectData().get_properties()['Level']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.File.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Exists;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Exists'] = ($v_0);
            delete parentNode.Exists;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Author;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_author().fromJson($v_0);
            delete parentNode.Author;
        }
        $v_0 = parentNode.ModifiedBy;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_modifiedBy().fromJson($v_0);
            delete parentNode.ModifiedBy;
        }
        $v_0 = parentNode.TimeCreated;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TimeCreated'] = ($v_0);
            delete parentNode.TimeCreated;
        }
        $v_0 = parentNode.TimeLastModified;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TimeLastModified'] = ($v_0);
            delete parentNode.TimeLastModified;
        }
        $v_0 = parentNode.CustomizedPageStatus;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CustomizedPageStatus'] = ($v_0);
            delete parentNode.CustomizedPageStatus;
        }
        $v_0 = parentNode.ETag;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ETag'] = ($v_0);
            delete parentNode.ETag;
        }
        $v_0 = parentNode.LockedByUser;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_lockedByUser().fromJson($v_0);
            delete parentNode.LockedByUser;
        }
        $v_0 = parentNode.CheckOutType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CheckOutType'] = ($v_0);
            delete parentNode.CheckOutType;
        }
        $v_0 = parentNode.CheckedOutByUser;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_checkedOutByUser().fromJson($v_0);
            delete parentNode.CheckedOutByUser;
        }
        $v_0 = parentNode.CheckInComment;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CheckInComment'] = ($v_0);
            delete parentNode.CheckInComment;
        }
        $v_0 = parentNode.UIVersion;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UIVersion'] = ($v_0);
            delete parentNode.UIVersion;
        }
        $v_0 = parentNode.MajorVersion;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MajorVersion'] = ($v_0);
            delete parentNode.MajorVersion;
        }
        $v_0 = parentNode.MinorVersion;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MinorVersion'] = ($v_0);
            delete parentNode.MinorVersion;
        }
        $v_0 = parentNode.UIVersionLabel;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UIVersionLabel'] = ($v_0);
            delete parentNode.UIVersionLabel;
        }
        $v_0 = parentNode.ServerRelativeUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ServerRelativeUrl'] = ($v_0);
            delete parentNode.ServerRelativeUrl;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.Versions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_versions().fromJson($v_0);
            delete parentNode.Versions;
        }
        $v_0 = parentNode.ListItemAllFields;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_listItemAllFields().fromJson($v_0);
            delete parentNode.ListItemAllFields;
        }
        $v_0 = parentNode.Level;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Level'] = ($v_0);
            delete parentNode.Level;
        }
    },

    moveTo: function(newUrl, flags) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'MoveTo', [newUrl, flags]);
        this.get_context().addQuery($v_0);
    },

    copyTo: function(strNewUrl, bOverWrite) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'CopyTo', [strNewUrl, bOverWrite]);
        this.get_context().addQuery($v_0);
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    },

    recycle: function() {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = new SP.ClientActionInvokeMethod(this, 'Recycle', null);
        this.get_context().addQuery($v_1);
        $v_0 = new SP.GuidResult();
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.removeFromParentCollection();
        return $v_0;
    },

    checkOut: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'CheckOut', null);
        this.get_context().addQuery($v_0);
    },

    undoCheckOut: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'UndoCheckOut', null);
        this.get_context().addQuery($v_0);
    },

    checkIn: function(comment, checkInType) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'CheckIn', [comment, checkInType]);
        this.get_context().addQuery($v_0);
    },

    publish: function(comment) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Publish', [comment]);
        this.get_context().addQuery($v_0);
    },

    unPublish: function(comment) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'UnPublish', [comment]);
        this.get_context().addQuery($v_0);
    },

    getLimitedWebPartManager: function(scope) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetLimitedWebPartManager']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = [];
            this.get_objectData().get_methodReturnObjects()['GetLimitedWebPartManager'] = $v_1;
        }
        $v_0 = (($v_1[(scope)]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.WebParts.LimitedWebPartManager(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetLimitedWebPartManager', [scope]));
        $v_1[(scope)] = $v_0;
        return $v_0;
    }
}


SP.FilePropertyNames = function() {}


SP.FileObjectPropertyNames = function() {}


SP.FileCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FileCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.FileCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    addTemplateFile: function(urlOfFile, templateFileType) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.File(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'AddTemplateFile', [urlOfFile, templateFileType]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    }
}


SP.FileVersion = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FileVersion.initializeBase(this, [Context, ObjectPath]);
}
SP.FileVersion.prototype = {

    get_created: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Created');
        return ((this.get_objectData().get_properties()['Created']));
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ID');
        return ((this.get_objectData().get_properties()['ID']));
    },

    get_versionLabel: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('VersionLabel');
        return ((this.get_objectData().get_properties()['VersionLabel']));
    },

    get_createdBy: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['CreatedBy']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.User(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'CreatedBy'));
            this.get_objectData().get_clientObjectProperties()['CreatedBy'] = $v_0;
        }
        return $v_0;
    },

    get_url: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Url');
        return ((this.get_objectData().get_properties()['Url']));
    },

    get_isCurrentVersion: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsCurrentVersion');
        return ((this.get_objectData().get_properties()['IsCurrentVersion']));
    },

    get_checkInComment: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CheckInComment');
        return ((this.get_objectData().get_properties()['CheckInComment']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.FileVersion.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Created;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Created'] = ($v_0);
            delete parentNode.Created;
        }
        $v_0 = parentNode.ID;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ID'] = ($v_0);
            delete parentNode.ID;
        }
        $v_0 = parentNode.VersionLabel;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['VersionLabel'] = ($v_0);
            delete parentNode.VersionLabel;
        }
        $v_0 = parentNode.CreatedBy;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_createdBy().fromJson($v_0);
            delete parentNode.CreatedBy;
        }
        $v_0 = parentNode.Url;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Url'] = ($v_0);
            delete parentNode.Url;
        }
        $v_0 = parentNode.IsCurrentVersion;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsCurrentVersion'] = ($v_0);
            delete parentNode.IsCurrentVersion;
        }
        $v_0 = parentNode.CheckInComment;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CheckInComment'] = ($v_0);
            delete parentNode.CheckInComment;
        }
    }
}


SP.FileVersionPropertyNames = function() {}


SP.FileVersionObjectPropertyNames = function() {}


SP.FileVersionCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FileVersionCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.FileVersionCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    deleteByID: function(vid) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteByID', [vid]);
        this.get_context().addQuery($v_0);
    },

    deleteByLabel: function(versionlabel) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteByLabel', [versionlabel]);
        this.get_context().addQuery($v_0);
    },

    deleteAll: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteAll', null);
        this.get_context().addQuery($v_0);
    },

    restoreByLabel: function(versionlabel) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'RestoreByLabel', [versionlabel]);
        this.get_context().addQuery($v_0);
    }
}


SP.Folder = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Folder.initializeBase(this, [Context, ObjectPath]);
}
SP.Folder.prototype = {

    get_parentFolder: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ParentFolder']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Folder(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ParentFolder'));
            this.get_objectData().get_clientObjectProperties()['ParentFolder'] = $v_0;
        }
        return $v_0;
    },

    get_itemCount: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ItemCount');
        return ((this.get_objectData().get_properties()['ItemCount']));
    },

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },

    get_serverRelativeUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ServerRelativeUrl');
        return ((this.get_objectData().get_properties()['ServerRelativeUrl']));
    },

    get_welcomePage: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WelcomePage');
        return ((this.get_objectData().get_properties()['WelcomePage']));
    },
    set_welcomePage: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['WelcomePage'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'WelcomePage', value));
        }
        return value;
    },

    get_files: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Files']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FileCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Files'));
            this.get_objectData().get_clientObjectProperties()['Files'] = $v_0;
        }
        return $v_0;
    },

    get_folders: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Folders']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FolderCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Folders'));
            this.get_objectData().get_clientObjectProperties()['Folders'] = $v_0;
        }
        return $v_0;
    },

    get_uniqueContentTypeOrder: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UniqueContentTypeOrder');
        return ((this.get_objectData().get_properties()['UniqueContentTypeOrder']));
    },
    set_uniqueContentTypeOrder: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['UniqueContentTypeOrder'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'UniqueContentTypeOrder', value));
        }
        return value;
    },

    get_contentTypeOrder: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ContentTypeOrder');
        return ((this.get_objectData().get_properties()['ContentTypeOrder']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Folder.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.ParentFolder;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_parentFolder().fromJson($v_0);
            delete parentNode.ParentFolder;
        }
        $v_0 = parentNode.ItemCount;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ItemCount'] = ($v_0);
            delete parentNode.ItemCount;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.ServerRelativeUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ServerRelativeUrl'] = ($v_0);
            delete parentNode.ServerRelativeUrl;
        }
        $v_0 = parentNode.WelcomePage;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WelcomePage'] = ($v_0);
            delete parentNode.WelcomePage;
        }
        $v_0 = parentNode.Files;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_files().fromJson($v_0);
            delete parentNode.Files;
        }
        $v_0 = parentNode.Folders;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_folders().fromJson($v_0);
            delete parentNode.Folders;
        }
        $v_0 = parentNode.UniqueContentTypeOrder;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UniqueContentTypeOrder'] = (([]));
            SP.DataConvert.populateArray(this.get_context(), (((this.get_objectData().get_properties()['UniqueContentTypeOrder']))), ($v_0));
            delete parentNode.UniqueContentTypeOrder;
        }
        $v_0 = parentNode.ContentTypeOrder;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ContentTypeOrder'] = (([]));
            SP.DataConvert.populateArray(this.get_context(), (((this.get_objectData().get_properties()['ContentTypeOrder']))), ($v_0));
            delete parentNode.ContentTypeOrder;
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    },

    recycle: function() {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = new SP.ClientActionInvokeMethod(this, 'Recycle', null);
        this.get_context().addQuery($v_1);
        $v_0 = new SP.GuidResult();
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.removeFromParentCollection();
        return $v_0;
    }
}


SP.FolderPropertyNames = function() {}


SP.FolderObjectPropertyNames = function() {}


SP.FolderCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FolderCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.FolderCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    add: function(strUrl) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Folder(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [strUrl]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    }
}


SP.Form = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Form.initializeBase(this, [Context, ObjectPath]);
}
SP.Form.prototype = {

    get_serverRelativeUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ServerRelativeUrl');
        return ((this.get_objectData().get_properties()['ServerRelativeUrl']));
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_formType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FormType');
        return ((this.get_objectData().get_properties()['FormType']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Form.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.ServerRelativeUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ServerRelativeUrl'] = ($v_0);
            delete parentNode.ServerRelativeUrl;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.FormType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FormType'] = ($v_0);
            delete parentNode.FormType;
        }
    }
}


SP.FormPropertyNames = function() {}


SP.FormCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.FormCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.FormCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getByPageType: function(formType) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByPageType']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = [];
            this.get_objectData().get_methodReturnObjects()['GetByPageType'] = $v_1;
        }
        $v_0 = (($v_1[(formType)]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Form(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByPageType', [formType]));
        $v_1[(formType)] = $v_0;
        return $v_0;
    }
}


SP.Group = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Group.initializeBase(this, [Context, ObjectPath]);
}
SP.Group.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Title'] = $p0.$1_1;
        }
    },

    get_owner: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Owner']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Principal(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Owner'));
            this.get_objectData().get_clientObjectProperties()['Owner'] = $v_0;
        }
        return $v_0;
    },
    set_owner: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_clientObjectProperties()['Owner'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Owner', value));
        }
        return value;
    },

    get_ownerTitle: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('OwnerTitle');
        return ((this.get_objectData().get_properties()['OwnerTitle']));
    },

    get_users: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Users']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.UserCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Users'));
            this.get_objectData().get_clientObjectProperties()['Users'] = $v_0;
        }
        return $v_0;
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Description'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Description', value));
        }
        return value;
    },

    get_onlyAllowMembersViewMembership: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('OnlyAllowMembersViewMembership');
        return ((this.get_objectData().get_properties()['OnlyAllowMembersViewMembership']));
    },
    set_onlyAllowMembersViewMembership: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['OnlyAllowMembersViewMembership'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'OnlyAllowMembersViewMembership', value));
        }
        return value;
    },

    get_allowMembersEditMembership: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowMembersEditMembership');
        return ((this.get_objectData().get_properties()['AllowMembersEditMembership']));
    },
    set_allowMembersEditMembership: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowMembersEditMembership'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowMembersEditMembership', value));
        }
        return value;
    },

    get_allowRequestToJoinLeave: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowRequestToJoinLeave');
        return ((this.get_objectData().get_properties()['AllowRequestToJoinLeave']));
    },
    set_allowRequestToJoinLeave: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowRequestToJoinLeave'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowRequestToJoinLeave', value));
        }
        return value;
    },

    get_autoAcceptRequestToJoinLeave: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AutoAcceptRequestToJoinLeave');
        return ((this.get_objectData().get_properties()['AutoAcceptRequestToJoinLeave']));
    },
    set_autoAcceptRequestToJoinLeave: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AutoAcceptRequestToJoinLeave'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AutoAcceptRequestToJoinLeave', value));
        }
        return value;
    },

    get_requestToJoinLeaveEmailSetting: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RequestToJoinLeaveEmailSetting');
        return ((this.get_objectData().get_properties()['RequestToJoinLeaveEmailSetting']));
    },
    set_requestToJoinLeaveEmailSetting: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['RequestToJoinLeaveEmailSetting'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'RequestToJoinLeaveEmailSetting', value));
        }
        return value;
    },

    get_canCurrentUserViewMembership: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CanCurrentUserViewMembership');
        return ((this.get_objectData().get_properties()['CanCurrentUserViewMembership']));
    },

    get_canCurrentUserEditMembership: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CanCurrentUserEditMembership');
        return ((this.get_objectData().get_properties()['CanCurrentUserEditMembership']));
    },

    get_canCurrentUserManageGroup: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CanCurrentUserManageGroup');
        return ((this.get_objectData().get_properties()['CanCurrentUserManageGroup']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Group.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Owner;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_owner().fromJson($v_0);
            delete parentNode.Owner;
        }
        $v_0 = parentNode.OwnerTitle;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['OwnerTitle'] = ($v_0);
            delete parentNode.OwnerTitle;
        }
        $v_0 = parentNode.Users;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_users().fromJson($v_0);
            delete parentNode.Users;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.OnlyAllowMembersViewMembership;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['OnlyAllowMembersViewMembership'] = ($v_0);
            delete parentNode.OnlyAllowMembersViewMembership;
        }
        $v_0 = parentNode.AllowMembersEditMembership;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowMembersEditMembership'] = ($v_0);
            delete parentNode.AllowMembersEditMembership;
        }
        $v_0 = parentNode.AllowRequestToJoinLeave;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowRequestToJoinLeave'] = ($v_0);
            delete parentNode.AllowRequestToJoinLeave;
        }
        $v_0 = parentNode.AutoAcceptRequestToJoinLeave;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AutoAcceptRequestToJoinLeave'] = ($v_0);
            delete parentNode.AutoAcceptRequestToJoinLeave;
        }
        $v_0 = parentNode.RequestToJoinLeaveEmailSetting;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RequestToJoinLeaveEmailSetting'] = ($v_0);
            delete parentNode.RequestToJoinLeaveEmailSetting;
        }
        $v_0 = parentNode.CanCurrentUserViewMembership;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CanCurrentUserViewMembership'] = ($v_0);
            delete parentNode.CanCurrentUserViewMembership;
        }
        $v_0 = parentNode.CanCurrentUserEditMembership;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CanCurrentUserEditMembership'] = ($v_0);
            delete parentNode.CanCurrentUserEditMembership;
        }
        $v_0 = parentNode.CanCurrentUserManageGroup;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CanCurrentUserManageGroup'] = ($v_0);
            delete parentNode.CanCurrentUserManageGroup;
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    }
}


SP.GroupPropertyNames = function() {}


SP.GroupObjectPropertyNames = function() {}


SP.GroupCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.GroupCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.GroupCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getById: function(id) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = [];
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[id]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Group(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [id]));
        $v_1[id] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Group(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    },

    remove: function(group) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Remove', [group]);
        this.get_context().addQuery($v_0);
        this.removeChild(group);
    }
}


SP.GroupCreationInformation = function() {
    ULS5Vl: ;
    SP.GroupCreationInformation.initializeBase(this);
}
SP.GroupCreationInformation.prototype = {
    $1_1: null,
    $2_1: null,

    get_title: function() {
        ULS5Vl: ;
        return this.$1_1;
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.$1_1 = value;
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        return this.$2_1;
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.$2_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{9fd1540e-59e6-47fa-9a00-5173c9c35785}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Title', 'Description'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1_1 = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2_1 = ($v_0);
            delete parentNode.Description;
        }
    }
}


SP.List = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.List.initializeBase(this, [Context, ObjectPath]);
}
SP.List.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Description'] = $p0.$2_1;
            this.get_objectData().get_properties()['TemplateFeatureId'] = $p0.$1J_1;
            this.get_objectData().get_properties()['Title'] = $p0.$1_1;
        }
    },

    getItemById: function(id) {
        ULS5Vl: ;
        if (typeof(id) === 'string') {
            return this.$3o(id.toString());
        } else {
            id = parseInt(id.toString());
            var $v_0;
            var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetItemById']));
            if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
                $v_1 = [];
                this.get_objectData().get_methodReturnObjects()['GetItemById'] = $v_1;
            }
            $v_0 = (($v_1[id]));
            if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
                return $v_0;
            }
            $v_0 = new SP.ListItem(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetItemById', [id]));
            $v_1[id] = $v_0;
            return $v_0;
        }
    },

    get_parentWeb: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ParentWeb']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Web(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ParentWeb'));
            this.get_objectData().get_clientObjectProperties()['ParentWeb'] = $v_0;
        }
        return $v_0;
    },

    get_parentWebUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ParentWebUrl');
        return ((this.get_objectData().get_properties()['ParentWebUrl']));
    },

    get_fields: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Fields']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FieldCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Fields'));
            this.get_objectData().get_clientObjectProperties()['Fields'] = $v_0;
        }
        return $v_0;
    },

    get_views: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Views']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ViewCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Views'));
            this.get_objectData().get_clientObjectProperties()['Views'] = $v_0;
        }
        return $v_0;
    },

    get_userCustomActions: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['UserCustomActions']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.UserCustomActionCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'UserCustomActions'));
            this.get_objectData().get_clientObjectProperties()['UserCustomActions'] = $v_0;
        }
        return $v_0;
    },

    get_forms: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Forms']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FormCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Forms'));
            this.get_objectData().get_clientObjectProperties()['Forms'] = $v_0;
        }
        return $v_0;
    },

    get_dataSource: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DataSource');
        return ((this.get_objectData().get_properties()['DataSource']));
    },

    get_hasExternalDataSource: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('HasExternalDataSource');
        return ((this.get_objectData().get_properties()['HasExternalDataSource']));
    },

    get_workflowAssociations: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['WorkflowAssociations']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Workflow.WorkflowAssociationCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'WorkflowAssociations'));
            this.get_objectData().get_clientObjectProperties()['WorkflowAssociations'] = $v_0;
        }
        return $v_0;
    },

    get_created: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Created');
        return ((this.get_objectData().get_properties()['Created']));
    },

    get_lastItemModifiedDate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('LastItemModifiedDate');
        return ((this.get_objectData().get_properties()['LastItemModifiedDate']));
    },

    get_lastItemDeletedDate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('LastItemDeletedDate');
        return ((this.get_objectData().get_properties()['LastItemDeletedDate']));
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Description'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Description', value));
        }
        return value;
    },

    get_rootFolder: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['RootFolder']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Folder(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'RootFolder'));
            this.get_objectData().get_clientObjectProperties()['RootFolder'] = $v_0;
        }
        return $v_0;
    },

    get_isSiteAssetsLibrary: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsSiteAssetsLibrary');
        return ((this.get_objectData().get_properties()['IsSiteAssetsLibrary']));
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Title'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Title', value));
        }
        return value;
    },

    get_direction: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Direction');
        return ((this.get_objectData().get_properties()['Direction']));
    },
    set_direction: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Direction'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Direction', value));
        }
        return value;
    },

    get_schemaXml: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SchemaXml');
        return ((this.get_objectData().get_properties()['SchemaXml']));
    },

    get_baseType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('BaseType');
        return ((this.get_objectData().get_properties()['BaseType']));
    },

    get_imageUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ImageUrl');
        return ((this.get_objectData().get_properties()['ImageUrl']));
    },

    get_itemCount: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ItemCount');
        return ((this.get_objectData().get_properties()['ItemCount']));
    },

    get_baseTemplate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('BaseTemplate');
        return ((this.get_objectData().get_properties()['BaseTemplate']));
    },

    get_defaultContentApprovalWorkflowId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefaultContentApprovalWorkflowId');
        return ((this.get_objectData().get_properties()['DefaultContentApprovalWorkflowId']));
    },
    set_defaultContentApprovalWorkflowId: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DefaultContentApprovalWorkflowId'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DefaultContentApprovalWorkflowId', value));
        }
        return value;
    },

    get_templateFeatureId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TemplateFeatureId');
        return ((this.get_objectData().get_properties()['TemplateFeatureId']));
    },

    get_defaultViewUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefaultViewUrl');
        return ((this.get_objectData().get_properties()['DefaultViewUrl']));
    },

    get_defaultEditFormUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefaultEditFormUrl');
        return ((this.get_objectData().get_properties()['DefaultEditFormUrl']));
    },
    set_defaultEditFormUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DefaultEditFormUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DefaultEditFormUrl', value));
        }
        return value;
    },

    get_defaultNewFormUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefaultNewFormUrl');
        return ((this.get_objectData().get_properties()['DefaultNewFormUrl']));
    },
    set_defaultNewFormUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DefaultNewFormUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DefaultNewFormUrl', value));
        }
        return value;
    },

    get_defaultDisplayFormUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefaultDisplayFormUrl');
        return ((this.get_objectData().get_properties()['DefaultDisplayFormUrl']));
    },
    set_defaultDisplayFormUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DefaultDisplayFormUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DefaultDisplayFormUrl', value));
        }
        return value;
    },

    get_enableAttachments: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EnableAttachments');
        return ((this.get_objectData().get_properties()['EnableAttachments']));
    },
    set_enableAttachments: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EnableAttachments'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EnableAttachments', value));
        }
        return value;
    },

    get_serverTemplateCanCreateFolders: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ServerTemplateCanCreateFolders');
        return ((this.get_objectData().get_properties()['ServerTemplateCanCreateFolders']));
    },

    get_enableFolderCreation: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EnableFolderCreation');
        return ((this.get_objectData().get_properties()['EnableFolderCreation']));
    },
    set_enableFolderCreation: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EnableFolderCreation'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EnableFolderCreation', value));
        }
        return value;
    },

    get_enableModeration: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EnableModeration');
        return ((this.get_objectData().get_properties()['EnableModeration']));
    },
    set_enableModeration: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EnableModeration'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EnableModeration', value));
        }
        return value;
    },

    get_enableVersioning: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EnableVersioning');
        return ((this.get_objectData().get_properties()['EnableVersioning']));
    },
    set_enableVersioning: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EnableVersioning'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EnableVersioning', value));
        }
        return value;
    },

    get_forceCheckout: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ForceCheckout');
        return ((this.get_objectData().get_properties()['ForceCheckout']));
    },
    set_forceCheckout: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ForceCheckout'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ForceCheckout', value));
        }
        return value;
    },

    get_enableMinorVersions: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EnableMinorVersions');
        return ((this.get_objectData().get_properties()['EnableMinorVersions']));
    },
    set_enableMinorVersions: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EnableMinorVersions'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EnableMinorVersions', value));
        }
        return value;
    },

    get_draftVersionVisibility: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DraftVersionVisibility');
        return ((this.get_objectData().get_properties()['DraftVersionVisibility']));
    },
    set_draftVersionVisibility: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DraftVersionVisibility'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DraftVersionVisibility', value));
        }
        return value;
    },

    get_hidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Hidden');
        return ((this.get_objectData().get_properties()['Hidden']));
    },
    set_hidden: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Hidden'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Hidden', value));
        }
        return value;
    },

    get_isApplicationList: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsApplicationList');
        return ((this.get_objectData().get_properties()['IsApplicationList']));
    },
    set_isApplicationList: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['IsApplicationList'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'IsApplicationList', value));
        }
        return value;
    },

    get_isCatalog: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsCatalog');
        return ((this.get_objectData().get_properties()['IsCatalog']));
    },

    get_allowContentTypes: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowContentTypes');
        return ((this.get_objectData().get_properties()['AllowContentTypes']));
    },

    get_documentTemplateUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DocumentTemplateUrl');
        return ((this.get_objectData().get_properties()['DocumentTemplateUrl']));
    },
    set_documentTemplateUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DocumentTemplateUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DocumentTemplateUrl', value));
        }
        return value;
    },

    get_contentTypesEnabled: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ContentTypesEnabled');
        return ((this.get_objectData().get_properties()['ContentTypesEnabled']));
    },
    set_contentTypesEnabled: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ContentTypesEnabled'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ContentTypesEnabled', value));
        }
        return value;
    },

    get_multipleDataList: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MultipleDataList');
        return ((this.get_objectData().get_properties()['MultipleDataList']));
    },
    set_multipleDataList: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['MultipleDataList'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'MultipleDataList', value));
        }
        return value;
    },

    get_onQuickLaunch: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('OnQuickLaunch');
        return ((this.get_objectData().get_properties()['OnQuickLaunch']));
    },
    set_onQuickLaunch: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['OnQuickLaunch'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'OnQuickLaunch', value));
        }
        return value;
    },

    get_browserFileHandling: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('BrowserFileHandling');
        return ((this.get_objectData().get_properties()['BrowserFileHandling']));
    },

    get_noCrawl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('NoCrawl');
        return ((this.get_objectData().get_properties()['NoCrawl']));
    },
    set_noCrawl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['NoCrawl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'NoCrawl', value));
        }
        return value;
    },

    get_validationFormula: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ValidationFormula');
        return ((this.get_objectData().get_properties()['ValidationFormula']));
    },
    set_validationFormula: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ValidationFormula'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ValidationFormula', value));
        }
        return value;
    },

    get_validationMessage: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ValidationMessage');
        return ((this.get_objectData().get_properties()['ValidationMessage']));
    },
    set_validationMessage: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ValidationMessage'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ValidationMessage', value));
        }
        return value;
    },

    get_contentTypes: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ContentTypes']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ContentTypeCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ContentTypes'));
            this.get_objectData().get_clientObjectProperties()['ContentTypes'] = $v_0;
        }
        return $v_0;
    },

    get_effectiveBasePermissions: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EffectiveBasePermissions');
        return ((this.get_objectData().get_properties()['EffectiveBasePermissions']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.List.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.ParentWeb;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_parentWeb().fromJson($v_0);
            delete parentNode.ParentWeb;
        }
        $v_0 = parentNode.ParentWebUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ParentWebUrl'] = ($v_0);
            delete parentNode.ParentWebUrl;
        }
        $v_0 = parentNode.Fields;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_fields().fromJson($v_0);
            delete parentNode.Fields;
        }
        $v_0 = parentNode.Views;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_views().fromJson($v_0);
            delete parentNode.Views;
        }
        $v_0 = parentNode.UserCustomActions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_userCustomActions().fromJson($v_0);
            delete parentNode.UserCustomActions;
        }
        $v_0 = parentNode.Forms;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_forms().fromJson($v_0);
            delete parentNode.Forms;
        }
        $v_0 = parentNode.DataSource;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DataSource'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.DataSource;
        }
        $v_0 = parentNode.HasExternalDataSource;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['HasExternalDataSource'] = ($v_0);
            delete parentNode.HasExternalDataSource;
        }
        $v_0 = parentNode.WorkflowAssociations;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_workflowAssociations().fromJson($v_0);
            delete parentNode.WorkflowAssociations;
        }
        $v_0 = parentNode.Created;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Created'] = ($v_0);
            delete parentNode.Created;
        }
        $v_0 = parentNode.LastItemModifiedDate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['LastItemModifiedDate'] = ($v_0);
            delete parentNode.LastItemModifiedDate;
        }
        $v_0 = parentNode.LastItemDeletedDate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['LastItemDeletedDate'] = ($v_0);
            delete parentNode.LastItemDeletedDate;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.RootFolder;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_rootFolder().fromJson($v_0);
            delete parentNode.RootFolder;
        }
        $v_0 = parentNode.IsSiteAssetsLibrary;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsSiteAssetsLibrary'] = ($v_0);
            delete parentNode.IsSiteAssetsLibrary;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Direction;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Direction'] = ($v_0);
            delete parentNode.Direction;
        }
        $v_0 = parentNode.SchemaXml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SchemaXml'] = ($v_0);
            delete parentNode.SchemaXml;
        }
        $v_0 = parentNode.BaseType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['BaseType'] = ($v_0);
            delete parentNode.BaseType;
        }
        $v_0 = parentNode.ImageUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ImageUrl'] = ($v_0);
            delete parentNode.ImageUrl;
        }
        $v_0 = parentNode.ItemCount;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ItemCount'] = ($v_0);
            delete parentNode.ItemCount;
        }
        $v_0 = parentNode.BaseTemplate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['BaseTemplate'] = ($v_0);
            delete parentNode.BaseTemplate;
        }
        $v_0 = parentNode.DefaultContentApprovalWorkflowId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefaultContentApprovalWorkflowId'] = ($v_0);
            delete parentNode.DefaultContentApprovalWorkflowId;
        }
        $v_0 = parentNode.TemplateFeatureId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TemplateFeatureId'] = ($v_0);
            delete parentNode.TemplateFeatureId;
        }
        $v_0 = parentNode.DefaultViewUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefaultViewUrl'] = ($v_0);
            delete parentNode.DefaultViewUrl;
        }
        $v_0 = parentNode.DefaultEditFormUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefaultEditFormUrl'] = ($v_0);
            delete parentNode.DefaultEditFormUrl;
        }
        $v_0 = parentNode.DefaultNewFormUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefaultNewFormUrl'] = ($v_0);
            delete parentNode.DefaultNewFormUrl;
        }
        $v_0 = parentNode.DefaultDisplayFormUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefaultDisplayFormUrl'] = ($v_0);
            delete parentNode.DefaultDisplayFormUrl;
        }
        $v_0 = parentNode.EnableAttachments;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EnableAttachments'] = ($v_0);
            delete parentNode.EnableAttachments;
        }
        $v_0 = parentNode.ServerTemplateCanCreateFolders;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ServerTemplateCanCreateFolders'] = ($v_0);
            delete parentNode.ServerTemplateCanCreateFolders;
        }
        $v_0 = parentNode.EnableFolderCreation;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EnableFolderCreation'] = ($v_0);
            delete parentNode.EnableFolderCreation;
        }
        $v_0 = parentNode.EnableModeration;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EnableModeration'] = ($v_0);
            delete parentNode.EnableModeration;
        }
        $v_0 = parentNode.EnableVersioning;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EnableVersioning'] = ($v_0);
            delete parentNode.EnableVersioning;
        }
        $v_0 = parentNode.ForceCheckout;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ForceCheckout'] = ($v_0);
            delete parentNode.ForceCheckout;
        }
        $v_0 = parentNode.EnableMinorVersions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EnableMinorVersions'] = ($v_0);
            delete parentNode.EnableMinorVersions;
        }
        $v_0 = parentNode.DraftVersionVisibility;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DraftVersionVisibility'] = ($v_0);
            delete parentNode.DraftVersionVisibility;
        }
        $v_0 = parentNode.Hidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Hidden'] = ($v_0);
            delete parentNode.Hidden;
        }
        $v_0 = parentNode.IsApplicationList;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsApplicationList'] = ($v_0);
            delete parentNode.IsApplicationList;
        }
        $v_0 = parentNode.IsCatalog;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsCatalog'] = ($v_0);
            delete parentNode.IsCatalog;
        }
        $v_0 = parentNode.AllowContentTypes;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowContentTypes'] = ($v_0);
            delete parentNode.AllowContentTypes;
        }
        $v_0 = parentNode.DocumentTemplateUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DocumentTemplateUrl'] = ($v_0);
            delete parentNode.DocumentTemplateUrl;
        }
        $v_0 = parentNode.ContentTypesEnabled;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ContentTypesEnabled'] = ($v_0);
            delete parentNode.ContentTypesEnabled;
        }
        $v_0 = parentNode.MultipleDataList;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MultipleDataList'] = ($v_0);
            delete parentNode.MultipleDataList;
        }
        $v_0 = parentNode.OnQuickLaunch;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['OnQuickLaunch'] = ($v_0);
            delete parentNode.OnQuickLaunch;
        }
        $v_0 = parentNode.BrowserFileHandling;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['BrowserFileHandling'] = ($v_0);
            delete parentNode.BrowserFileHandling;
        }
        $v_0 = parentNode.NoCrawl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['NoCrawl'] = ($v_0);
            delete parentNode.NoCrawl;
        }
        $v_0 = parentNode.ValidationFormula;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ValidationFormula'] = ($v_0);
            delete parentNode.ValidationFormula;
        }
        $v_0 = parentNode.ValidationMessage;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ValidationMessage'] = ($v_0);
            delete parentNode.ValidationMessage;
        }
        $v_0 = parentNode.ContentTypes;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_contentTypes().fromJson($v_0);
            delete parentNode.ContentTypes;
        }
        $v_0 = parentNode.EffectiveBasePermissions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EffectiveBasePermissions'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.EffectiveBasePermissions;
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    },

    getView: function(viewGuid) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetView']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetView'] = $v_1;
        }
        $v_0 = (($v_1[viewGuid.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.View(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetView', [viewGuid]));
        $v_1[viewGuid.toString()] = $v_0;
        return $v_0;
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    },

    recycle: function() {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = new SP.ClientActionInvokeMethod(this, 'Recycle', null);
        this.get_context().addQuery($v_1);
        $v_0 = new SP.GuidResult();
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.removeFromParentCollection();
        return $v_0;
    },

    getChanges: function(query_) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.ChangeCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetChanges', [query_]));
        return $v_0;
    },

    addItem: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.ListItem(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'AddItem', [parameters]));
        $v_0.$7(parameters);
        return $v_0;
    },

    getItems: function(query_) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.ListItemCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetItems', [query_]));
        return $v_0;
    },

    $3o: function($p0) {
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetItemByStringId']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetItemByStringId'] = $v_1;
        }
        $v_0 = (($v_1[$p0]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.ListItem(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetItemByStringId', [$p0]));
        $v_1[$p0] = $v_0;
        return $v_0;
    },

    getRelatedFields: function() {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.RelatedFieldCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetRelatedFields', null));
        return $v_0;
    },

    getRelatedFieldsExtendedData: function() {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.RelatedFieldExtendedDataCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetRelatedFieldsExtendedData', null));
        return $v_0;
    }
}


SP.ListPropertyNames = function() {}


SP.ListObjectPropertyNames = function() {}


SP.ListCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ListCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.ListCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getByTitle: function(strListName) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByTitle']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByTitle'] = $v_1;
        }
        $v_0 = (($v_1[strListName.toUpperCase()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.List(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByTitle', [strListName]));
        $v_1[strListName.toUpperCase()] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    getById: function(uniqueId) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[uniqueId.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.List(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [uniqueId]));
        $v_1[uniqueId.toString()] = $v_0;
        return $v_0;
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.List(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    },

    ensureSitePagesLibrary: function() {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.List(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'EnsureSitePagesLibrary', null));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        return $v_0;
    },

    ensureSiteAssetsLibrary: function() {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.List(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'EnsureSiteAssetsLibrary', null));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        return $v_0;
    }
}


SP.ListCreationInformation = function() {
    ULS5Vl: ;
    SP.ListCreationInformation.initializeBase(this);
}
SP.ListCreationInformation.prototype = {
    $1_1: null,
    $2_1: null,
    $6_1: null,
    $1J_1: null,
    $2I_1: 0,
    $1x_1: 0,
    $1v_1: null,
    $2D_1: 0,
    $1w_1: null,

    get_title: function() {
        ULS5Vl: ;
        return this.$1_1;
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.$1_1 = value;
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        return this.$2_1;
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.$2_1 = value;
        return value;
    },

    get_url: function() {
        ULS5Vl: ;
        return this.$6_1;
    },
    set_url: function(value) {
        ULS5Vl: ;
        this.$6_1 = value;
        return value;
    },

    get_templateFeatureId: function() {
        ULS5Vl: ;
        return this.$1J_1;
    },
    set_templateFeatureId: function(value) {
        ULS5Vl: ;
        this.$1J_1 = value;
        return value;
    },

    get_templateType: function() {
        ULS5Vl: ;
        return this.$2I_1;
    },
    set_templateType: function(value) {
        ULS5Vl: ;
        this.$2I_1 = value;
        return value;
    },

    get_documentTemplateType: function() {
        ULS5Vl: ;
        return this.$1x_1;
    },
    set_documentTemplateType: function(value) {
        ULS5Vl: ;
        this.$1x_1 = value;
        return value;
    },

    get_customSchemaXml: function() {
        ULS5Vl: ;
        return this.$1v_1;
    },
    set_customSchemaXml: function(value) {
        ULS5Vl: ;
        this.$1v_1 = value;
        return value;
    },

    get_quickLaunchOption: function() {
        ULS5Vl: ;
        return this.$2D_1;
    },
    set_quickLaunchOption: function(value) {
        ULS5Vl: ;
        this.$2D_1 = value;
        return value;
    },

    get_dataSourceProperties: function() {
        ULS5Vl: ;
        return this.$1w_1;
    },
    set_dataSourceProperties: function(value) {
        ULS5Vl: ;
        this.$1w_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{e247b7fc-095e-4ea4-a4c9-c5d373723d8c}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Title', 'Description', 'Url', 'TemplateFeatureId', 'TemplateType', 'DocumentTemplateType', 'CustomSchemaXml', 'QuickLaunchOption', 'DataSourceProperties'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1_1 = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2_1 = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.Url;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$6_1 = ($v_0);
            delete parentNode.Url;
        }
        $v_0 = parentNode.TemplateFeatureId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1J_1 = ($v_0);
            delete parentNode.TemplateFeatureId;
        }
        $v_0 = parentNode.TemplateType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2I_1 = ($v_0);
            delete parentNode.TemplateType;
        }
        $v_0 = parentNode.DocumentTemplateType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1x_1 = ($v_0);
            delete parentNode.DocumentTemplateType;
        }
        $v_0 = parentNode.CustomSchemaXml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1v_1 = ($v_0);
            delete parentNode.CustomSchemaXml;
        }
        $v_0 = parentNode.QuickLaunchOption;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2D_1 = ($v_0);
            delete parentNode.QuickLaunchOption;
        }
        $v_0 = parentNode.DataSourceProperties;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1w_1 = ($v_0);
            delete parentNode.DataSourceProperties;
        }
    }
}


SP.ListDataSource = function() {
    ULS5Vl: ;
    SP.ListDataSource.initializeBase(this);
}
SP.ListDataSource.prototype = {
    $3J_1: null,

    get_properties: function() {
        ULS5Vl: ;
        return this.$3J_1;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{06bfe4a5-1516-4b55-a6d7-ecbe3ff7a3c8}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Properties'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Properties;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3J_1 = ($v_0);
            delete parentNode.Properties;
        }
    }
}


SP.ListDataValidationExceptionValue = function() {
    ULS5Vl: ;
    SP.ListDataValidationExceptionValue.initializeBase(this);
}
SP.ListDataValidationExceptionValue.prototype = {
    $1z_1: null,
    $3C_1: null,

    get_fieldFailures: function() {
        ULS5Vl: ;
        return this.$1z_1;
    },

    get_itemFailure: function() {
        ULS5Vl: ;
        return this.$3C_1;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{356fe248-721a-4adf-af96-20822bc5476e}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['FieldFailures', 'ItemFailure'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.FieldFailures;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1z_1 = (([]));
            SP.DataConvert.populateArray(null, ((this.$1z_1)), ($v_0));
            delete parentNode.FieldFailures;
        }
        $v_0 = parentNode.ItemFailure;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3C_1 = ((SP.DataConvert.fixupType(null, $v_0)));
            delete parentNode.ItemFailure;
        }
    }
}


SP.ListDataValidationFailure = function() {
    ULS5Vl: ;
    SP.ListDataValidationFailure.initializeBase(this);
}
SP.ListDataValidationFailure.prototype = {
    $3Q_1: 0,
    $3K_1: 0,
    $5_1: null,
    $y_1: null,
    $3E_1: null,

    get_validationType: function() {
        ULS5Vl: ;
        return this.$3Q_1;
    },

    get_reason: function() {
        ULS5Vl: ;
        return this.$3K_1;
    },

    get_name: function() {
        ULS5Vl: ;
        return this.$5_1;
    },

    get_displayName: function() {
        ULS5Vl: ;
        return this.$y_1;
    },

    get_message: function() {
        ULS5Vl: ;
        return this.$3E_1;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{6e0bc783-53a2-4506-827f-135040524794}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['ValidationType', 'Reason', 'Name', 'DisplayName', 'Message'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.ValidationType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3Q_1 = ($v_0);
            delete parentNode.ValidationType;
        }
        $v_0 = parentNode.Reason;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3K_1 = ($v_0);
            delete parentNode.Reason;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$5_1 = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.DisplayName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$y_1 = ($v_0);
            delete parentNode.DisplayName;
        }
        $v_0 = parentNode.Message;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3E_1 = ($v_0);
            delete parentNode.Message;
        }
    }
}


SP.ListItem = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ListItem.initializeBase(this, [Context, ObjectPath]);
}
SP.ListItem.prototype = {

    get_fieldValues: function() {
        ULS5Vl: ;
        var $v_0 = this.get_objectData().get_methodReturnObjects()[SP.ClientConstants.FieldValuesMethodName];
        if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
            $v_0 = {};
            this.get_objectData().get_methodReturnObjects()[SP.ClientConstants.FieldValuesMethodName] = $v_0;
        }
        return $v_0;
    },

    get_item: function(fieldName) {
        ULS5Vl: ;
        return this.$1m(fieldName);
    },
    set_item: function(fieldName, value) {
        ULS5Vl: ;
        this.$3Z(fieldName, value);
        return value;
    },

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['FileSystemObjectType'] = $p0.$1K_1;
            this.get_objectData().get_properties()['Id'] = -1;
        }
    },

    get_parentList: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ParentList']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.List(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ParentList'));
            this.get_objectData().get_clientObjectProperties()['ParentList'] = $v_0;
        }
        return $v_0;
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_fieldValuesAsHtml: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['FieldValuesAsHtml']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FieldStringValues(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'FieldValuesAsHtml'));
            this.get_objectData().get_clientObjectProperties()['FieldValuesAsHtml'] = $v_0;
        }
        return $v_0;
    },

    get_fieldValuesAsText: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['FieldValuesAsText']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FieldStringValues(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'FieldValuesAsText'));
            this.get_objectData().get_clientObjectProperties()['FieldValuesAsText'] = $v_0;
        }
        return $v_0;
    },

    get_fieldValuesForEdit: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['FieldValuesForEdit']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FieldStringValues(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'FieldValuesForEdit'));
            this.get_objectData().get_clientObjectProperties()['FieldValuesForEdit'] = $v_0;
        }
        return $v_0;
    },

    get_displayName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DisplayName');
        return ((this.get_objectData().get_properties()['DisplayName']));
    },

    get_file: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['File']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.File(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'File'));
            this.get_objectData().get_clientObjectProperties()['File'] = $v_0;
        }
        return $v_0;
    },

    get_fileSystemObjectType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FileSystemObjectType');
        return ((this.get_objectData().get_properties()['FileSystemObjectType']));
    },

    get_effectiveBasePermissions: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EffectiveBasePermissions');
        return ((this.get_objectData().get_properties()['EffectiveBasePermissions']));
    },

    get_contentType: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ContentType']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ContentType(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ContentType'));
            this.get_objectData().get_clientObjectProperties()['ContentType'] = $v_0;
        }
        return $v_0;
    },

    initNonPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.DataConvert.populateDictionaryFromObject(this.get_fieldValues(), parentNode);
        SP.DataConvert.fixupTypes(this.get_context(), this.get_fieldValues());
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ListItem.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.ParentList;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_parentList().fromJson($v_0);
            delete parentNode.ParentList;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.FieldValuesAsHtml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_fieldValuesAsHtml().fromJson($v_0);
            delete parentNode.FieldValuesAsHtml;
        }
        $v_0 = parentNode.FieldValuesAsText;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_fieldValuesAsText().fromJson($v_0);
            delete parentNode.FieldValuesAsText;
        }
        $v_0 = parentNode.FieldValuesForEdit;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_fieldValuesForEdit().fromJson($v_0);
            delete parentNode.FieldValuesForEdit;
        }
        $v_0 = parentNode.DisplayName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DisplayName'] = ($v_0);
            delete parentNode.DisplayName;
        }
        $v_0 = parentNode.File;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_file().fromJson($v_0);
            delete parentNode.File;
        }
        $v_0 = parentNode.FileSystemObjectType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FileSystemObjectType'] = ($v_0);
            delete parentNode.FileSystemObjectType;
        }
        $v_0 = parentNode.EffectiveBasePermissions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EffectiveBasePermissions'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.EffectiveBasePermissions;
        }
        $v_0 = parentNode.ContentType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_contentType().fromJson($v_0);
            delete parentNode.ContentType;
        }
    },

    $1m: function($p0) {
        var $v_0 = this.get_fieldValues()[$p0];
        if (SP.ScriptUtility.isUndefined($v_0)) {
            throw Error.create(SP.Res.propertyHasNotBeenInitialized);
        }
        return $v_0;
    },

    refreshLoad: function() {
        ULS5Vl: ;
        SP.ListItem.callBaseMethod(this, 'refreshLoad');
        this.loadExpandoFields();
    },

    loadExpandoFields: function() {
        ULS5Vl: ;
        var $$dict_1_0 = this.get_fieldValues();
        for (var $$key_1_1 in $$dict_1_0) {
            var $v_0 = {
                key: $$key_1_1,
                value: $$dict_1_0[$$key_1_1]
            };
            this.retrieve($v_0.key);
        }
    },

    $3Z: function($p0, $p1) {
        this.get_fieldValues()[$p0] = $p1;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'SetFieldValue', [$p0, $p1]);
        if ((this.get_context())) {
            this.get_context().addQuery($v_0);
        }
    },

    parseAndSetFieldValue: function(fieldName, value_) {
        ULS5Vl: ;
        this.get_fieldValues()[fieldName] = value_;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'ParseAndSetFieldValue', [fieldName, value_]);
        if ((this.get_context())) {
            this.get_context().addQuery($v_0);
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
        this.refreshLoad();
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    },

    recycle: function() {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = new SP.ClientActionInvokeMethod(this, 'Recycle', null);
        this.get_context().addQuery($v_1);
        $v_0 = new SP.GuidResult();
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.removeFromParentCollection();
        return $v_0;
    }
}


SP.ListItemPropertyNames = function() {}


SP.ListItemObjectPropertyNames = function() {}


SP.ListItemCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ListItemCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.ListItemCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getById: function(id) {
        ULS5Vl: ;
        if (typeof(id) === 'string') {
            return this.$3m(id.toString());
        } else {
            id = parseInt(id.toString());
            var $v_0;
            var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
            if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
                $v_1 = [];
                this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
            }
            $v_0 = (($v_1[id]));
            if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
                return $v_0;
            }
            $v_0 = new SP.ListItem(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [id]));
            $v_1[id] = $v_0;
            return $v_0;
        }
    },

    get_listItemCollectionPosition: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListItemCollectionPosition');
        return ((this.get_objectData().get_properties()['ListItemCollectionPosition']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ListItemCollection.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.ListItemCollectionPosition;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListItemCollectionPosition'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.ListItemCollectionPosition;
        }
    },

    $3m: function($p0) {
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByStringId']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByStringId'] = $v_1;
        }
        $v_0 = (($v_1[$p0]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.ListItem(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByStringId', [$p0]));
        $v_1[$p0] = $v_0;
        return $v_0;
    }
}


SP.ListItemCollectionPropertyNames = function() {}


SP.ListItemCollectionPosition = function() {
    ULS5Vl: ;
    SP.ListItemCollectionPosition.initializeBase(this);
}
SP.ListItemCollectionPosition.prototype = {
    $27_1: null,

    get_pagingInfo: function() {
        ULS5Vl: ;
        return this.$27_1;
    },
    set_pagingInfo: function(value) {
        ULS5Vl: ;
        this.$27_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{922354eb-c56a-4d88-ad59-67496854efe1}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['PagingInfo'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.PagingInfo;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$27_1 = ($v_0);
            delete parentNode.PagingInfo;
        }
    }
}


SP.ListItemCreationInformation = function() {
    ULS5Vl: ;
    SP.ListItemCreationInformation.initializeBase(this);
}
SP.ListItemCreationInformation.prototype = {
    $21_1: null,
    $1K_1: 0,
    $25_1: null,

    get_folderUrl: function() {
        ULS5Vl: ;
        return this.$21_1;
    },
    set_folderUrl: function(value) {
        ULS5Vl: ;
        this.$21_1 = value;
        return value;
    },

    get_underlyingObjectType: function() {
        ULS5Vl: ;
        return this.$1K_1;
    },
    set_underlyingObjectType: function(value) {
        ULS5Vl: ;
        this.$1K_1 = value;
        return value;
    },

    get_leafName: function() {
        ULS5Vl: ;
        return this.$25_1;
    },
    set_leafName: function(value) {
        ULS5Vl: ;
        this.$25_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{54cdbee5-0897-44ac-829f-411557fa11be}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['FolderUrl', 'UnderlyingObjectType', 'LeafName'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.FolderUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$21_1 = ($v_0);
            delete parentNode.FolderUrl;
        }
        $v_0 = parentNode.UnderlyingObjectType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1K_1 = ($v_0);
            delete parentNode.UnderlyingObjectType;
        }
        $v_0 = parentNode.LeafName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$25_1 = ($v_0);
            delete parentNode.LeafName;
        }
    }
}


SP.ListTemplate = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ListTemplate.initializeBase(this, [Context, ObjectPath]);
}
SP.ListTemplate.prototype = {

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },

    get_internalName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('InternalName');
        return ((this.get_objectData().get_properties()['InternalName']));
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },

    get_baseType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('BaseType');
        return ((this.get_objectData().get_properties()['BaseType']));
    },

    get_featureId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FeatureId');
        return ((this.get_objectData().get_properties()['FeatureId']));
    },

    get_listTemplateTypeKind: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListTemplateTypeKind');
        return ((this.get_objectData().get_properties()['ListTemplateTypeKind']));
    },

    get_imageUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ImageUrl');
        return ((this.get_objectData().get_properties()['ImageUrl']));
    },

    get_hidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Hidden');
        return ((this.get_objectData().get_properties()['Hidden']));
    },

    get_unique: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Unique');
        return ((this.get_objectData().get_properties()['Unique']));
    },

    get_onQuickLaunch: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('OnQuickLaunch');
        return ((this.get_objectData().get_properties()['OnQuickLaunch']));
    },

    get_allowsFolderCreation: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowsFolderCreation');
        return ((this.get_objectData().get_properties()['AllowsFolderCreation']));
    },

    get_isCustomTemplate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsCustomTemplate');
        return ((this.get_objectData().get_properties()['IsCustomTemplate']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ListTemplate.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.InternalName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['InternalName'] = ($v_0);
            delete parentNode.InternalName;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.BaseType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['BaseType'] = ($v_0);
            delete parentNode.BaseType;
        }
        $v_0 = parentNode.FeatureId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FeatureId'] = ($v_0);
            delete parentNode.FeatureId;
        }
        $v_0 = parentNode.ListTemplateTypeKind;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListTemplateTypeKind'] = ($v_0);
            delete parentNode.ListTemplateTypeKind;
        }
        $v_0 = parentNode.ImageUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ImageUrl'] = ($v_0);
            delete parentNode.ImageUrl;
        }
        $v_0 = parentNode.Hidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Hidden'] = ($v_0);
            delete parentNode.Hidden;
        }
        $v_0 = parentNode.Unique;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Unique'] = ($v_0);
            delete parentNode.Unique;
        }
        $v_0 = parentNode.OnQuickLaunch;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['OnQuickLaunch'] = ($v_0);
            delete parentNode.OnQuickLaunch;
        }
        $v_0 = parentNode.AllowsFolderCreation;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowsFolderCreation'] = ($v_0);
            delete parentNode.AllowsFolderCreation;
        }
        $v_0 = parentNode.IsCustomTemplate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsCustomTemplate'] = ($v_0);
            delete parentNode.IsCustomTemplate;
        }
    }
}


SP.ListTemplatePropertyNames = function() {}


SP.ListTemplateCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ListTemplateCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.ListTemplateCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    }
}


SP.Navigation = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Navigation.initializeBase(this, [Context, ObjectPath]);
}
SP.Navigation.prototype = {

    get_topNavigationBar: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['TopNavigationBar']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.NavigationNodeCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'TopNavigationBar'));
            this.get_objectData().get_clientObjectProperties()['TopNavigationBar'] = $v_0;
        }
        return $v_0;
    },

    get_quickLaunch: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['QuickLaunch']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.NavigationNodeCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'QuickLaunch'));
            this.get_objectData().get_clientObjectProperties()['QuickLaunch'] = $v_0;
        }
        return $v_0;
    },

    get_useShared: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UseShared');
        return ((this.get_objectData().get_properties()['UseShared']));
    },
    set_useShared: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['UseShared'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'UseShared', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Navigation.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.TopNavigationBar;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_topNavigationBar().fromJson($v_0);
            delete parentNode.TopNavigationBar;
        }
        $v_0 = parentNode.QuickLaunch;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_quickLaunch().fromJson($v_0);
            delete parentNode.QuickLaunch;
        }
        $v_0 = parentNode.UseShared;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UseShared'] = ($v_0);
            delete parentNode.UseShared;
        }
    }
}


SP.NavigationPropertyNames = function() {}


SP.NavigationObjectPropertyNames = function() {}


SP.NavigationNode = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.NavigationNode.initializeBase(this, [Context, ObjectPath]);
}
SP.NavigationNode.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Title'] = $p0.$1_1;
            this.get_objectData().get_properties()['Url'] = $p0.$6_1;
        }
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Title'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Title', value));
        }
        return value;
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_url: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Url');
        return ((this.get_objectData().get_properties()['Url']));
    },
    set_url: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Url'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Url', value));
        }
        return value;
    },

    get_children: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Children']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.NavigationNodeCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Children'));
            this.get_objectData().get_clientObjectProperties()['Children'] = $v_0;
        }
        return $v_0;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.NavigationNode.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.Url;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Url'] = ($v_0);
            delete parentNode.Url;
        }
        $v_0 = parentNode.Children;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_children().fromJson($v_0);
            delete parentNode.Children;
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
        this.refreshLoad();
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.NavigationNodePropertyNames = function() {}


SP.NavigationNodeObjectPropertyNames = function() {}


SP.NavigationNodeCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.NavigationNodeCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.NavigationNodeCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.NavigationNode(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    }
}


SP.NavigationNodeCreationInformation = function() {
    ULS5Vl: ;
    SP.NavigationNodeCreationInformation.initializeBase(this);
}
SP.NavigationNodeCreationInformation.prototype = {
    $1_1: null,
    $6_1: null,
    $23_1: false,
    $2A_1: null,
    $1o_1: false,

    get_title: function() {
        ULS5Vl: ;
        return this.$1_1;
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.$1_1 = value;
        return value;
    },

    get_url: function() {
        ULS5Vl: ;
        return this.$6_1;
    },
    set_url: function(value) {
        ULS5Vl: ;
        this.$6_1 = value;
        return value;
    },

    get_isExternal: function() {
        ULS5Vl: ;
        return this.$23_1;
    },
    set_isExternal: function(value) {
        ULS5Vl: ;
        this.$23_1 = value;
        return value;
    },

    get_previousNode: function() {
        ULS5Vl: ;
        return this.$2A_1;
    },
    set_previousNode: function(value) {
        ULS5Vl: ;
        this.$2A_1 = value;
        return value;
    },

    get_asLastNode: function() {
        ULS5Vl: ;
        return this.$1o_1;
    },
    set_asLastNode: function(value) {
        ULS5Vl: ;
        this.$1o_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{7aaaa605-79a9-4fda-ae1e-db952e5083e0}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Title', 'Url', 'IsExternal', 'PreviousNode', 'AsLastNode'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1_1 = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Url;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$6_1 = ($v_0);
            delete parentNode.Url;
        }
        $v_0 = parentNode.IsExternal;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$23_1 = ($v_0);
            delete parentNode.IsExternal;
        }
        $v_0 = parentNode.PreviousNode;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2A_1.fromJson($v_0);
            delete parentNode.PreviousNode;
        }
        $v_0 = parentNode.AsLastNode;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1o_1 = ($v_0);
            delete parentNode.AsLastNode;
        }
    }
}


SP.Principal = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Principal.initializeBase(this, [Context, ObjectPath]);
}
SP.Principal.prototype = {

    get_principalType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('PrincipalType');
        return ((this.get_objectData().get_properties()['PrincipalType']));
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Title'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Title', value));
        }
        return value;
    },

    get_loginName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('LoginName');
        return ((this.get_objectData().get_properties()['LoginName']));
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Principal.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.PrincipalType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['PrincipalType'] = ($v_0);
            delete parentNode.PrincipalType;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.LoginName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['LoginName'] = ($v_0);
            delete parentNode.LoginName;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
    }
}


SP.PrincipalPropertyNames = function() {}


SP.PropertyValues = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.PropertyValues.initializeBase(this, [Context, ObjectPath]);
}
SP.PropertyValues.prototype = {

    get_fieldValues: function() {
        ULS5Vl: ;
        var $v_0 = this.get_objectData().get_methodReturnObjects()[SP.ClientConstants.FieldValuesMethodName];
        if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
            $v_0 = {};
            this.get_objectData().get_methodReturnObjects()[SP.ClientConstants.FieldValuesMethodName] = $v_0;
        }
        return $v_0;
    },

    get_item: function(fieldName) {
        ULS5Vl: ;
        return this.$1m(fieldName);
    },
    set_item: function(fieldName, value) {
        ULS5Vl: ;
        this.$3Z(fieldName, value);
        return value;
    },

    initNonPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.DataConvert.populateDictionaryFromObject(this.get_fieldValues(), parentNode);
        SP.DataConvert.fixupTypes(this.get_context(), this.get_fieldValues());
    },

    $1m: function($p0) {
        var $v_0 = this.get_fieldValues()[$p0];
        if (SP.ScriptUtility.isUndefined($v_0)) {
            throw Error.create(SP.Res.propertyHasNotBeenInitialized);
        }
        return $v_0;
    },

    refreshLoad: function() {
        ULS5Vl: ;
        SP.PropertyValues.callBaseMethod(this, 'refreshLoad');
        this.loadExpandoFields();
    },

    loadExpandoFields: function() {
        ULS5Vl: ;
        var $$dict_1_0 = this.get_fieldValues();
        for (var $$key_1_1 in $$dict_1_0) {
            var $v_0 = {
                key: $$key_1_1,
                value: $$dict_1_0[$$key_1_1]
            };
            this.retrieve($v_0.key);
        }
    },

    $3Z: function($p0, $p1) {
        this.get_fieldValues()[$p0] = $p1;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'SetFieldValue', [$p0, $p1]);
        if ((this.get_context())) {
            this.get_context().addQuery($v_0);
        }
    }
}


SP.RecycleBinItem = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RecycleBinItem.initializeBase(this, [Context, ObjectPath]);
}
SP.RecycleBinItem.prototype = {

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_itemState: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ItemState');
        return ((this.get_objectData().get_properties()['ItemState']));
    },

    get_itemType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ItemType');
        return ((this.get_objectData().get_properties()['ItemType']));
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },

    get_dirName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DirName');
        return ((this.get_objectData().get_properties()['DirName']));
    },

    get_leafName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('LeafName');
        return ((this.get_objectData().get_properties()['LeafName']));
    },

    get_author: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Author']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.User(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Author'));
            this.get_objectData().get_clientObjectProperties()['Author'] = $v_0;
        }
        return $v_0;
    },

    get_deletedBy: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['DeletedBy']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.User(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'DeletedBy'));
            this.get_objectData().get_clientObjectProperties()['DeletedBy'] = $v_0;
        }
        return $v_0;
    },

    get_deletedDate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DeletedDate');
        return ((this.get_objectData().get_properties()['DeletedDate']));
    },

    get_size: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Size');
        return ((this.get_objectData().get_properties()['Size']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.RecycleBinItem.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.ItemState;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ItemState'] = ($v_0);
            delete parentNode.ItemState;
        }
        $v_0 = parentNode.ItemType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ItemType'] = ($v_0);
            delete parentNode.ItemType;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.DirName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DirName'] = ($v_0);
            delete parentNode.DirName;
        }
        $v_0 = parentNode.LeafName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['LeafName'] = ($v_0);
            delete parentNode.LeafName;
        }
        $v_0 = parentNode.Author;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_author().fromJson($v_0);
            delete parentNode.Author;
        }
        $v_0 = parentNode.DeletedBy;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_deletedBy().fromJson($v_0);
            delete parentNode.DeletedBy;
        }
        $v_0 = parentNode.DeletedDate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DeletedDate'] = ($v_0);
            delete parentNode.DeletedDate;
        }
        $v_0 = parentNode.Size;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Size'] = ($v_0);
            delete parentNode.Size;
        }
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    },

    restore: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Restore', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.RecycleBinItemPropertyNames = function() {}


SP.RecycleBinItemObjectPropertyNames = function() {}


SP.RecycleBinItemCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RecycleBinItemCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.RecycleBinItemCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    $2v_2: function() {
        ULS5Vl: ;
        var $v_0 = this.get_data();
        while ($v_0.length > 0) {
            Array.removeAt($v_0, $v_0.length - 1);
        }
    },

    getById: function(id) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[id.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.RecycleBinItem(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [id]));
        $v_1[id.toString()] = $v_0;
        return $v_0;
    },

    deleteAll: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteAll', null);
        this.get_context().addQuery($v_0);
        this.$2v_2();
    },

    restoreAll: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'RestoreAll', null);
        this.get_context().addQuery($v_0);
        this.$2v_2();
    }
}


SP.RelatedField = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RelatedField.initializeBase(this, [Context, ObjectPath]);
}
SP.RelatedField.prototype = {

    get_lookupList: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['LookupList']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.List(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'LookupList'));
            this.get_objectData().get_clientObjectProperties()['LookupList'] = $v_0;
        }
        return $v_0;
    },

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_listId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListId');
        return ((this.get_objectData().get_properties()['ListId']));
    },

    get_fieldId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FieldId');
        return ((this.get_objectData().get_properties()['FieldId']));
    },

    get_relationshipDeleteBehavior: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RelationshipDeleteBehavior');
        return ((this.get_objectData().get_properties()['RelationshipDeleteBehavior']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.RelatedField.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.LookupList;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_lookupList().fromJson($v_0);
            delete parentNode.LookupList;
        }
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.ListId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListId'] = ($v_0);
            delete parentNode.ListId;
        }
        $v_0 = parentNode.FieldId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FieldId'] = ($v_0);
            delete parentNode.FieldId;
        }
        $v_0 = parentNode.RelationshipDeleteBehavior;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RelationshipDeleteBehavior'] = ($v_0);
            delete parentNode.RelationshipDeleteBehavior;
        }
    }
}


SP.RelatedFieldPropertyNames = function() {}


SP.RelatedFieldObjectPropertyNames = function() {}


SP.RelatedFieldCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RelatedFieldCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.RelatedFieldCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    }
}


SP.RelatedFieldExtendedData = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RelatedFieldExtendedData.initializeBase(this, [Context, ObjectPath]);
}
SP.RelatedFieldExtendedData.prototype = {

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_listId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListId');
        return ((this.get_objectData().get_properties()['ListId']));
    },

    get_fieldId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('FieldId');
        return ((this.get_objectData().get_properties()['FieldId']));
    },

    get_resolvedListTitle: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ResolvedListTitle');
        return ((this.get_objectData().get_properties()['ResolvedListTitle']));
    },

    get_listImageUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListImageUrl');
        return ((this.get_objectData().get_properties()['ListImageUrl']));
    },

    get_toolTipDescription: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ToolTipDescription');
        return ((this.get_objectData().get_properties()['ToolTipDescription']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.RelatedFieldExtendedData.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.ListId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListId'] = ($v_0);
            delete parentNode.ListId;
        }
        $v_0 = parentNode.FieldId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['FieldId'] = ($v_0);
            delete parentNode.FieldId;
        }
        $v_0 = parentNode.ResolvedListTitle;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ResolvedListTitle'] = ($v_0);
            delete parentNode.ResolvedListTitle;
        }
        $v_0 = parentNode.ListImageUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListImageUrl'] = ($v_0);
            delete parentNode.ListImageUrl;
        }
        $v_0 = parentNode.ToolTipDescription;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ToolTipDescription'] = ($v_0);
            delete parentNode.ToolTipDescription;
        }
    }
}


SP.RelatedFieldExtendedDataPropertyNames = function() {}


SP.RelatedFieldExtendedDataCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RelatedFieldExtendedDataCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.RelatedFieldExtendedDataCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    }
}


SP.RequestContext = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RequestContext.initializeBase(this, [Context, ObjectPath]);
}
SP.RequestContext.getCurrent = function($p0) {
    var $v_0 = $p0.get_staticObjects()['Microsoft$SharePoint$SPContext$Current'];
    if ((!$v_0)) {
        $v_0 = new SP.RequestContext($p0, new SP.ObjectPathStaticProperty($p0, '{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}', 'Current'));
        $p0.get_staticObjects()['Microsoft$SharePoint$SPContext$Current'] = $v_0;
    }
    return ($v_0);
}
SP.RequestContext.prototype = {

    get_web: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Web']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Web(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Web'));
            this.get_objectData().get_clientObjectProperties()['Web'] = $v_0;
        }
        return $v_0;
    },

    get_site: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Site']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Site(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Site'));
            this.get_objectData().get_clientObjectProperties()['Site'] = $v_0;
        }
        return $v_0;
    },

    initPropertiesFromJson: function($p0) {
        SP.RequestContext.callBaseMethod(this, 'initPropertiesFromJson', [$p0]);
        var $v_0;
        $v_0 = $p0.Web;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_web().fromJson($v_0);
            delete $p0.Web;
        }
        $v_0 = $p0.Site;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_site().fromJson($v_0);
            delete $p0.Site;
        }
    }
}


SP.RequestContextObjectPropertyNames = function() {}


SP.RoleAssignment = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RoleAssignment.initializeBase(this, [Context, ObjectPath]);
}
SP.RoleAssignment.prototype = {

    get_member: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Member']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Principal(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Member'));
            this.get_objectData().get_clientObjectProperties()['Member'] = $v_0;
        }
        return $v_0;
    },

    get_roleDefinitionBindings: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['RoleDefinitionBindings']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.RoleDefinitionBindingCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'RoleDefinitionBindings'));
            this.get_objectData().get_clientObjectProperties()['RoleDefinitionBindings'] = $v_0;
        }
        return $v_0;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.RoleAssignment.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Member;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_member().fromJson($v_0);
            delete parentNode.Member;
        }
        $v_0 = parentNode.RoleDefinitionBindings;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_roleDefinitionBindings().fromJson($v_0);
            delete parentNode.RoleDefinitionBindings;
        }
    },

    importRoleDefinitionBindings: function(roleDefinitionBindings) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'ImportRoleDefinitionBindings', [roleDefinitionBindings]);
        this.get_context().addQuery($v_0);
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.RoleAssignmentObjectPropertyNames = function() {}


SP.RoleAssignmentCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RoleAssignmentCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.RoleAssignmentCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getByPrincipal: function(principalToFind) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.RoleAssignment(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByPrincipal', [principalToFind]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        return $v_0;
    },

    getByPrincipalId: function(principalId) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByPrincipalId']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = [];
            this.get_objectData().get_methodReturnObjects()['GetByPrincipalId'] = $v_1;
        }
        $v_0 = (($v_1[principalId]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.RoleAssignment(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByPrincipalId', [principalId]));
        $v_1[principalId] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    add: function(principal, roleBindings) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.RoleAssignment(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [principal, roleBindings]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    }
}


SP.RoleDefinition = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RoleDefinition.initializeBase(this, [Context, ObjectPath]);
}
SP.RoleDefinition.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Description'] = $p0.$2_1;
            this.get_objectData().get_properties()['Name'] = $p0.$5_1;
            this.get_objectData().get_properties()['Order'] = $p0.$17_1;
            this.get_objectData().get_properties()['BasePermissions'] = $p0.$s_1;
        }
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },
    set_name: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Name'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Name', value));
        }
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Description'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Description', value));
        }
        return value;
    },

    get_roleTypeKind: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RoleTypeKind');
        return ((this.get_objectData().get_properties()['RoleTypeKind']));
    },

    get_hidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Hidden');
        return ((this.get_objectData().get_properties()['Hidden']));
    },

    get_order: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Order');
        return ((this.get_objectData().get_properties()['Order']));
    },
    set_order: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Order'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Order', value));
        }
        return value;
    },

    get_basePermissions: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('BasePermissions');
        return ((this.get_objectData().get_properties()['BasePermissions']));
    },
    set_basePermissions: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['BasePermissions'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'BasePermissions', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.RoleDefinition.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.RoleTypeKind;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RoleTypeKind'] = ($v_0);
            delete parentNode.RoleTypeKind;
        }
        $v_0 = parentNode.Hidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Hidden'] = ($v_0);
            delete parentNode.Hidden;
        }
        $v_0 = parentNode.Order;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Order'] = ($v_0);
            delete parentNode.Order;
        }
        $v_0 = parentNode.BasePermissions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['BasePermissions'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.BasePermissions;
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.RoleDefinitionPropertyNames = function() {}


SP.RoleDefinitionBindingCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RoleDefinitionBindingCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.RoleDefinitionBindingCollection.newObject = function(Context) {
    ULS5Vl: ;
    return new SP.RoleDefinitionBindingCollection(Context, new SP.ObjectPathConstructor(Context, '{07bf1941-6953-4761-b114-58374b4aaf57}', null));
}
SP.RoleDefinitionBindingCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    $3U_2: function() {
        ULS5Vl: ;
        var $v_0 = this.get_data();
        while ($v_0.length > 0) {
            Array.removeAt($v_0, $v_0.length - 1);
        }
    },

    add: function(roleDefinition) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Add', [roleDefinition]);
        this.get_context().addQuery($v_0);
        this.addChild(roleDefinition);
    },

    remove: function(roleDefinition) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Remove', [roleDefinition]);
        this.get_context().addQuery($v_0);
        this.removeChild(roleDefinition);
    },

    removeAll: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'RemoveAll', null);
        this.get_context().addQuery($v_0);
        this.$3U_2();
    }
}


SP.RoleDefinitionCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.RoleDefinitionCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.RoleDefinitionCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getByName: function(name) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByName']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByName'] = $v_1;
        }
        $v_0 = (($v_1[name]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.RoleDefinition(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByName', [name]));
        $v_1[name] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.RoleDefinition(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    },

    getById: function(id) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = [];
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[id]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.RoleDefinition(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [id]));
        $v_1[id] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    getByType: function(roleType) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByType']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = [];
            this.get_objectData().get_methodReturnObjects()['GetByType'] = $v_1;
        }
        $v_0 = (($v_1[(roleType)]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.RoleDefinition(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByType', [roleType]));
        $v_1[(roleType)] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    }
}


SP.RoleDefinitionCreationInformation = function() {
    ULS5Vl: ;
    SP.RoleDefinitionCreationInformation.initializeBase(this);
}
SP.RoleDefinitionCreationInformation.prototype = {
    $5_1: null,
    $2_1: null,
    $17_1: 0,
    $s_1: null,

    get_name: function() {
        ULS5Vl: ;
        return this.$5_1;
    },
    set_name: function(value) {
        ULS5Vl: ;
        this.$5_1 = value;
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        return this.$2_1;
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.$2_1 = value;
        return value;
    },

    get_order: function() {
        ULS5Vl: ;
        return this.$17_1;
    },
    set_order: function(value) {
        ULS5Vl: ;
        this.$17_1 = value;
        return value;
    },

    get_basePermissions: function() {
        ULS5Vl: ;
        return this.$s_1;
    },
    set_basePermissions: function(value) {
        ULS5Vl: ;
        this.$s_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{59eddf82-1018-4677-8067-69e16efd3495}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Name', 'Description', 'Order', 'BasePermissions'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$5_1 = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2_1 = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.Order;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$17_1 = ($v_0);
            delete parentNode.Order;
        }
        $v_0 = parentNode.BasePermissions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$s_1 = ((SP.DataConvert.fixupType(null, $v_0)));
            delete parentNode.BasePermissions;
        }
    }
}


SP.SecurableObject = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.SecurableObject.initializeBase(this, [Context, ObjectPath]);
}
SP.SecurableObject.prototype = {

    get_roleAssignments: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['RoleAssignments']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.RoleAssignmentCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'RoleAssignments'));
            this.get_objectData().get_clientObjectProperties()['RoleAssignments'] = $v_0;
        }
        return $v_0;
    },

    get_hasUniqueRoleAssignments: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('HasUniqueRoleAssignments');
        return ((this.get_objectData().get_properties()['HasUniqueRoleAssignments']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.SecurableObject.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.RoleAssignments;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_roleAssignments().fromJson($v_0);
            delete parentNode.RoleAssignments;
        }
        $v_0 = parentNode.HasUniqueRoleAssignments;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['HasUniqueRoleAssignments'] = ($v_0);
            delete parentNode.HasUniqueRoleAssignments;
        }
    },

    resetRoleInheritance: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'ResetRoleInheritance', null);
        this.get_context().addQuery($v_0);
    },

    breakRoleInheritance: function(copyRoleAssignments, clearSubscopes) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'BreakRoleInheritance', [copyRoleAssignments, clearSubscopes]);
        this.get_context().addQuery($v_0);
    }
}


SP.SecurableObjectPropertyNames = function() {}


SP.SecurableObjectObjectPropertyNames = function() {}


SP.Site = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Site.initializeBase(this, [Context, ObjectPath]);
}
SP.Site.prototype = {

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_serverRelativeUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ServerRelativeUrl');
        return ((this.get_objectData().get_properties()['ServerRelativeUrl']));
    },

    get_url: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Url');
        return ((this.get_objectData().get_properties()['Url']));
    },

    get_features: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Features']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FeatureCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Features'));
            this.get_objectData().get_clientObjectProperties()['Features'] = $v_0;
        }
        return $v_0;
    },

    get_userCustomActions: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['UserCustomActions']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.UserCustomActionCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'UserCustomActions'));
            this.get_objectData().get_clientObjectProperties()['UserCustomActions'] = $v_0;
        }
        return $v_0;
    },

    get_rootWeb: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['RootWeb']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Web(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'RootWeb'));
            this.get_objectData().get_clientObjectProperties()['RootWeb'] = $v_0;
        }
        return $v_0;
    },

    get_usage: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Usage');
        return ((this.get_objectData().get_properties()['Usage']));
    },

    get_uiVersionConfigurationEnabled: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UIVersionConfigurationEnabled');
        return ((this.get_objectData().get_properties()['UIVersionConfigurationEnabled']));
    },
    set_uiVersionConfigurationEnabled: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['UIVersionConfigurationEnabled'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'UIVersionConfigurationEnabled', value));
        }
        return value;
    },

    get_recycleBin: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['RecycleBin']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.RecycleBinItemCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'RecycleBin'));
            this.get_objectData().get_clientObjectProperties()['RecycleBin'] = $v_0;
        }
        return $v_0;
    },

    get_maxItemsPerThrottledOperation: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MaxItemsPerThrottledOperation');
        return ((this.get_objectData().get_properties()['MaxItemsPerThrottledOperation']));
    },

    get_allowDesigner: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowDesigner');
        return ((this.get_objectData().get_properties()['AllowDesigner']));
    },
    set_allowDesigner: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowDesigner'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowDesigner', value));
        }
        return value;
    },

    get_allowRevertFromTemplate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowRevertFromTemplate');
        return ((this.get_objectData().get_properties()['AllowRevertFromTemplate']));
    },
    set_allowRevertFromTemplate: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowRevertFromTemplate'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowRevertFromTemplate', value));
        }
        return value;
    },

    get_allowMasterPageEditing: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowMasterPageEditing');
        return ((this.get_objectData().get_properties()['AllowMasterPageEditing']));
    },
    set_allowMasterPageEditing: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowMasterPageEditing'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowMasterPageEditing', value));
        }
        return value;
    },

    get_showUrlStructure: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ShowUrlStructure');
        return ((this.get_objectData().get_properties()['ShowUrlStructure']));
    },
    set_showUrlStructure: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ShowUrlStructure'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ShowUrlStructure', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Site.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.ServerRelativeUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ServerRelativeUrl'] = ($v_0);
            delete parentNode.ServerRelativeUrl;
        }
        $v_0 = parentNode.Url;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Url'] = ($v_0);
            delete parentNode.Url;
        }
        $v_0 = parentNode.Features;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_features().fromJson($v_0);
            delete parentNode.Features;
        }
        $v_0 = parentNode.UserCustomActions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_userCustomActions().fromJson($v_0);
            delete parentNode.UserCustomActions;
        }
        $v_0 = parentNode.RootWeb;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_rootWeb().fromJson($v_0);
            delete parentNode.RootWeb;
        }
        $v_0 = parentNode.Usage;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Usage'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.Usage;
        }
        $v_0 = parentNode.UIVersionConfigurationEnabled;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UIVersionConfigurationEnabled'] = ($v_0);
            delete parentNode.UIVersionConfigurationEnabled;
        }
        $v_0 = parentNode.RecycleBin;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_recycleBin().fromJson($v_0);
            delete parentNode.RecycleBin;
        }
        $v_0 = parentNode.MaxItemsPerThrottledOperation;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MaxItemsPerThrottledOperation'] = ($v_0);
            delete parentNode.MaxItemsPerThrottledOperation;
        }
        $v_0 = parentNode.AllowDesigner;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowDesigner'] = ($v_0);
            delete parentNode.AllowDesigner;
        }
        $v_0 = parentNode.AllowRevertFromTemplate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowRevertFromTemplate'] = ($v_0);
            delete parentNode.AllowRevertFromTemplate;
        }
        $v_0 = parentNode.AllowMasterPageEditing;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowMasterPageEditing'] = ($v_0);
            delete parentNode.AllowMasterPageEditing;
        }
        $v_0 = parentNode.ShowUrlStructure;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ShowUrlStructure'] = ($v_0);
            delete parentNode.ShowUrlStructure;
        }
    },

    getCustomListTemplates: function(web) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.ListTemplateCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetCustomListTemplates', [web]));
        return $v_0;
    },

    getCatalog: function(typeCatalog) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetCatalog']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = [];
            this.get_objectData().get_methodReturnObjects()['GetCatalog'] = $v_1;
        }
        $v_0 = (($v_1[typeCatalog]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.List(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetCatalog', [typeCatalog]));
        $v_1[typeCatalog] = $v_0;
        return $v_0;
    },

    openWeb: function(strUrl) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['OpenWeb']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['OpenWeb'] = $v_1;
        }
        $v_0 = (($v_1[strUrl.toUpperCase()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Web(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'OpenWeb', [strUrl]));
        $v_1[strUrl.toUpperCase()] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    openWebById: function(gWebId) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Web(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'OpenWebById', [gWebId]));
        return $v_0;
    },

    getChanges: function(query_) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.ChangeCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetChanges', [query_]));
        return $v_0;
    }
}


SP.SitePropertyNames = function() {}


SP.SiteObjectPropertyNames = function() {}


SP.SubwebQuery = function() {
    ULS5Vl: ;
    this.$1O_1 = -1;
    this.$u_1 = -1;
    SP.SubwebQuery.initializeBase(this);
}
SP.SubwebQuery.prototype = {

    get_webTemplateFilter: function() {
        ULS5Vl: ;
        return this.$1O_1;
    },
    set_webTemplateFilter: function(value) {
        ULS5Vl: ;
        this.$1O_1 = value;
        return value;
    },

    get_configurationFilter: function() {
        ULS5Vl: ;
        return this.$u_1;
    },
    set_configurationFilter: function(value) {
        ULS5Vl: ;
        this.$u_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{e3a4d63c-876b-4e24-a972-7664437146fe}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['WebTemplateFilter', 'ConfigurationFilter'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.WebTemplateFilter;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1O_1 = ($v_0);
            delete parentNode.WebTemplateFilter;
        }
        $v_0 = parentNode.ConfigurationFilter;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$u_1 = ($v_0);
            delete parentNode.ConfigurationFilter;
        }
    }
}


SP.UsageInfo = function() {
    ULS5Vl: ;
    SP.UsageInfo.initializeBase(this);
}
SP.UsageInfo.prototype = {
    $3M_1: 0,
    $3N_1: 0,
    $33_1: 0,
    $3S_1: 0,
    $3A_1: 0,
    $36_1: 0,

    get_storage: function() {
        ULS5Vl: ;
        return this.$3M_1;
    },

    get_storagePercentageUsed: function() {
        ULS5Vl: ;
        return this.$3N_1;
    },

    get_bandwidth: function() {
        ULS5Vl: ;
        return this.$33_1;
    },

    get_visits: function() {
        ULS5Vl: ;
        return this.$3S_1;
    },

    get_hits: function() {
        ULS5Vl: ;
        return this.$3A_1;
    },

    get_discussionStorage: function() {
        ULS5Vl: ;
        return this.$36_1;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{7ec28504-35f9-4fcf-a09f-401024417292}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Storage', 'StoragePercentageUsed', 'Bandwidth', 'Visits', 'Hits', 'DiscussionStorage'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Storage;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3M_1 = ($v_0);
            delete parentNode.Storage;
        }
        $v_0 = parentNode.StoragePercentageUsed;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3N_1 = ($v_0);
            delete parentNode.StoragePercentageUsed;
        }
        $v_0 = parentNode.Bandwidth;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$33_1 = ($v_0);
            delete parentNode.Bandwidth;
        }
        $v_0 = parentNode.Visits;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3S_1 = ($v_0);
            delete parentNode.Visits;
        }
        $v_0 = parentNode.Hits;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3A_1 = ($v_0);
            delete parentNode.Hits;
        }
        $v_0 = parentNode.DiscussionStorage;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$36_1 = ($v_0);
            delete parentNode.DiscussionStorage;
        }
    }
}


SP.User = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.User.initializeBase(this, [Context, ObjectPath]);
}
SP.User.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Email'] = $p0.$S_1;
            this.get_objectData().get_properties()['LoginName'] = $p0.$U_1;
            this.get_objectData().get_properties()['Title'] = $p0.$1_1;
        }
    },

    get_email: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Email');
        return ((this.get_objectData().get_properties()['Email']));
    },
    set_email: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Email'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Email', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.User.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Email;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Email'] = ($v_0);
            delete parentNode.Email;
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    }
}


SP.UserPropertyNames = function() {}


SP.UserCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.UserCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.UserCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getByLoginName: function(loginName) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByLoginName']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByLoginName'] = $v_1;
        }
        $v_0 = (($v_1[loginName.toUpperCase()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.User(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByLoginName', [loginName]));
        $v_1[loginName.toUpperCase()] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    getById: function(id) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.User(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [id]));
        return $v_0;
    },

    getByEmail: function(emailAddress) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByEmail']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByEmail'] = $v_1;
        }
        $v_0 = (($v_1[emailAddress]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.User(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByEmail', [emailAddress]));
        $v_1[emailAddress] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    remove: function(user) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Remove', [user]);
        this.get_context().addQuery($v_0);
        this.removeChild(user);
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.User(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    },

    addUser: function(user) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.User(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'AddUser', [user]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        return $v_0;
    }
}


SP.UserCreationInformation = function() {
    ULS5Vl: ;
    SP.UserCreationInformation.initializeBase(this);
}
SP.UserCreationInformation.prototype = {
    $U_1: null,
    $1_1: null,
    $S_1: null,

    get_loginName: function() {
        ULS5Vl: ;
        return this.$U_1;
    },
    set_loginName: function(value) {
        ULS5Vl: ;
        this.$U_1 = value;
        return value;
    },

    get_title: function() {
        ULS5Vl: ;
        return this.$1_1;
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.$1_1 = value;
        return value;
    },

    get_email: function() {
        ULS5Vl: ;
        return this.$S_1;
    },
    set_email: function(value) {
        ULS5Vl: ;
        this.$S_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{6ecd8af6-bed3-4a74-be76-1ec981b350e1}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['LoginName', 'Title', 'Email'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.LoginName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$U_1 = ($v_0);
            delete parentNode.LoginName;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1_1 = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Email;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$S_1 = ($v_0);
            delete parentNode.Email;
        }
    }
}


SP.UserCustomAction = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.UserCustomAction.initializeBase(this, [Context, ObjectPath]);
}
SP.UserCustomAction.prototype = {

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },
    set_name: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Name'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Name', value));
        }
        return value;
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Title'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Title', value));
        }
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Description'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Description', value));
        }
        return value;
    },

    get_scope: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Scope');
        return ((this.get_objectData().get_properties()['Scope']));
    },

    get_sequence: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Sequence');
        return ((this.get_objectData().get_properties()['Sequence']));
    },
    set_sequence: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Sequence'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Sequence', value));
        }
        return value;
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_imageUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ImageUrl');
        return ((this.get_objectData().get_properties()['ImageUrl']));
    },
    set_imageUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ImageUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ImageUrl', value));
        }
        return value;
    },

    get_registrationType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RegistrationType');
        return ((this.get_objectData().get_properties()['RegistrationType']));
    },
    set_registrationType: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['RegistrationType'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'RegistrationType', value));
        }
        return value;
    },

    get_registrationId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RegistrationId');
        return ((this.get_objectData().get_properties()['RegistrationId']));
    },
    set_registrationId: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['RegistrationId'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'RegistrationId', value));
        }
        return value;
    },

    get_url: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Url');
        return ((this.get_objectData().get_properties()['Url']));
    },
    set_url: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Url'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Url', value));
        }
        return value;
    },

    get_location: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Location');
        return ((this.get_objectData().get_properties()['Location']));
    },
    set_location: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Location'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Location', value));
        }
        return value;
    },

    get_scriptSrc: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ScriptSrc');
        return ((this.get_objectData().get_properties()['ScriptSrc']));
    },
    set_scriptSrc: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ScriptSrc'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ScriptSrc', value));
        }
        return value;
    },

    get_scriptBlock: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ScriptBlock');
        return ((this.get_objectData().get_properties()['ScriptBlock']));
    },
    set_scriptBlock: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ScriptBlock'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ScriptBlock', value));
        }
        return value;
    },

    get_group: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Group');
        return ((this.get_objectData().get_properties()['Group']));
    },
    set_group: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Group'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Group', value));
        }
        return value;
    },

    get_commandUIExtension: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('CommandUIExtension');
        return ((this.get_objectData().get_properties()['CommandUIExtension']));
    },
    set_commandUIExtension: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['CommandUIExtension'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'CommandUIExtension', value));
        }
        return value;
    },

    get_versionOfUserCustomAction: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('VersionOfUserCustomAction');
        return ((this.get_objectData().get_properties()['VersionOfUserCustomAction']));
    },

    get_rights: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Rights');
        return ((this.get_objectData().get_properties()['Rights']));
    },
    set_rights: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Rights'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Rights', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.UserCustomAction.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.Scope;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Scope'] = ($v_0);
            delete parentNode.Scope;
        }
        $v_0 = parentNode.Sequence;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Sequence'] = ($v_0);
            delete parentNode.Sequence;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.ImageUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ImageUrl'] = ($v_0);
            delete parentNode.ImageUrl;
        }
        $v_0 = parentNode.RegistrationType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RegistrationType'] = ($v_0);
            delete parentNode.RegistrationType;
        }
        $v_0 = parentNode.RegistrationId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RegistrationId'] = ($v_0);
            delete parentNode.RegistrationId;
        }
        $v_0 = parentNode.Url;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Url'] = ($v_0);
            delete parentNode.Url;
        }
        $v_0 = parentNode.Location;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Location'] = ($v_0);
            delete parentNode.Location;
        }
        $v_0 = parentNode.ScriptSrc;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ScriptSrc'] = ($v_0);
            delete parentNode.ScriptSrc;
        }
        $v_0 = parentNode.ScriptBlock;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ScriptBlock'] = ($v_0);
            delete parentNode.ScriptBlock;
        }
        $v_0 = parentNode.Group;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Group'] = ($v_0);
            delete parentNode.Group;
        }
        $v_0 = parentNode.CommandUIExtension;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['CommandUIExtension'] = ($v_0);
            delete parentNode.CommandUIExtension;
        }
        $v_0 = parentNode.VersionOfUserCustomAction;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['VersionOfUserCustomAction'] = ($v_0);
            delete parentNode.VersionOfUserCustomAction;
        }
        $v_0 = parentNode.Rights;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Rights'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.Rights;
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
        this.refreshLoad();
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.UserCustomActionPropertyNames = function() {}


SP.UserCustomActionCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.UserCustomActionCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.UserCustomActionCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getById: function(userCustomActionId) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[userCustomActionId.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.UserCustomAction(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [userCustomActionId]));
        $v_1[userCustomActionId.toString()] = $v_0;
        return $v_0;
    },

    clear: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Clear', null);
        this.get_context().addQuery($v_0);
    },

    add: function() {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.UserCustomAction(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', null));
        this.addChild($v_0);
        return $v_0;
    }
}


SP.View = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.View.initializeBase(this, [Context, ObjectPath]);
}
SP.View.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Title'] = $p0.$1_1;
            this.get_objectData().get_properties()['Paged'] = $p0.$19_1;
        }
    },

    get_viewFields: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ViewFields']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ViewFieldCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ViewFields'));
            this.get_objectData().get_clientObjectProperties()['ViewFields'] = $v_0;
        }
        return $v_0;
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Title'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Title', value));
        }
        return value;
    },

    get_viewType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ViewType');
        return ((this.get_objectData().get_properties()['ViewType']));
    },

    get_imageUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ImageUrl');
        return ((this.get_objectData().get_properties()['ImageUrl']));
    },

    get_moderationType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ModerationType');
        return ((this.get_objectData().get_properties()['ModerationType']));
    },

    get_serverRelativeUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ServerRelativeUrl');
        return ((this.get_objectData().get_properties()['ServerRelativeUrl']));
    },

    get_hidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Hidden');
        return ((this.get_objectData().get_properties()['Hidden']));
    },
    set_hidden: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Hidden'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Hidden', value));
        }
        return value;
    },

    get_readOnlyView: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ReadOnlyView');
        return ((this.get_objectData().get_properties()['ReadOnlyView']));
    },

    get_requiresClientIntegration: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RequiresClientIntegration');
        return ((this.get_objectData().get_properties()['RequiresClientIntegration']));
    },

    get_editorModified: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EditorModified');
        return ((this.get_objectData().get_properties()['EditorModified']));
    },
    set_editorModified: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['EditorModified'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'EditorModified', value));
        }
        return value;
    },

    get_threaded: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Threaded');
        return ((this.get_objectData().get_properties()['Threaded']));
    },

    get_scope: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Scope');
        return ((this.get_objectData().get_properties()['Scope']));
    },
    set_scope: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Scope'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Scope', value));
        }
        return value;
    },

    get_includeRootFolder: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IncludeRootFolder');
        return ((this.get_objectData().get_properties()['IncludeRootFolder']));
    },
    set_includeRootFolder: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['IncludeRootFolder'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'IncludeRootFolder', value));
        }
        return value;
    },

    get_defaultView: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefaultView');
        return ((this.get_objectData().get_properties()['DefaultView']));
    },
    set_defaultView: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DefaultView'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DefaultView', value));
        }
        return value;
    },

    get_mobileView: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MobileView');
        return ((this.get_objectData().get_properties()['MobileView']));
    },
    set_mobileView: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['MobileView'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'MobileView', value));
        }
        return value;
    },

    get_mobileDefaultView: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('MobileDefaultView');
        return ((this.get_objectData().get_properties()['MobileDefaultView']));
    },
    set_mobileDefaultView: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['MobileDefaultView'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'MobileDefaultView', value));
        }
        return value;
    },

    get_contentTypeId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ContentTypeId');
        return ((this.get_objectData().get_properties()['ContentTypeId']));
    },
    set_contentTypeId: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ContentTypeId'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ContentTypeId', value));
        }
        return value;
    },

    get_defaultViewForContentType: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DefaultViewForContentType');
        return ((this.get_objectData().get_properties()['DefaultViewForContentType']));
    },
    set_defaultViewForContentType: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['DefaultViewForContentType'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'DefaultViewForContentType', value));
        }
        return value;
    },

    get_personalView: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('PersonalView');
        return ((this.get_objectData().get_properties()['PersonalView']));
    },

    get_orderedView: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('OrderedView');
        return ((this.get_objectData().get_properties()['OrderedView']));
    },

    get_viewQuery: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ViewQuery');
        return ((this.get_objectData().get_properties()['ViewQuery']));
    },
    set_viewQuery: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ViewQuery'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ViewQuery', value));
        }
        return value;
    },

    get_method: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Method');
        return ((this.get_objectData().get_properties()['Method']));
    },
    set_method: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Method'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Method', value));
        }
        return value;
    },

    get_viewProjectedFields: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ViewProjectedFields');
        return ((this.get_objectData().get_properties()['ViewProjectedFields']));
    },
    set_viewProjectedFields: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ViewProjectedFields'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ViewProjectedFields', value));
        }
        return value;
    },

    get_viewJoins: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ViewJoins');
        return ((this.get_objectData().get_properties()['ViewJoins']));
    },
    set_viewJoins: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ViewJoins'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ViewJoins', value));
        }
        return value;
    },

    get_rowLimit: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RowLimit');
        return ((this.get_objectData().get_properties()['RowLimit']));
    },
    set_rowLimit: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['RowLimit'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'RowLimit', value));
        }
        return value;
    },

    get_paged: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Paged');
        return ((this.get_objectData().get_properties()['Paged']));
    },
    set_paged: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Paged'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Paged', value));
        }
        return value;
    },

    get_toolbar: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Toolbar');
        return ((this.get_objectData().get_properties()['Toolbar']));
    },
    set_toolbar: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Toolbar'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Toolbar', value));
        }
        return value;
    },

    get_toolbarTemplateName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ToolbarTemplateName');
        return ((this.get_objectData().get_properties()['ToolbarTemplateName']));
    },

    get_formats: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Formats');
        return ((this.get_objectData().get_properties()['Formats']));
    },
    set_formats: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Formats'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Formats', value));
        }
        return value;
    },

    get_aggregations: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Aggregations');
        return ((this.get_objectData().get_properties()['Aggregations']));
    },
    set_aggregations: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Aggregations'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Aggregations', value));
        }
        return value;
    },

    get_aggregationsStatus: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AggregationsStatus');
        return ((this.get_objectData().get_properties()['AggregationsStatus']));
    },
    set_aggregationsStatus: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AggregationsStatus'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AggregationsStatus', value));
        }
        return value;
    },

    get_htmlSchemaXml: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('HtmlSchemaXml');
        return ((this.get_objectData().get_properties()['HtmlSchemaXml']));
    },

    get_styleId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('StyleId');
        return ((this.get_objectData().get_properties()['StyleId']));
    },

    get_baseViewId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('BaseViewId');
        return ((this.get_objectData().get_properties()['BaseViewId']));
    },

    get_viewData: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ViewData');
        return ((this.get_objectData().get_properties()['ViewData']));
    },
    set_viewData: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ViewData'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ViewData', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.View.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.ViewFields;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_viewFields().fromJson($v_0);
            delete parentNode.ViewFields;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.ViewType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ViewType'] = ($v_0);
            delete parentNode.ViewType;
        }
        $v_0 = parentNode.ImageUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ImageUrl'] = ($v_0);
            delete parentNode.ImageUrl;
        }
        $v_0 = parentNode.ModerationType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ModerationType'] = ($v_0);
            delete parentNode.ModerationType;
        }
        $v_0 = parentNode.ServerRelativeUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ServerRelativeUrl'] = ($v_0);
            delete parentNode.ServerRelativeUrl;
        }
        $v_0 = parentNode.Hidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Hidden'] = ($v_0);
            delete parentNode.Hidden;
        }
        $v_0 = parentNode.ReadOnlyView;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ReadOnlyView'] = ($v_0);
            delete parentNode.ReadOnlyView;
        }
        $v_0 = parentNode.RequiresClientIntegration;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RequiresClientIntegration'] = ($v_0);
            delete parentNode.RequiresClientIntegration;
        }
        $v_0 = parentNode.EditorModified;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EditorModified'] = ($v_0);
            delete parentNode.EditorModified;
        }
        $v_0 = parentNode.Threaded;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Threaded'] = ($v_0);
            delete parentNode.Threaded;
        }
        $v_0 = parentNode.Scope;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Scope'] = ($v_0);
            delete parentNode.Scope;
        }
        $v_0 = parentNode.IncludeRootFolder;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IncludeRootFolder'] = ($v_0);
            delete parentNode.IncludeRootFolder;
        }
        $v_0 = parentNode.DefaultView;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefaultView'] = ($v_0);
            delete parentNode.DefaultView;
        }
        $v_0 = parentNode.MobileView;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MobileView'] = ($v_0);
            delete parentNode.MobileView;
        }
        $v_0 = parentNode.MobileDefaultView;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['MobileDefaultView'] = ($v_0);
            delete parentNode.MobileDefaultView;
        }
        $v_0 = parentNode.ContentTypeId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ContentTypeId'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.ContentTypeId;
        }
        $v_0 = parentNode.DefaultViewForContentType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DefaultViewForContentType'] = ($v_0);
            delete parentNode.DefaultViewForContentType;
        }
        $v_0 = parentNode.PersonalView;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['PersonalView'] = ($v_0);
            delete parentNode.PersonalView;
        }
        $v_0 = parentNode.OrderedView;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['OrderedView'] = ($v_0);
            delete parentNode.OrderedView;
        }
        $v_0 = parentNode.ViewQuery;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ViewQuery'] = ($v_0);
            delete parentNode.ViewQuery;
        }
        $v_0 = parentNode.Method;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Method'] = ($v_0);
            delete parentNode.Method;
        }
        $v_0 = parentNode.ViewProjectedFields;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ViewProjectedFields'] = ($v_0);
            delete parentNode.ViewProjectedFields;
        }
        $v_0 = parentNode.ViewJoins;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ViewJoins'] = ($v_0);
            delete parentNode.ViewJoins;
        }
        $v_0 = parentNode.RowLimit;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RowLimit'] = ($v_0);
            delete parentNode.RowLimit;
        }
        $v_0 = parentNode.Paged;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Paged'] = ($v_0);
            delete parentNode.Paged;
        }
        $v_0 = parentNode.Toolbar;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Toolbar'] = ($v_0);
            delete parentNode.Toolbar;
        }
        $v_0 = parentNode.ToolbarTemplateName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ToolbarTemplateName'] = ($v_0);
            delete parentNode.ToolbarTemplateName;
        }
        $v_0 = parentNode.Formats;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Formats'] = ($v_0);
            delete parentNode.Formats;
        }
        $v_0 = parentNode.Aggregations;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Aggregations'] = ($v_0);
            delete parentNode.Aggregations;
        }
        $v_0 = parentNode.AggregationsStatus;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AggregationsStatus'] = ($v_0);
            delete parentNode.AggregationsStatus;
        }
        $v_0 = parentNode.HtmlSchemaXml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['HtmlSchemaXml'] = ($v_0);
            delete parentNode.HtmlSchemaXml;
        }
        $v_0 = parentNode.StyleId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['StyleId'] = ($v_0);
            delete parentNode.StyleId;
        }
        $v_0 = parentNode.BaseViewId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['BaseViewId'] = ($v_0);
            delete parentNode.BaseViewId;
        }
        $v_0 = parentNode.ViewData;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ViewData'] = ($v_0);
            delete parentNode.ViewData;
        }
    },

    renderAsHtml: function() {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = new SP.ClientActionInvokeMethod(this, 'RenderAsHtml', null);
        this.get_context().addQuery($v_1);
        $v_0 = new SP.StringResult();
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        return $v_0;
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.ViewPropertyNames = function() {}


SP.ViewObjectPropertyNames = function() {}


SP.ViewCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ViewCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.ViewCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getByTitle: function(strTitle) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByTitle']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByTitle'] = $v_1;
        }
        $v_0 = (($v_1[strTitle]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.View(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByTitle', [strTitle]));
        $v_1[strTitle] = $v_0;
        return $v_0;
    },

    getById: function(guidId) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[guidId.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.View(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [guidId]));
        $v_1[guidId.toString()] = $v_0;
        return $v_0;
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.View(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    }
}


SP.ViewCreationInformation = function() {
    ULS5Vl: ;
    SP.ViewCreationInformation.initializeBase(this);
}
SP.ViewCreationInformation.prototype = {
    $1_1: null,
    $2K_1: null,
    $2B_1: null,
    $2E_1: 0,
    $19_1: false,
    $2F_1: false,
    $2M_1: 0,
    $29_1: false,

    get_title: function() {
        ULS5Vl: ;
        return this.$1_1;
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.$1_1 = value;
        return value;
    },

    get_viewFields: function() {
        ULS5Vl: ;
        return this.$2K_1;
    },
    set_viewFields: function(value) {
        ULS5Vl: ;
        this.$2K_1 = value;
        return value;
    },

    get_query: function() {
        ULS5Vl: ;
        return this.$2B_1;
    },
    set_query: function(value) {
        ULS5Vl: ;
        this.$2B_1 = value;
        return value;
    },

    get_rowLimit: function() {
        ULS5Vl: ;
        return this.$2E_1;
    },
    set_rowLimit: function(value) {
        ULS5Vl: ;
        this.$2E_1 = value;
        return value;
    },

    get_paged: function() {
        ULS5Vl: ;
        return this.$19_1;
    },
    set_paged: function(value) {
        ULS5Vl: ;
        this.$19_1 = value;
        return value;
    },

    get_setAsDefaultView: function() {
        ULS5Vl: ;
        return this.$2F_1;
    },
    set_setAsDefaultView: function(value) {
        ULS5Vl: ;
        this.$2F_1 = value;
        return value;
    },

    get_viewTypeKind: function() {
        ULS5Vl: ;
        return this.$2M_1;
    },
    set_viewTypeKind: function(value) {
        ULS5Vl: ;
        this.$2M_1 = value;
        return value;
    },

    get_personalView: function() {
        ULS5Vl: ;
        return this.$29_1;
    },
    set_personalView: function(value) {
        ULS5Vl: ;
        this.$29_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{a3547807-7266-42f3-b055-afa6e840e458}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Title', 'ViewFields', 'Query', 'RowLimit', 'Paged', 'SetAsDefaultView', 'ViewTypeKind', 'PersonalView'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1_1 = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.ViewFields;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2K_1 = ($v_0);
            delete parentNode.ViewFields;
        }
        $v_0 = parentNode.Query;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2B_1 = ($v_0);
            delete parentNode.Query;
        }
        $v_0 = parentNode.RowLimit;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2E_1 = ($v_0);
            delete parentNode.RowLimit;
        }
        $v_0 = parentNode.Paged;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$19_1 = ($v_0);
            delete parentNode.Paged;
        }
        $v_0 = parentNode.SetAsDefaultView;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2F_1 = ($v_0);
            delete parentNode.SetAsDefaultView;
        }
        $v_0 = parentNode.ViewTypeKind;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2M_1 = ($v_0);
            delete parentNode.ViewTypeKind;
        }
        $v_0 = parentNode.PersonalView;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$29_1 = ($v_0);
            delete parentNode.PersonalView;
        }
    }
}


SP.ViewFieldCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.ViewFieldCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.ViewFieldCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    $3z_2: function($p0) {
        Array.add(this.get_data(), $p0);
    },

    $47_2: function($p0) {
        Array.remove(this.get_data(), $p0);
    },

    $3U_2: function() {
        ULS5Vl: ;
        var $v_0 = this.get_data();
        while ($v_0.length > 0) {
            Array.removeAt($v_0, $v_0.length - 1);
        }
    },

    get_schemaXml: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SchemaXml');
        return ((this.get_objectData().get_properties()['SchemaXml']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.ViewFieldCollection.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.SchemaXml;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SchemaXml'] = ($v_0);
            delete parentNode.SchemaXml;
        }
    },

    moveFieldTo: function(field, index) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'MoveFieldTo', [field, index]);
        this.get_context().addQuery($v_0);
    },

    add: function(strField) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Add', [strField]);
        this.get_context().addQuery($v_0);
        this.$3z_2(strField);
    },

    remove: function(strField) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Remove', [strField]);
        this.get_context().addQuery($v_0);
        this.$47_2(strField);
    },

    removeAll: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'RemoveAll', null);
        this.get_context().addQuery($v_0);
        this.$3U_2();
    }
}


SP.ViewFieldCollectionPropertyNames = function() {}


SP.Web = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Web.initializeBase(this, [Context, ObjectPath]);
}
SP.Web.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Description'] = $p0.$2_1;
            this.get_objectData().get_properties()['Title'] = $p0.$1_1;
        }
    },

    get_lists: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Lists']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ListCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Lists'));
            this.get_objectData().get_clientObjectProperties()['Lists'] = $v_0;
        }
        return $v_0;
    },

    get_rootFolder: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['RootFolder']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Folder(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'RootFolder'));
            this.get_objectData().get_clientObjectProperties()['RootFolder'] = $v_0;
        }
        return $v_0;
    },

    get_folders: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Folders']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FolderCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Folders'));
            this.get_objectData().get_clientObjectProperties()['Folders'] = $v_0;
        }
        return $v_0;
    },

    get_webs: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Webs']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.WebCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Webs'));
            this.get_objectData().get_clientObjectProperties()['Webs'] = $v_0;
        }
        return $v_0;
    },

    get_features: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Features']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FeatureCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Features'));
            this.get_objectData().get_clientObjectProperties()['Features'] = $v_0;
        }
        return $v_0;
    },

    get_workflowTemplates: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['WorkflowTemplates']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Workflow.WorkflowTemplateCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'WorkflowTemplates'));
            this.get_objectData().get_clientObjectProperties()['WorkflowTemplates'] = $v_0;
        }
        return $v_0;
    },

    get_workflowAssociations: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['WorkflowAssociations']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Workflow.WorkflowAssociationCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'WorkflowAssociations'));
            this.get_objectData().get_clientObjectProperties()['WorkflowAssociations'] = $v_0;
        }
        return $v_0;
    },

    get_listTemplates: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ListTemplates']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ListTemplateCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ListTemplates'));
            this.get_objectData().get_clientObjectProperties()['ListTemplates'] = $v_0;
        }
        return $v_0;
    },

    get_currentUser: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['CurrentUser']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.User(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'CurrentUser'));
            this.get_objectData().get_clientObjectProperties()['CurrentUser'] = $v_0;
        }
        return $v_0;
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Description'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Description', value));
        }
        return value;
    },

    get_created: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Created');
        return ((this.get_objectData().get_properties()['Created']));
    },

    get_lastItemModifiedDate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('LastItemModifiedDate');
        return ((this.get_objectData().get_properties()['LastItemModifiedDate']));
    },

    get_recycleBinEnabled: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('RecycleBinEnabled');
        return ((this.get_objectData().get_properties()['RecycleBinEnabled']));
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Title'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Title', value));
        }
        return value;
    },

    get_serverRelativeUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ServerRelativeUrl');
        return ((this.get_objectData().get_properties()['ServerRelativeUrl']));
    },
    set_serverRelativeUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['ServerRelativeUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'ServerRelativeUrl', value));
        }
        return value;
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_allProperties: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['AllProperties']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.PropertyValues(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'AllProperties'));
            this.get_objectData().get_clientObjectProperties()['AllProperties'] = $v_0;
        }
        return $v_0;
    },

    get_syndicationEnabled: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('SyndicationEnabled');
        return ((this.get_objectData().get_properties()['SyndicationEnabled']));
    },
    set_syndicationEnabled: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['SyndicationEnabled'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'SyndicationEnabled', value));
        }
        return value;
    },

    get_allowRssFeeds: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowRssFeeds');
        return ((this.get_objectData().get_properties()['AllowRssFeeds']));
    },

    get_quickLaunchEnabled: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('QuickLaunchEnabled');
        return ((this.get_objectData().get_properties()['QuickLaunchEnabled']));
    },
    set_quickLaunchEnabled: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['QuickLaunchEnabled'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'QuickLaunchEnabled', value));
        }
        return value;
    },

    get_treeViewEnabled: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TreeViewEnabled');
        return ((this.get_objectData().get_properties()['TreeViewEnabled']));
    },
    set_treeViewEnabled: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['TreeViewEnabled'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'TreeViewEnabled', value));
        }
        return value;
    },

    get_language: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Language');
        return ((this.get_objectData().get_properties()['Language']));
    },

    get_navigation: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Navigation']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Navigation(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Navigation'));
            this.get_objectData().get_clientObjectProperties()['Navigation'] = $v_0;
        }
        return $v_0;
    },

    get_contentTypes: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['ContentTypes']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ContentTypeCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'ContentTypes'));
            this.get_objectData().get_clientObjectProperties()['ContentTypes'] = $v_0;
        }
        return $v_0;
    },

    get_availableContentTypes: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['AvailableContentTypes']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.ContentTypeCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'AvailableContentTypes'));
            this.get_objectData().get_clientObjectProperties()['AvailableContentTypes'] = $v_0;
        }
        return $v_0;
    },

    get_fields: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['Fields']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FieldCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'Fields'));
            this.get_objectData().get_clientObjectProperties()['Fields'] = $v_0;
        }
        return $v_0;
    },

    get_availableFields: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['AvailableFields']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.FieldCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'AvailableFields'));
            this.get_objectData().get_clientObjectProperties()['AvailableFields'] = $v_0;
        }
        return $v_0;
    },

    get_userCustomActions: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['UserCustomActions']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.UserCustomActionCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'UserCustomActions'));
            this.get_objectData().get_clientObjectProperties()['UserCustomActions'] = $v_0;
        }
        return $v_0;
    },

    get_uiVersion: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UIVersion');
        return ((this.get_objectData().get_properties()['UIVersion']));
    },
    set_uiVersion: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['UIVersion'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'UIVersion', value));
        }
        return value;
    },

    get_uiVersionConfigurationEnabled: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('UIVersionConfigurationEnabled');
        return ((this.get_objectData().get_properties()['UIVersionConfigurationEnabled']));
    },
    set_uiVersionConfigurationEnabled: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['UIVersionConfigurationEnabled'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'UIVersionConfigurationEnabled', value));
        }
        return value;
    },

    get_allowDesignerForCurrentUser: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowDesignerForCurrentUser');
        return ((this.get_objectData().get_properties()['AllowDesignerForCurrentUser']));
    },

    get_allowRevertFromTemplateForCurrentUser: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowRevertFromTemplateForCurrentUser');
        return ((this.get_objectData().get_properties()['AllowRevertFromTemplateForCurrentUser']));
    },

    get_allowMasterPageEditingForCurrentUser: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowMasterPageEditingForCurrentUser');
        return ((this.get_objectData().get_properties()['AllowMasterPageEditingForCurrentUser']));
    },

    get_showUrlStructureForCurrentUser: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ShowUrlStructureForCurrentUser');
        return ((this.get_objectData().get_properties()['ShowUrlStructureForCurrentUser']));
    },

    get_siteUserInfoList: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['SiteUserInfoList']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.List(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'SiteUserInfoList'));
            this.get_objectData().get_clientObjectProperties()['SiteUserInfoList'] = $v_0;
        }
        return $v_0;
    },

    get_siteGroups: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['SiteGroups']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.GroupCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'SiteGroups'));
            this.get_objectData().get_clientObjectProperties()['SiteGroups'] = $v_0;
        }
        return $v_0;
    },

    get_roleDefinitions: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['RoleDefinitions']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.RoleDefinitionCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'RoleDefinitions'));
            this.get_objectData().get_clientObjectProperties()['RoleDefinitions'] = $v_0;
        }
        return $v_0;
    },

    get_effectiveBasePermissions: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('EffectiveBasePermissions');
        return ((this.get_objectData().get_properties()['EffectiveBasePermissions']));
    },

    get_associatedOwnerGroup: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['AssociatedOwnerGroup']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Group(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'AssociatedOwnerGroup'));
            this.get_objectData().get_clientObjectProperties()['AssociatedOwnerGroup'] = $v_0;
        }
        return $v_0;
    },
    set_associatedOwnerGroup: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_clientObjectProperties()['AssociatedOwnerGroup'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AssociatedOwnerGroup', value));
        }
        return value;
    },

    get_associatedMemberGroup: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['AssociatedMemberGroup']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Group(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'AssociatedMemberGroup'));
            this.get_objectData().get_clientObjectProperties()['AssociatedMemberGroup'] = $v_0;
        }
        return $v_0;
    },
    set_associatedMemberGroup: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_clientObjectProperties()['AssociatedMemberGroup'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AssociatedMemberGroup', value));
        }
        return value;
    },

    get_associatedVisitorGroup: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['AssociatedVisitorGroup']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.Group(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'AssociatedVisitorGroup'));
            this.get_objectData().get_clientObjectProperties()['AssociatedVisitorGroup'] = $v_0;
        }
        return $v_0;
    },
    set_associatedVisitorGroup: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_clientObjectProperties()['AssociatedVisitorGroup'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AssociatedVisitorGroup', value));
        }
        return value;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Web.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Lists;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_lists().fromJson($v_0);
            delete parentNode.Lists;
        }
        $v_0 = parentNode.RootFolder;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_rootFolder().fromJson($v_0);
            delete parentNode.RootFolder;
        }
        $v_0 = parentNode.Folders;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_folders().fromJson($v_0);
            delete parentNode.Folders;
        }
        $v_0 = parentNode.Webs;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_webs().fromJson($v_0);
            delete parentNode.Webs;
        }
        $v_0 = parentNode.Features;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_features().fromJson($v_0);
            delete parentNode.Features;
        }
        $v_0 = parentNode.WorkflowTemplates;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_workflowTemplates().fromJson($v_0);
            delete parentNode.WorkflowTemplates;
        }
        $v_0 = parentNode.WorkflowAssociations;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_workflowAssociations().fromJson($v_0);
            delete parentNode.WorkflowAssociations;
        }
        $v_0 = parentNode.ListTemplates;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_listTemplates().fromJson($v_0);
            delete parentNode.ListTemplates;
        }
        $v_0 = parentNode.CurrentUser;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_currentUser().fromJson($v_0);
            delete parentNode.CurrentUser;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.Created;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Created'] = ($v_0);
            delete parentNode.Created;
        }
        $v_0 = parentNode.LastItemModifiedDate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['LastItemModifiedDate'] = ($v_0);
            delete parentNode.LastItemModifiedDate;
        }
        $v_0 = parentNode.RecycleBinEnabled;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['RecycleBinEnabled'] = ($v_0);
            delete parentNode.RecycleBinEnabled;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.ServerRelativeUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ServerRelativeUrl'] = ($v_0);
            delete parentNode.ServerRelativeUrl;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.AllProperties;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_allProperties().fromJson($v_0);
            delete parentNode.AllProperties;
        }
        $v_0 = parentNode.SyndicationEnabled;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['SyndicationEnabled'] = ($v_0);
            delete parentNode.SyndicationEnabled;
        }
        $v_0 = parentNode.AllowRssFeeds;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowRssFeeds'] = ($v_0);
            delete parentNode.AllowRssFeeds;
        }
        $v_0 = parentNode.QuickLaunchEnabled;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['QuickLaunchEnabled'] = ($v_0);
            delete parentNode.QuickLaunchEnabled;
        }
        $v_0 = parentNode.TreeViewEnabled;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TreeViewEnabled'] = ($v_0);
            delete parentNode.TreeViewEnabled;
        }
        $v_0 = parentNode.Language;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Language'] = ($v_0);
            delete parentNode.Language;
        }
        $v_0 = parentNode.Navigation;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_navigation().fromJson($v_0);
            delete parentNode.Navigation;
        }
        $v_0 = parentNode.ContentTypes;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_contentTypes().fromJson($v_0);
            delete parentNode.ContentTypes;
        }
        $v_0 = parentNode.AvailableContentTypes;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_availableContentTypes().fromJson($v_0);
            delete parentNode.AvailableContentTypes;
        }
        $v_0 = parentNode.Fields;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_fields().fromJson($v_0);
            delete parentNode.Fields;
        }
        $v_0 = parentNode.AvailableFields;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_availableFields().fromJson($v_0);
            delete parentNode.AvailableFields;
        }
        $v_0 = parentNode.UserCustomActions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_userCustomActions().fromJson($v_0);
            delete parentNode.UserCustomActions;
        }
        $v_0 = parentNode.UIVersion;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UIVersion'] = ($v_0);
            delete parentNode.UIVersion;
        }
        $v_0 = parentNode.UIVersionConfigurationEnabled;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['UIVersionConfigurationEnabled'] = ($v_0);
            delete parentNode.UIVersionConfigurationEnabled;
        }
        $v_0 = parentNode.AllowDesignerForCurrentUser;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowDesignerForCurrentUser'] = ($v_0);
            delete parentNode.AllowDesignerForCurrentUser;
        }
        $v_0 = parentNode.AllowRevertFromTemplateForCurrentUser;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowRevertFromTemplateForCurrentUser'] = ($v_0);
            delete parentNode.AllowRevertFromTemplateForCurrentUser;
        }
        $v_0 = parentNode.AllowMasterPageEditingForCurrentUser;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowMasterPageEditingForCurrentUser'] = ($v_0);
            delete parentNode.AllowMasterPageEditingForCurrentUser;
        }
        $v_0 = parentNode.ShowUrlStructureForCurrentUser;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ShowUrlStructureForCurrentUser'] = ($v_0);
            delete parentNode.ShowUrlStructureForCurrentUser;
        }
        $v_0 = parentNode.SiteUserInfoList;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_siteUserInfoList().fromJson($v_0);
            delete parentNode.SiteUserInfoList;
        }
        $v_0 = parentNode.SiteGroups;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_siteGroups().fromJson($v_0);
            delete parentNode.SiteGroups;
        }
        $v_0 = parentNode.RoleDefinitions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_roleDefinitions().fromJson($v_0);
            delete parentNode.RoleDefinitions;
        }
        $v_0 = parentNode.EffectiveBasePermissions;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['EffectiveBasePermissions'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.EffectiveBasePermissions;
        }
        $v_0 = parentNode.AssociatedOwnerGroup;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_associatedOwnerGroup().fromJson($v_0);
            delete parentNode.AssociatedOwnerGroup;
        }
        $v_0 = parentNode.AssociatedMemberGroup;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_associatedMemberGroup().fromJson($v_0);
            delete parentNode.AssociatedMemberGroup;
        }
        $v_0 = parentNode.AssociatedVisitorGroup;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_associatedVisitorGroup().fromJson($v_0);
            delete parentNode.AssociatedVisitorGroup;
        }
    },

    getFileByServerRelativeUrl: function(serverRelativeUrl) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetFileByServerRelativeUrl']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetFileByServerRelativeUrl'] = $v_1;
        }
        $v_0 = (($v_1[serverRelativeUrl.toUpperCase()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.File(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetFileByServerRelativeUrl', [serverRelativeUrl]));
        $v_1[serverRelativeUrl.toUpperCase()] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    getFolderByServerRelativeUrl: function(serverRelativeUrl) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetFolderByServerRelativeUrl']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetFolderByServerRelativeUrl'] = $v_1;
        }
        $v_0 = (($v_1[serverRelativeUrl.toUpperCase()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Folder(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetFolderByServerRelativeUrl', [serverRelativeUrl]));
        $v_1[serverRelativeUrl.toUpperCase()] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    },

    getSubwebsForCurrentUser: function(query_) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.WebCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetSubwebsForCurrentUser', [query_]));
        return $v_0;
    },

    getAvailableWebTemplates: function(lcid, doIncludeCrossLanguage) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.WebTemplateCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetAvailableWebTemplates', [lcid, doIncludeCrossLanguage]));
        return $v_0;
    },

    getCatalog: function(typeCatalog) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetCatalog']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = [];
            this.get_objectData().get_methodReturnObjects()['GetCatalog'] = $v_1;
        }
        $v_0 = (($v_1[typeCatalog]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.List(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetCatalog', [typeCatalog]));
        $v_1[typeCatalog] = $v_0;
        return $v_0;
    },

    getChanges: function(query_) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.ChangeCollection(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetChanges', [query_]));
        return $v_0;
    },

    mapToIcon: function(fileName, progId, size) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = new SP.ClientActionInvokeMethod(this, 'MapToIcon', [fileName, progId, size]);
        this.get_context().addQuery($v_1);
        $v_0 = new SP.StringResult();
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        return $v_0;
    },

    doesUserHavePermissions: function(permissionMask) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = new SP.ClientActionInvokeMethod(this, 'DoesUserHavePermissions', [permissionMask]);
        this.get_context().addQuery($v_1);
        $v_0 = new SP.BooleanResult();
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        return $v_0;
    },

    ensureUser: function(logonName) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.User(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'EnsureUser', [logonName]));
        return $v_0;
    },

    applyWebTemplate: function(strWebTemplate) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'ApplyWebTemplate', [strWebTemplate]);
        this.get_context().addQuery($v_0);
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
    }
}


SP.WebPropertyNames = function() {}


SP.WebObjectPropertyNames = function() {}


SP.WebCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.WebCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.WebCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Web(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    }
}


SP.WebCreationInformation = function() {
    ULS5Vl: ;
    SP.WebCreationInformation.initializeBase(this);
}
SP.WebCreationInformation.prototype = {
    $6_1: null,
    $1_1: null,
    $2_1: null,
    $24_1: 0,
    $2N_1: null,
    $2J_1: false,

    get_url: function() {
        ULS5Vl: ;
        return this.$6_1;
    },
    set_url: function(value) {
        ULS5Vl: ;
        this.$6_1 = value;
        return value;
    },

    get_title: function() {
        ULS5Vl: ;
        return this.$1_1;
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.$1_1 = value;
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        return this.$2_1;
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.$2_1 = value;
        return value;
    },

    get_language: function() {
        ULS5Vl: ;
        return this.$24_1;
    },
    set_language: function(value) {
        ULS5Vl: ;
        this.$24_1 = value;
        return value;
    },

    get_webTemplate: function() {
        ULS5Vl: ;
        return this.$2N_1;
    },
    set_webTemplate: function(value) {
        ULS5Vl: ;
        this.$2N_1 = value;
        return value;
    },

    get_useSamePermissionsAsParentSite: function() {
        ULS5Vl: ;
        return this.$2J_1;
    },
    set_useSamePermissionsAsParentSite: function(value) {
        ULS5Vl: ;
        this.$2J_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{8f9e9fbe-189e-492f-884f-98f9ef9cc4d6}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Url', 'Title', 'Description', 'Language', 'WebTemplate', 'UseSamePermissionsAsParentSite'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Url;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$6_1 = ($v_0);
            delete parentNode.Url;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1_1 = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2_1 = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.Language;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$24_1 = ($v_0);
            delete parentNode.Language;
        }
        $v_0 = parentNode.WebTemplate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2N_1 = ($v_0);
            delete parentNode.WebTemplate;
        }
        $v_0 = parentNode.UseSamePermissionsAsParentSite;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2J_1 = ($v_0);
            delete parentNode.UseSamePermissionsAsParentSite;
        }
    }
}


SP.WebTemplate = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.WebTemplate.initializeBase(this, [Context, ObjectPath]);
}
SP.WebTemplate.prototype = {

    get_lcid: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Lcid');
        return ((this.get_objectData().get_properties()['Lcid']));
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },

    get_isHidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsHidden');
        return ((this.get_objectData().get_properties()['IsHidden']));
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },

    get_imageUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ImageUrl');
        return ((this.get_objectData().get_properties()['ImageUrl']));
    },

    get_isRootWebOnly: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsRootWebOnly');
        return ((this.get_objectData().get_properties()['IsRootWebOnly']));
    },

    get_isSubWebOnly: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsSubWebOnly');
        return ((this.get_objectData().get_properties()['IsSubWebOnly']));
    },

    get_displayCategory: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('DisplayCategory');
        return ((this.get_objectData().get_properties()['DisplayCategory']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.WebTemplate.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Lcid;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Lcid'] = ($v_0);
            delete parentNode.Lcid;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.IsHidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsHidden'] = ($v_0);
            delete parentNode.IsHidden;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.ImageUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ImageUrl'] = ($v_0);
            delete parentNode.ImageUrl;
        }
        $v_0 = parentNode.IsRootWebOnly;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsRootWebOnly'] = ($v_0);
            delete parentNode.IsRootWebOnly;
        }
        $v_0 = parentNode.IsSubWebOnly;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsSubWebOnly'] = ($v_0);
            delete parentNode.IsSubWebOnly;
        }
        $v_0 = parentNode.DisplayCategory;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['DisplayCategory'] = ($v_0);
            delete parentNode.DisplayCategory;
        }
    }
}


SP.WebTemplatePropertyNames = function() {}


SP.WebTemplateCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.WebTemplateCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.WebTemplateCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    }
}


Type.registerNamespace('SP.UI');

SP.UI.Orientation = function() {}
SP.UI.Orientation.prototype = {
    horizontal: 0,
    vertical: 1
}
SP.UI.Orientation.registerEnum('SP.UI.Orientation', false);


SP.UI.PopoutMenu = function(launcherId, menuId, iconId, launcherOpenCssClass, textDirection, closeIconUrl, isClustered, closeIconOffsetLeft, closeIconOffsetTop, closeIconHeight, closeIconWidth) {
    ULS5Vl: ;
    this.$2X = Function.createDelegate(this, this.closeMenu);
    this.$2f = Function.createDelegate(this, this.onMenuMouseOver);
    this.$2e = Function.createDelegate(this, this.onMenuMouseOut);
    this.$j_0 = -1;
    this.$A_0 = $get(launcherId);
    this.$0_0 = $get(menuId);
    this.$1a_0 = launcherOpenCssClass;
    this.$2r_0 = textDirection;
    this.$1Y_0 = closeIconUrl;
    this.$2n_0 = isClustered;
    if (isClustered) {
        this.$k_0 = $get(iconId);
        this.$Y_0 = this.$k_0.firstChild;
        this.$2o_0 = closeIconOffsetLeft;
        this.$2p_0 = closeIconOffsetTop;
        this.$2m_0 = closeIconHeight;
        this.$2q_0 = closeIconWidth;
    } else {
        this.$Y_0 = $get(iconId);
    }
    if (SP.ScriptUtility.isNullOrUndefined(this.$A_0)) {
        throw Error.argument('launcherId');
    }
    if (SP.ScriptUtility.isNullOrUndefined(this.$0_0)) {
        throw Error.argument('menuId');
    }
    this.$1c_0 = this.$2e;
    this.$1d_0 = this.$2f;
    this.$1b_0 = SP.UI.PopoutMenu.onMenuClick;
    $addHandler(this.$0_0, 'mouseout', this.$1c_0);
    $addHandler(this.$0_0, 'mouseover', this.$1d_0);
    $addHandler(this.$0_0, 'click', this.$1b_0);
}
SP.UI.PopoutMenu.beginModal = function() {
    ULS5Vl: ;
    if (SP.UI.PopoutMenu.$I_0) {
        return;
    }
    if (!SP.UI.PopoutMenu.$1Z_0) {
        $addHandler(document, 'keydown', SP.UI.PopoutMenu.onModalKeyDown);
        var $v_0 = SP.UI.PopoutMenu.onCloseEvent;
        $addHandler(window, 'scroll', $v_0);
        $addHandler(document.body, 'click', $v_0);
        SP.UI.PopoutMenu.$1Z_0 = true;
    }
    SP.UI.PopoutMenu.$I_0 = true;
}
SP.UI.PopoutMenu.endModal = function() {
    ULS5Vl: ;
    if (!SP.UI.PopoutMenu.$I_0) {
        return;
    }
    SP.UI.PopoutMenu.$I_0 = false;
}
SP.UI.PopoutMenu.onMenuClick = function(evt) {
    ULS5Vl: ;
    evt.stopPropagation();
    if (!SP.ScriptUtility.isNullOrUndefined(SP.UI.PopoutMenu._activePopoutMenuInstance)) {
        SP.UI.PopoutMenu._activePopoutMenuInstance.closeMenu();
    }
}
SP.UI.PopoutMenu.onModalKeyDown = function(evt) {
    ULS5Vl: ;
    if (!SP.UI.PopoutMenu.$I_0) {
        return;
    }
    if (evt && evt.rawEvent) {
        if (evt.rawEvent.keyCode === 27) {
            SP.UI.PopoutMenu._activePopoutMenuInstance.closeMenu();
        }
    }
}
SP.UI.PopoutMenu.onCloseEvent = function(evt) {
    ULS5Vl: ;
    if (!SP.UI.PopoutMenu.$I_0) {
        return;
    }
    SP.UI.PopoutMenu._activePopoutMenuInstance.closeMenu();
    evt.preventDefault();
}
SP.UI.PopoutMenu.ensureCSSClassOnElement = function(element, cssClass) {
    ULS5Vl: ;
    if (SP.ScriptUtility.isNullOrUndefined(element)) {
        return;
    }
    var $v_0 = element.className;
    if ($v_0.indexOf(cssClass) !== -1) {
        return;
    }
    var $v_1 = (element.className.trim() + ' ' + cssClass);
    $v_1 = $v_1.trim();
    element.className = $v_1;
}
SP.UI.PopoutMenu.removeCSSClassFromElement = function(element, cssClass) {
    ULS5Vl: ;
    if (SP.ScriptUtility.isNullOrUndefined(element)) {
        return;
    }
    element.className = element.className.replace(cssClass, '');
}
SP.UI.PopoutMenu.getViewPortWidth = function() {
    ULS5Vl: ;
    var $v_0 = window.innerWidth;
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $v_0 = document.documentElement.clientWidth;
    }
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $v_0 = document.body.clientWidth;
    }
    return $v_0;
}
SP.UI.PopoutMenu.getViewPortHeight = function() {
    ULS5Vl: ;
    var $v_0 = window.innerHeight;
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $v_0 = document.documentElement.clientHeight;
    }
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $v_0 = document.body.clientHeight;
    }
    return $v_0;
}
SP.UI.PopoutMenu.getViewableTop = function() {
    ULS5Vl: ;
    var $v_0;
    $v_0 = window.pageXOffset;
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $v_0 = document.documentElement.scrollTop;
    }
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $v_0 = document.body.scrollTop;
    }
    return $v_0;
}
SP.UI.PopoutMenu.getViewableLeft = function() {
    ULS5Vl: ;
    var $v_0;
    $v_0 = window.pageYOffset;
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $v_0 = document.documentElement.scrollLeft;
    }
    if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
        $v_0 = document.body.scrollLeft;
    }
    return $v_0;
}
SP.UI.PopoutMenu.get_activePopoutMenuInstance = function() {
    ULS5Vl: ;
    return SP.UI.PopoutMenu._activePopoutMenuInstance;
}
SP.UI.PopoutMenu.set_activePopoutMenuInstance = function(value) {
    ULS5Vl: ;
    SP.UI.PopoutMenu._activePopoutMenuInstance = value;
    return value;
}
SP.UI.PopoutMenu.createPopoutMenuInstanceAndLaunch = function(anchorId, menuId, iconId, anchorOpenCss, textDirection, closeIconUrl, isClustered, x, y, height, width) {
    ULS5Vl: ;
    if (!SP.ScriptUtility.isNullOrUndefined(SP.UI.PopoutMenu._activePopoutMenuInstance)) {
        SP.UI.PopoutMenu._activePopoutMenuInstance.closeMenu();
        return;
    }
    var $v_0 = new SP.UI.PopoutMenu(anchorId, menuId, iconId, anchorOpenCss, textDirection, closeIconUrl, isClustered, x, y, height, width);
    $v_0.launchMenu();
}
SP.UI.PopoutMenu.closeActivePopoutMenuInstance = function() {
    ULS5Vl: ;
    if (!SP.ScriptUtility.isNullOrUndefined(SP.UI.PopoutMenu._activePopoutMenuInstance)) {
        SP.UI.PopoutMenu._activePopoutMenuInstance.closeMenu();
    }
}
SP.UI.PopoutMenu.prototype = {
    $A_0: null,
    $0_0: null,
    $k_0: null,
    $Y_0: null,
    $1a_0: null,
    $2r_0: null,
    $1Y_0: null,
    $2n_0: false,
    $2o_0: 0,
    $2p_0: 0,
    $2m_0: 0,
    $2q_0: 0,
    $1c_0: null,
    $1d_0: null,
    $1b_0: null,

    launchMenu: function() {
        ULS5Vl: ;
        if (this._menuLaunched) {
            return;
        }
        if (SP.UI.PopoutMenu._activePopoutMenuInstance) {
            SP.UI.PopoutMenu._activePopoutMenuInstance.closeMenu();
        }
        SP.UI.PopoutMenu._activePopoutMenuInstance = this;
        SP.UI.PopoutMenu.beginModal();
        SP.UI.PopoutMenu.ensureCSSClassOnElement(this.$A_0, this.$1a_0);
        this.$0_0.style.display = 'block';
        this.$0_0.style.visibility = 'hidden';
        this.$0_0.style.position = 'absolute';
        this.$0_0.style.top = '0px';
        this.$0_0.style.left = '0px';
        this.$0_0.style.zIndex = 1002;
        var $v_0 = Sys.Browser.agent === Sys.Browser.InternetExplorer && Math.floor(Sys.Browser.version) === 7;
        if ($v_0) {
            var $v_1 = this.$0_0.offsetWidth;
            if ($v_1 < 142) {
                $v_1 = 142;
            } else if ($v_1 > 400) {
                $v_1 = 400;
            }
            this.$0_0.style.width = $v_1 + 'px';
        }
        this.positionMenu();
        this.$0_0.style.visibility = 'visible';
        if (Sys.Browser.agent === Sys.Browser.InternetExplorer) {
            this.$0_0.parentNode.insertBefore(this.get_backFrame(), this.$0_0);
            this.positionBackFrame(this.$0_0);
        }
        this.$A_0.rel = '_spPopoutMenuIsOpen';
        this._menuLaunched = true;
    },

    closeMenu: function() {
        ULS5Vl: ;
        if (!this._menuLaunched) {
            return;
        }
        this.$0_0.style.display = 'none';
        if (Sys.Browser.agent === Sys.Browser.InternetExplorer) {
            this.$0_0.parentNode.removeChild(this.get_backFrame());
        }
        SP.UI.PopoutMenu.endModal();
        SP.UI.PopoutMenu.removeCSSClassFromElement(this.$A_0, this.$1a_0);
        if (!SP.ScriptUtility.isNullOrEmptyString(this.$1Y_0)) {
            this.$4E_0();
        }
        this.$A_0.rel = '';
        this._menuLaunched = false;
        SP.UI.PopoutMenu._activePopoutMenuInstance = null;
    },

    $4E_0: function() {
        ULS5Vl: ;
        this.$Y_0.src = this.$1Y_0;
        if (this.$2n_0) {
            this.$Y_0.style.top = '-' + this.$2p_0 + 'px';
            this.$Y_0.style.left = '-' + this.$2o_0 + 'px';
            this.$k_0.style.height = this.$2m_0 + 'px';
            this.$k_0.style.width = this.$2q_0 + 'px';
        }
    },

    positionBackFrame: function(elem) {
        ULS5Vl: ;
        var $v_0 = !SP.ScriptUtility.isNullOrUndefined(elem.offsetParent);
        var $v_1 = AbsTop(elem) - (($v_0) ? AbsTop(elem.offsetParent) : 0);
        var $v_2 = AbsLeft(elem) - (($v_0) ? AbsLeft(elem.offsetParent) : 0);
        var $v_3 = elem.offsetWidth;
        var $v_4 = elem.offsetHeight;
        this.get_backFrame().style.top = $v_1 + 'px';
        this.get_backFrame().style.left = $v_2 + 'px';
        this.get_backFrame().style.width = $v_3 + 'px';
        this.get_backFrame().style.height = $v_4 + 'px';
    },

    positionMenu: function() {
        ULS5Vl: ;
        var $v_0 = this.$0_0.offsetWidth;
        var $v_1 = this.$0_0.offsetHeight;
        var $v_2 = !SP.ScriptUtility.isNullOrUndefined(this.$0_0.offsetParent);
        var $v_3 = this.$A_0.offsetWidth;
        var $v_4 = this.$A_0.offsetHeight;
        var $v_5 = AbsTop(this.$A_0) - (($v_2) ? AbsTop(this.$0_0.offsetParent) : 0);
        var $v_6 = AbsLeft(this.$A_0) - (($v_2) ? AbsLeft(this.$0_0.offsetParent) : 0);
        var $v_7 = SP.UI.PopoutMenu.getViewPortWidth();
        var $v_8 = SP.UI.PopoutMenu.getViewPortHeight();
        var $v_9 = SP.UI.PopoutMenu.getViewableTop();
        var $v_A = SP.UI.PopoutMenu.getViewableLeft();
        if (this.get_defaultLaunchRight()) {
            if (this.$2S_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A)) {
                return;
            }
            if (this.$3W_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A)) {
                return;
            }
            if (this.$2R_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A)) {
                return;
            }
            if (this.$3V_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A)) {
                return;
            }
            this.$2S_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A);
        } else {
            if (this.$2R_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A)) {
                return;
            }
            if (this.$3V_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A)) {
                return;
            }
            if (this.$2S_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A)) {
                return;
            }
            if (this.$3W_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A)) {
                return;
            }
            this.$2R_0($v_0, $v_1, $v_3, $v_4, $v_5, $v_6, $v_7, $v_8, $v_9, $v_A);
        }
    },

    positionMenuWithCoordinates: function(left, top) {
        ULS5Vl: ;
        this.$0_0.style.top = top + 'px';
        this.$0_0.style.left = left + 'px';
    },

    $3V_0: function($p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9) {
        var $v_0 = $p5 + $p2 - $p0;
        if ($v_0 < $p9) {
            return false;
        }
        var $v_1 = $p4 - $p1;
        if ($v_1 < $p8) {
            return false;
        }
        this.positionMenuWithCoordinates($v_0, $v_1);
        return true;
    },

    $2R_0: function($p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9) {
        var $v_0 = $p5 + $p2 - $p0;
        if ($v_0 < $p9) {
            return false;
        }
        var $v_1 = $p4 + $p3 + $p1;
        var $v_2 = $p8 + $p7;
        if ($v_1 > $v_2) {
            return false;
        }
        this.positionMenuWithCoordinates($v_0, $p4 + $p3);
        return true;
    },

    $3W_0: function($p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9) {
        var $v_0 = $p5 + $p0;
        var $v_1 = $p9 + $p6;
        if ($v_0 > $v_1) {
            return false;
        }
        var $v_2 = $p4 - $p1;
        if ($v_2 < $p8) {
            return false;
        }
        this.positionMenuWithCoordinates($p5, $v_2);
        return true;
    },

    $2S_0: function($p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9) {
        var $v_0 = $p5 + $p0;
        var $v_1 = $p9 + $p6;
        if ($v_0 > $v_1) {
            return false;
        }
        var $v_2 = $p4 + $p3 + $p1;
        var $v_3 = $p8 + $p7;
        if ($v_2 > $v_3) {
            return false;
        }
        this.positionMenuWithCoordinates($p5, $p4 + $p3);
        return true;
    },

    onMenuMouseOver: function(evt) {
        ULS5Vl: ;
        window.clearTimeout(this.$j_0);
    },

    onMenuMouseOut: function(evt) {
        ULS5Vl: ;
        window.clearTimeout(this.$j_0);
        this.$j_0 = window.setTimeout(this.$2X, 1500);
    },

    _menuLaunched: false,

    get_menuLaunched: function() {
        ULS5Vl: ;
        return this._menuLaunched;
    },
    set_menuLaunched: function(value) {
        ULS5Vl: ;
        this._menuLaunched = value;
        return value;
    },

    _backFrame: null,

    get_backFrame: function() {
        ULS5Vl: ;
        if (!this._backFrame) {
            this._backFrame = document.createElement('iframe');
            this._backFrame.style.zIndex = 1001;
            this._backFrame.style.position = 'absolute';
        }
        return this._backFrame;
    },

    get_defaultLaunchRight: function() {
        ULS5Vl: ;
        return this.$2r_0 === 'ltr';
    },

    dispose: function() {
        ULS5Vl: ;
        $removeHandler(this.$0_0, 'mouseout', this.$1c_0);
        $removeHandler(this.$0_0, 'mouseover', this.$1d_0);
        $removeHandler(this.$0_0, 'click', this.$1b_0);
    }
}


SP.UI.Notify = function() {}
SP.UI.Notify.addNotification = function(strHtml, bSticky) {
    ULS5Vl: ;
    return addNotification(strHtml, bSticky);
}
SP.UI.Notify.removeNotification = function(nid) {
    ULS5Vl: ;
    removeNotification(nid);
}


SP.UI.Status = function() {}
SP.UI.Status.addStatus = function(strTitle, strHtml, atBegining) {
    ULS5Vl: ;
    return addStatus(strTitle, strHtml, atBegining);
}
SP.UI.Status.appendStatus = function(sid, strTitle, strHtml) {
    ULS5Vl: ;
    return appendStatus(sid, strTitle, strHtml);
}
SP.UI.Status.updateStatus = function(sid, strHtml) {
    ULS5Vl: ;
    updateStatus(sid, strHtml);
}
SP.UI.Status.setStatusPriColor = function(sid, strColor) {
    ULS5Vl: ;
    setStatusPriColor(sid, strColor);
}
SP.UI.Status.removeStatus = function(sid) {
    ULS5Vl: ;
    removeStatus(sid);
}
SP.UI.Status.removeAllStatus = function(hide) {
    ULS5Vl: ;
    removeAllStatus(hide);
}


SP.UI.Menu = function(menuElem) {
    ULS5Vl: ;
    this.$c_0 = menuElem;
}
SP.UI.Menu.create = function(id) {
    ULS5Vl: ;
    var $v_0 = CMenu(id);
    return new SP.UI.Menu($v_0);
}
SP.UI.Menu.prototype = {
    $c_0: null,

    addMenuItem: function(text, actionScriptText, imageSourceUrl, imageAlternateText, sequenceNumber, description, id) {
        ULS5Vl: ;
        var $v_0 = CAMOpt(this.$c_0, text, actionScriptText, imageSourceUrl, imageAlternateText, sequenceNumber, description);
        if (id) {
            $v_0.id = id;
        }
    },

    addSeparator: function() {
        ULS5Vl: ;
        CAMSep(this.$c_0);
    },

    addSubMenu: function(text, imageSourceUrl, imageAlternateText, sequenceNumber, description, id) {
        ULS5Vl: ;
        var $v_0 = CASubM(this.$c_0, text, imageSourceUrl, imageAlternateText, sequenceNumber, description);
        if (id) {
            $v_0.id = id;
        }
        return new SP.UI.Menu($v_0);
    },

    show: function(relativeElement, forceRefresh, flipTopLevelMenu, yOffset) {
        ULS5Vl: ;
        OMenu(this.$c_0, relativeElement, forceRefresh, flipTopLevelMenu, yOffset);
    }
}


SP.UI.MenuTest = function() {}
SP.UI.MenuTest.setup = function(relativeElement) {
    ULS5Vl: ;
    SP.UI.MenuTest.$X_0 = relativeElement;
    relativeElement.attachEvent('onclick', SP.UI.MenuTest.$3y_0);
}
SP.UI.MenuTest.$3y_0 = function() {
    ULS5Vl: ;
    var $v_0 = SP.UI.MenuTest.$X_0._menu;
    if (!$v_0) {
        $v_0 = SP.UI.Menu.create(SP.UI.MenuTest.$X_0.id + '_menu');
        SP.UI.MenuTest.$X_0._menu = $v_0;
        $v_0.addMenuItem('Option 1', null, null, null, 0, null, null);
        $v_0.addSeparator();
        $v_0.addMenuItem('Option 2', 'window.location=\'http://www.microsoft.com\';', null, null, 0, null, null);
    }
    $v_0.show(SP.UI.MenuTest.$X_0, false, false, -1);
}


SP.UI.AspMenu = function(e) {
    ULS5Vl: ;
    SP.UI.AspMenu.initializeBase(this, [e]);
}
SP.UI.AspMenu.$3p_2 = function($p0) {
    var $v_0 = null;
    for (var $v_1 = 0, $v_2 = $p0.childNodes.length; $v_1 < $v_2; ++$v_1) {
        var $v_3 = $p0.childNodes[$v_1];
        if ($v_3 && $v_3.nodeType === 1 && $v_3.tagName.toLowerCase() === 'ul') {
            $v_0 = $v_3;
            break;
        }
    }
    return $v_0;
}
SP.UI.AspMenu.prototype = {
    $C_2: null,
    $O_2: null,
    $1i_2: 500,

    get_menuOrientation: function() {
        ULS5Vl: ;
        if (Sys.UI.DomElement.containsCssClass(this.$C_2.parentNode, 'horizontal')) {
            return 0;
        } else {
            return 1;
        }
    },
    set_menuOrientation: function(value) {
        ULS5Vl: ;
        if (!value) {
            Sys.UI.DomElement.removeCssClass(this.$C_2.parentNode, 'vertical');
            Sys.UI.DomElement.addCssClass(this.$C_2.parentNode, 'horizontal');
        } else if (value === 1) {
            Sys.UI.DomElement.removeCssClass(this.$C_2.parentNode, 'horizontal');
            Sys.UI.DomElement.addCssClass(this.$C_2.parentNode, 'vertical');
        }
        return value;
    },

    get_disappearAfter: function() {
        ULS5Vl: ;
        return this.$1i_2;
    },
    set_disappearAfter: function(value) {
        ULS5Vl: ;
        this.$1i_2 = value;
        return value;
    },

    initialize: function() {
        ULS5Vl: ;
        SP.UI.AspMenu.callBaseMethod(this, 'initialize');
        this.$C_2 = this.get_element().getElementsByTagName('ul')[0];
        this.$3t_2();
        this.$3v_2();
    },

    $3t_2: function() {
        ULS5Vl: ;
        var $v_0 = this.$C_2.getElementsByTagName('ul');
        for (var $v_1 = 0, $v_2 = $v_0.length; $v_1 < $v_2; ++$v_1) {
            if (Sys.UI.DomElement.containsCssClass($v_0[$v_1], 'dynamic')) {
                var $v_3 = $v_0[$v_1].parentNode;
                $v_3.hoverDebouncer = 0;
                this.$3e_2($v_3);
            }
        }
    },

    $3e_2: function($p0) {
        $addHandler($p0, 'mouseover', Function.createDelegate(this, function($p1_0) {
            if ($p0.hoverDebouncer > 0) {
                return;
            }
            $p0.hoverDebouncer = $p0.hoverDebouncer + 1;
            if (Sys.UI.DomElement.containsCssClass($p0, 'hover')) {
                return;
            }
            if (Sys.UI.DomElement.containsCssClass($p0, 'dynamic-children') && Sys.UI.DomElement.containsCssClass($p0, 'static')) {
                if (this.$O_2 && this.$O_2 !== $p0) {
                    this.$30_2(this.$O_2);
                }
                this.$O_2 = $p0;
                var $v_0 = document.documentMode;
                var $v_1 = Sys.Browser.agent === Sys.Browser.InternetExplorer && Sys.Browser.version < 8 && (SP.ScriptUtility.isNullOrUndefined($v_0) || $v_0 < 8);
                var $v_2 = document.dir === 'rtl';
                if ($v_2 && !this.get_menuOrientation() && $v_1) {
                    this.$3a_2($p0, -$p0.offsetWidth, 0);
                    return;
                }
            }
            this.$3a_2($p0, 0, 0);
        }));
        $addHandler($p0, 'mouseout', Function.createDelegate(this, function($p1_0) {
            if ($p0.hoverDebouncer <= 0) {
                return;
            }
            $p0.hoverDebouncer = $p0.hoverDebouncer - 1;
            window.setTimeout(Function.createDelegate(this, function() {
                ULS5Vl: ;
                if ($p0.hoverDebouncer <= 0 && Sys.UI.DomElement.containsCssClass($p0, 'hover')) {
                    Sys.UI.DomElement.addCssClass($p0, 'hover-off');
                    Sys.UI.DomElement.removeCssClass($p0, 'hover');
                    window.setTimeout(Function.createDelegate(this, function() {
                        ULS5Vl: ;
                        if (Sys.UI.DomElement.containsCssClass($p0, 'hover-off')) {
                            this.$30_2($p0);
                        }
                    }), this.$1i_2);
                }
            }), 0);
        }));
    },

    $3a_2: function($p0, $p1, $p2) {
        var $v_0 = Sys.UI.DomElement.containsCssClass($p0, 'hover');
        var $v_1 = Sys.UI.DomElement.containsCssClass($p0, 'hover-off');
        if (!$v_0 && !$v_1) {
            var $v_2 = $p0.offsetHeight;
            Sys.UI.DomElement.addCssClass($p0, 'hover');
            var $v_3 = $p0.childNodes[1];
            var $v_4 = document.dir === 'rtl';
            if (!this.get_menuOrientation() && Sys.UI.DomElement.containsCssClass($p0.parentNode, 'static')) {
                if (!$v_4) {
                    $v_3.style.left = (-1 + $p1) + 'px';
                } else {
                    $v_3.style.right = (-1 + $p1) + 'px';
                }
                $v_3.style.top = ($v_2 + $p2) + 'px';
            } else {
                if (!$v_4) {
                    $v_3.style.left = ($v_3.parentNode.offsetWidth + $p1) + 'px';
                } else {
                    $v_3.style.right = ($v_3.parentNode.offsetWidth + $p1) + 'px';
                }
                $v_3.style.top = (-1 + $p2) + 'px';
            }
        } else if (!$v_0) {
            Sys.UI.DomElement.addCssClass($p0, 'hover');
            Sys.UI.DomElement.removeCssClass($p0, 'hover-off');
        }
    },

    $30_2: function($p0) {
        var $v_0 = SP.UI.AspMenu.$3p_2($p0);
        if ($v_0) {
            $v_0.style.top = '';
            $v_0.style.left = '';
            $v_0.style.right = '';
        }
        Sys.UI.DomElement.removeCssClass($p0, 'hover-off');
        Sys.UI.DomElement.removeCssClass($p0, 'hover');
        if ($p0 === this.$O_2) {
            this.$O_2 = null;
        }
    },

    $3v_2: function() {
        ULS5Vl: ;
        if (!SP.ScriptUtility.isNullOrUndefined(this.$C_2.querySelectorAll)) {
            var $v_0 = this.$C_2.querySelectorAll('a.new-window');
            for (var $v_1 = 0; $v_1 < $v_0.length; ++$v_1) {
                $v_0[$v_1].target = '_blank';
            }
        } else {
            var $v_2 = this.$C_2.getElementsByTagName('a');
            for (var $v_3 = 0; $v_3 < $v_2.length; ++$v_3) {
                if (Sys.UI.DomElement.containsCssClass($v_2[$v_3], 'new-window')) {
                    $v_2[$v_3].target = '_blank';
                }
            }
        }
    }
}


Type.registerNamespace('SP.Utilities');

SP.Utilities.DateTimeFormat = function() {}
SP.Utilities.DateTimeFormat.prototype = {
    dateTime: 0,
    dateOnly: 1,
    timeOnly: 2,
    isO8601: 3,
    monthDayOnly: 4,
    monthYearOnly: 5
}
SP.Utilities.DateTimeFormat.registerEnum('SP.Utilities.DateTimeFormat', false);


SP.Utilities.IconSize = function() {}
SP.Utilities.IconSize.prototype = {
    size16: 0,
    size32: 1
}
SP.Utilities.IconSize.registerEnum('SP.Utilities.IconSize', false);


SP.Utilities.PrincipalSource = function() {}
SP.Utilities.PrincipalSource.prototype = {
    none: 0,
    userInfoList: 1,
    windows: 2,
    membershipProvider: 4,
    roleProvider: 8,
    all: 15
}
SP.Utilities.PrincipalSource.registerEnum('SP.Utilities.PrincipalSource', false);


SP.Utilities.PrincipalType = function() {}
SP.Utilities.PrincipalType.prototype = {
    none: 0,
    user: 1,
    distributionList: 2,
    securityGroup: 4,
    sharePointGroup: 8,
    all: 15
}
SP.Utilities.PrincipalType.registerEnum('SP.Utilities.PrincipalType', false);


SP.Utilities.Utility = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Utilities.Utility.initializeBase(this, [Context, ObjectPath]);
}
SP.Utilities.Utility.getLayoutsPageUrl = function(pageName) {
    ULS5Vl: ;
    return SP.Utilities.UrlBuilder.urlCombine(SP.PageContextInfo.get_webServerRelativeUrl(), '_layouts/' + pageName);
}
SP.Utilities.Utility.getLocalizedLayoutsPageUrl = function(pageName) {
    ULS5Vl: ;
    return SP.Utilities.UrlBuilder.urlCombine(SP.PageContextInfo.get_webServerRelativeUrl(), SP.PageContextInfo.get_webLanguage().toString() + '/_layouts/' + pageName);
}
SP.Utilities.Utility.getImageUrl = function(imageName) {
    ULS5Vl: ;
    return '/_layouts/images/' + imageName;
}
SP.Utilities.Utility.formatDateTime = function(Context, web, datetime, format) {
    ULS5Vl: ;
    var $v_0;
    var $v_1 = new SP.ClientActionInvokeStaticMethod('{16f43e7e-bf35-475d-b677-9dc61e549339}', 'FormatDateTime', [web, datetime, format]);
    Context.addQuery($v_1);
    $v_0 = new SP.StringResult();
    Context.addQueryIdAndResultObject($v_1.get_id(), $v_0);
    return $v_0;
}
SP.Utilities.Utility.searchPrincipals = function(Context, web, input, scopes, sources, usersContainer, maxCount) {
    ULS5Vl: ;
    var $v_0;
    var $v_1 = new SP.ClientActionInvokeStaticMethod('{16f43e7e-bf35-475d-b677-9dc61e549339}', 'SearchPrincipals', [web, input, scopes, sources, usersContainer, maxCount]);
    Context.addQuery($v_1);
    $v_0 = (([]));
    Context.addQueryIdAndResultObject($v_1.get_id(), $v_0);
    return $v_0;
}
SP.Utilities.Utility.getCurrentUserEmailAddresses = function(Context) {
    ULS5Vl: ;
    var $v_0;
    var $v_1 = new SP.ClientActionInvokeStaticMethod('{16f43e7e-bf35-475d-b677-9dc61e549339}', 'GetCurrentUserEmailAddresses', null);
    Context.addQuery($v_1);
    $v_0 = new SP.StringResult();
    Context.addQueryIdAndResultObject($v_1.get_id(), $v_0);
    return $v_0;
}
SP.Utilities.Utility.createEmailBodyForInvitation = function(Context, pageAddress) {
    ULS5Vl: ;
    var $v_0;
    var $v_1 = new SP.ClientActionInvokeStaticMethod('{16f43e7e-bf35-475d-b677-9dc61e549339}', 'CreateEmailBodyForInvitation', [pageAddress]);
    Context.addQuery($v_1);
    $v_0 = new SP.StringResult();
    Context.addQueryIdAndResultObject($v_1.get_id(), $v_0);
    return $v_0;
}
SP.Utilities.Utility.resolvePrincipal = function(Context, web, input, scopes, sources, usersContainer, inputIsEmailOnly) {
    ULS5Vl: ;
    var $v_0;
    var $v_1 = new SP.ClientActionInvokeStaticMethod('{16f43e7e-bf35-475d-b677-9dc61e549339}', 'ResolvePrincipal', [web, input, scopes, sources, usersContainer, inputIsEmailOnly]);
    Context.addQuery($v_1);
    $v_0 = new SP.Utilities.PrincipalInfo();
    Context.addQueryIdAndResultObject($v_1.get_id(), $v_0);
    return $v_0;
}
SP.Utilities.Utility.createNewDiscussion = function(Context, list, title) {
    ULS5Vl: ;
    var $v_0;
    $v_0 = new SP.ListItem(Context, new SP.ObjectPathStaticMethod(Context, '{16f43e7e-bf35-475d-b677-9dc61e549339}', 'CreateNewDiscussion', [list, title]));
    return $v_0;
}
SP.Utilities.Utility.createNewDiscussionReply = function(Context, parent) {
    ULS5Vl: ;
    var $v_0;
    $v_0 = new SP.ListItem(Context, new SP.ObjectPathStaticMethod(Context, '{16f43e7e-bf35-475d-b677-9dc61e549339}', 'CreateNewDiscussionReply', [parent]));
    return $v_0;
}


SP.Utilities.MobileUtility = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Utilities.MobileUtility.initializeBase(this, [Context, ObjectPath]);
}


SP.Utilities.PrincipalInfo = function() {
    ULS5Vl: ;
    SP.Utilities.PrincipalInfo.initializeBase(this);
}
SP.Utilities.PrincipalInfo.prototype = {
    $3I_1: 0,
    $U_1: null,
    $3H_1: 0,
    $S_1: null,
    $3L_1: null,
    $3F_1: null,
    $y_1: null,
    $35_1: null,
    $3D_1: null,

    get_principalType: function() {
        ULS5Vl: ;
        return this.$3I_1;
    },

    get_loginName: function() {
        ULS5Vl: ;
        return this.$U_1;
    },

    get_principalId: function() {
        ULS5Vl: ;
        return this.$3H_1;
    },

    get_email: function() {
        ULS5Vl: ;
        return this.$S_1;
    },

    get_sipAddress: function() {
        ULS5Vl: ;
        return this.$3L_1;
    },

    get_mobile: function() {
        ULS5Vl: ;
        return this.$3F_1;
    },

    get_displayName: function() {
        ULS5Vl: ;
        return this.$y_1;
    },

    get_department: function() {
        ULS5Vl: ;
        return this.$35_1;
    },

    get_jobTitle: function() {
        ULS5Vl: ;
        return this.$3D_1;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{c88e4d2e-768d-4065-9da4-d2880e08733e}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['PrincipalType', 'LoginName', 'PrincipalId', 'Email', 'SIPAddress', 'Mobile', 'DisplayName', 'Department', 'JobTitle'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.PrincipalType;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3I_1 = ($v_0);
            delete parentNode.PrincipalType;
        }
        $v_0 = parentNode.LoginName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$U_1 = ($v_0);
            delete parentNode.LoginName;
        }
        $v_0 = parentNode.PrincipalId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3H_1 = ($v_0);
            delete parentNode.PrincipalId;
        }
        $v_0 = parentNode.Email;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$S_1 = ($v_0);
            delete parentNode.Email;
        }
        $v_0 = parentNode.SIPAddress;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3L_1 = ($v_0);
            delete parentNode.SIPAddress;
        }
        $v_0 = parentNode.Mobile;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3F_1 = ($v_0);
            delete parentNode.Mobile;
        }
        $v_0 = parentNode.DisplayName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$y_1 = ($v_0);
            delete parentNode.DisplayName;
        }
        $v_0 = parentNode.Department;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$35_1 = ($v_0);
            delete parentNode.Department;
        }
        $v_0 = parentNode.JobTitle;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$3D_1 = ($v_0);
            delete parentNode.JobTitle;
        }
    }
}


Type.registerNamespace('SP.Application.UI');

SP.Application.UI.DefaultFormsInformationRequestor = function() {}
SP.Application.UI.DefaultFormsInformationRequestor.registerInterface('SP.Application.UI.DefaultFormsInformationRequestor');


SP.Application.UI.ViewSelectorMenuOptions = function() {}
SP.Application.UI.$create_ViewSelectorMenuOptions = function() {
    ULS5Vl: ;
    return new SP.Application.UI.ViewSelectorMenuOptions();
}


SP.Application.UI.ViewInformationRequestor = function() {}
SP.Application.UI.ViewInformationRequestor.registerInterface('SP.Application.UI.ViewInformationRequestor');


SP.Application.UI.FormsInfo = function() {}
SP.Application.UI.FormsInfo.prototype = {
    ContentTypeName: null,
    NewFormUrl: null,
    DisplayFormUrl: null,
    EditFormUrl: null
}


SP.Application.UI.DefaultFormsInformation = function() {}
SP.Application.UI.DefaultFormsInformation.prototype = {
    DefaultForms: null,
    OtherForms: null
}


SP.Application.UI.DefaultFormsMenuBuilder = function(listId) {
    ULS5Vl: ;
    this.$2i = Function.createDelegate(this, this.$48_0);
    this.$2j = Function.createDelegate(this, this.$49_0);
    this.$a_0 = listId;
}
SP.Application.UI.DefaultFormsMenuBuilder.getDefaultFormsInformation = function(requestor, listId) {
    ULS5Vl: ;
    var $v_0 = new SP.Application.UI.DefaultFormsMenuBuilder(listId);
    $v_0.$2z_0(requestor);
}
SP.Application.UI.DefaultFormsMenuBuilder.$1k_0 = function($p0) {
    if (!SP.ScriptUtility.isNullOrUndefined($p0)) {
        if ($p0.startsWith('~list/')) {
            $p0 = $p0.substr(6);
        } else if ($p0.toUpperCase().startsWith('_LAYOUTS/')) {
            $p0 = '';
        }
    }
    return $p0;
}
SP.Application.UI.DefaultFormsMenuBuilder.$3n_0 = function($p0, $p1) {
    var $v_0 = new SP.Application.UI.DefaultFormsInformation();
    $v_0.DefaultForms = new SP.Application.UI.FormsInfo();
    if ($p0.get_baseType() !== 1) {
        $v_0.DefaultForms.NewFormUrl = $p0.get_defaultNewFormUrl();
    }
    $v_0.DefaultForms.DisplayFormUrl = $p0.get_defaultDisplayFormUrl();
    $v_0.DefaultForms.EditFormUrl = $p0.get_defaultEditFormUrl();
    $v_0.OtherForms = [];
    var $$enum_1_0 = $p1.getEnumerator();
    while ($$enum_1_0.moveNext()) {
        var $v_1 = $$enum_1_0.get_current();
        var $v_2 = new SP.Application.UI.FormsInfo();
        $v_2.ContentTypeName = $v_1.get_name();
        $v_2.NewFormUrl = SP.Application.UI.DefaultFormsMenuBuilder.$1k_0($v_1.get_newFormUrl());
        $v_2.DisplayFormUrl = SP.Application.UI.DefaultFormsMenuBuilder.$1k_0($v_1.get_displayFormUrl());
        $v_2.EditFormUrl = SP.Application.UI.DefaultFormsMenuBuilder.$1k_0($v_1.get_editFormUrl());
        Array.add($v_0.OtherForms, $v_2);
    }
    return $v_0;
}
SP.Application.UI.DefaultFormsMenuBuilder.prototype = {
    $a_0: null,
    $G_0: null,
    $1u_0: null,
    $9_0: null,

    $4B_0: function() {
        ULS5Vl: ;
        var $v_0 = SP.ClientContext.get_current();
        var $v_1 = $v_0.get_web();
        this.$G_0 = $v_1.get_lists().getById(this.$a_0);
        this.$G_0.retrieve('BaseType', 'DefaultNewFormUrl', 'DefaultDisplayFormUrl', 'DefaultEditFormUrl');
        this.$1u_0 = this.$G_0.get_contentTypes();
        var $v_2 = this.$1u_0.retrieveItems();
        $v_2.retrieve(['Name', 'DisplayFormUrl', 'NewFormUrl', 'EditFormUrl']);
        return $v_0;
    },

    $2z_0: function($p0) {
        var $v_0 = this.$4B_0();
        this.$9_0 = $p0;
        $v_0.executeQueryAsync(this.$2j, this.$2i);
    },

    $49_0: function($p0, $p1) {
        if (!SP.ScriptUtility.isNullOrUndefined(this.$9_0)) {
            var $v_0 = SP.Application.UI.DefaultFormsMenuBuilder.$3n_0(this.$G_0, this.$1u_0);
            this.$9_0.onDefaultFormsInformationRetrieveSuccess($v_0);
        }
        this.$9_0 = null;
    },

    $48_0: function($p0, $p1) {
        if ($p1 && !SP.ScriptUtility.isNullOrUndefined($p1.get_message())) {}
        if (!SP.ScriptUtility.isNullOrUndefined(this.$9_0)) {
            this.$9_0.onDefaultFormsInformationRetrieveFailure();
        }
        this.$9_0 = null;
    }
}


SP.Application.UI.BrowserUtility = function() {}
SP.Application.UI.BrowserUtility.$3x = function() {
    ULS5Vl: ;
    return Sys.Browser.agent === Sys.Browser.Firefox || Sys.Browser.name.toLowerCase().indexOf('firefox') !== -1;
}


SP.Application.UI.ViewSelectorGroups = function() {}
SP.Application.UI.ViewSelectorGroups.prototype = {
    ModeratedViews: null,
    PublicViews: null,
    PersonalViews: null,
    OtherViews: null,
    DefaultView: null,
    ViewCreation: null
}


SP.Application.UI.ViewSelectorMenuItem = function() {
    ULS5Vl: ;
    this.Sequence = Number.MAX_VALUE;
}
SP.Application.UI.ViewSelectorMenuItem.prototype = {
    Text: '',
    ActionScriptText: '',
    NavigateUrl: '',
    ImageSourceUrl: '',
    Description: '',
    Id: '',
    ItemType: '',
    GroupId: 0
}


SP.Application.UI.ViewSelectorSubMenu = function() {}
SP.Application.UI.ViewSelectorSubMenu.prototype = {
    Text: '',
    ImageSourceUrl: '',
    SubMenuItems: null
}


SP.Application.UI.ServerMenus = function() {
    ULS5Vl: ;
    this.MenuItems = [];
}


SP.Application.UI.ViewSelectorMenuBuilder = function(elem, options) {
    ULS5Vl: ;
    this.$1W = Function.createDelegate(this, this.$3k_0);
    this.$1X = Function.createDelegate(this, this.$3l_0);
    this.$R_0 = elem;
    this.$a_0 = new SP.Guid(options.listId);
    this.$2L_0 = new SP.Guid(options.viewId);
    this.$3R_0 = options.viewParameters;
    this.$16_0 = options;
}
SP.Application.UI.ViewSelectorMenuBuilder.showMenu = function(elem, options) {
    ULS5Vl: ;
    var $v_0 = elem._menu;
    if ($v_0) {
        $v_0.show(elem, false, false, -1);
        return;
    }
    var $v_1 = new SP.Application.UI.ViewSelectorMenuBuilder(elem, options);
    $v_1.$3g_0();
}
SP.Application.UI.ViewSelectorMenuBuilder.getViewInformation = function(requestor, options) {
    ULS5Vl: ;
    var $v_0 = new SP.Application.UI.ViewSelectorMenuBuilder(null, options);
    $v_0.$2z_0(requestor);
}
SP.Application.UI.ViewSelectorMenuBuilder.prototype = {
    $R_0: null,
    $a_0: null,
    $2L_0: null,
    $16_0: null,
    $3R_0: null,
    $9_0: null,
    $t_0: false,

    $2w_0: function($p0, $p1) {
        var $v_0 = SP.PageContextInfo.get_webServerRelativeUrl();
        var $v_1 = new SP.Utilities.UrlBuilder($v_0);
        $v_1.combinePath('_layouts/vsmenu.aspx');
        $v_1.addKeyValueQueryString('List', this.$a_0.toString('B'));
        $v_1.addKeyValueQueryString('View', this.$2L_0.toString('B'));
        $v_1.addKeyValueQueryString('Source', window.location.href);
        var $v_2 = $v_1.get_url();
        $v_2 += '&' + this.$16_0.viewParameters;
        SP.PageRequest.doGet($v_2, 'application/json', $p0, $p1);
    },

    $3g_0: function() {
        ULS5Vl: ;
        this.$t_0 = true;
        this.$2w_0(this.$1X, this.$1W);
    },

    $2z_0: function($p0) {
        this.$t_0 = false;
        this.$9_0 = $p0;
        this.$2w_0(this.$1X, this.$1W);
    },

    $3l_0: function($p0, $p1) {
        var $v_0 = new SP.Application.UI.ServerMenus();
        $v_0.MenuItems = (eval($p1.get_executor().get_responseData()));
        if (this.$9_0) {
            var $v_1 = this.$3i_0($v_0.MenuItems);
            this.$9_0.onViewInformationReturned($v_1);
            this.$9_0 = null;
        }
        if (this.$R_0 && this.$t_0) {
            this.$3h_0(this.$R_0, $v_0.MenuItems);
            this.$t_0 = false;
        }
        this.$R_0 = null;
        this.$a_0 = null;
        this.$2L_0 = null;
        this.$3R_0 = null;
    },

    $3h_0: function($p0, $p1) {
        var $v_0 = $p0.id;
        if (SP.ScriptUtility.isNullOrEmptyString($v_0)) {
            $v_0 = SP.UI.UIUtility.generateRandomElementId();
        }
        $v_0 = $v_0 + '_menu';
        var $v_1 = SP.UI.Menu.create($v_0);
        this.$3d_0($v_1, $p1);
        this.$R_0._menu = $v_1;
        $v_1.show(this.$R_0, false, false, -1);
    },

    $3d_0: function($p0, $p1) {
        var $v_0 = null;
        var $v_1 = false;
        var $v_2 = SP.Application.UI.BrowserUtility.$3x();
        for (var $v_3 = 0; $v_3 < $p1.length; $v_3++) {
            var $v_4 = $p1[$v_3];
            var $v_5 = $v_4.ItemType;
            if ($v_5 === 'SubMenu') {
                $v_1 = true;
                if (!$v_2) {
                    $v_0 = $p0.addSubMenu($v_4.Text, $v_4.ImageSourceUrl, null, $v_4.Sequence, $v_4.Description, $v_4.Id);
                }
            } else if ($v_5 === 'MenuItem') {
                if ($v_1) {
                    if (!$v_2) {
                        this.$2s_0($v_0, $v_4);
                    }
                } else {
                    this.$2s_0($p0, $v_4);
                }
            } else if ($v_5 === 'SubMenuEnd') {
                $v_1 = false;
            } else if ($v_5 === 'MenuSeparator') {
                if ($v_1) {
                    if (!$v_2) {
                        $v_0.addSeparator();
                    }
                } else {
                    $p0.addSeparator();
                }
            }
        }
    },

    $2s_0: function($p0, $p1) {
        $p0.addMenuItem($p1.Text, $p1.ActionScriptText, $p1.ImageSourceUrl, null, $p1.Sequence, $p1.Description, $p1.Id);
    },

    $3i_0: function($p0) {
        var $v_0 = new SP.Application.UI.ViewSelectorGroups();
        $v_0.ModeratedViews = [];
        $v_0.PublicViews = [];
        $v_0.PersonalViews = [];
        $v_0.OtherViews = [];
        $v_0.DefaultView = null;
        $v_0.ViewCreation = [];
        var $v_1 = null;
        var $v_2 = false;
        for (var $v_3 = 0; $v_3 < $p0.length; $v_3++) {
            var $v_4 = $p0[$v_3];
            var $v_5 = $v_4.ItemType;
            var $v_6 = $v_4.GroupId;
            if ($v_5 === 'SubMenu') {
                $v_2 = true;
                $v_1 = new SP.Application.UI.ViewSelectorSubMenu();
                $v_1.Text = $v_4.Text;
                $v_1.ImageSourceUrl = $v_4.ImageSourceUrl;
                $v_1.SubMenuItems = [];
                switch ($v_6) {
                    case 300:
                        Array.add($v_0.PublicViews, $v_1);
                        break;
                    case 200:
                        Array.add($v_0.PersonalViews, $v_1);
                        break;
                    case 400:
                        Array.add($v_0.ModeratedViews, $v_1);
                        break;
                    case 500:
                        Array.add($v_0.ViewCreation, $v_1);
                        break;
                    default:
                        Array.add($v_0.OtherViews, $v_1);
                        break;
                }
            } else if ($v_5 === 'SubMenuEnd') {
                $v_2 = false;
            } else if ($v_5 === 'MenuSeparator') {
                continue;
            } else {
                if ($v_2) {
                    Array.add($v_1.SubMenuItems, $v_4);
                } else {
                    switch ($v_6) {
                        case 300:
                            Array.add($v_0.PublicViews, $v_4);
                            break;
                        case 100:
                            $v_0.DefaultView = $v_4;
                            break;
                        case 500:
                            if ($v_4.Id === 'CreateView') {
                                if (this.$16_0.showCreateView) {
                                    Array.add($v_0.ViewCreation, $v_4);
                                }
                            } else if ($v_4.Id === 'ModifyView') {
                                if (this.$16_0.showEditView) {
                                    Array.add($v_0.ViewCreation, $v_4);
                                }
                            }
                            break;
                        case 200:
                            Array.add($v_0.PersonalViews, $v_4);
                            break;
                        case 400:
                            Array.add($v_0.ModeratedViews, $v_4);
                            break;
                        default:
                            Array.add($v_0.OtherViews, $v_4);
                            break;
                    }
                }
            }
        }
        return $v_0;
    },

    $3k_0: function($p0, $p1) {}
}


SP.Application.UI.MoreColorsPicker = function(e) {
    ULS5Vl: ;
    this.$2b = Function.createDelegate(this, this.$42_2);
    this.$2c = Function.createDelegate(this, this.$43_2);
    SP.Application.UI.MoreColorsPicker.initializeBase(this, [e]);
}
SP.Application.UI.MoreColorsPicker.$3r_2 = function() {
    ULS5Vl: ;
    if (SP.Application.UI.MoreColorsPicker.$Z_2) {
        return;
    }
    SP.Application.UI.MoreColorsPicker.$Z_2 = [new SP.Application.UI.MappedColor('#003366', new Sys.UI.Point(42, 3)), new SP.Application.UI.MappedColor('#336699', new Sys.UI.Point(56, 3)), new SP.Application.UI.MappedColor('#3366CC', new Sys.UI.Point(70, 3)), new SP.Application.UI.MappedColor('#003399', new Sys.UI.Point(84, 3)), new SP.Application.UI.MappedColor('#000099', new Sys.UI.Point(98, 3)), new SP.Application.UI.MappedColor('#0000CC', new Sys.UI.Point(112, 3)), new SP.Application.UI.MappedColor('#000066', new Sys.UI.Point(126, 3)), new SP.Application.UI.MappedColor('#006666', new Sys.UI.Point(35, 15)), new SP.Application.UI.MappedColor('#006699', new Sys.UI.Point(49, 15)), new SP.Application.UI.MappedColor('#0099CC', new Sys.UI.Point(63, 15)), new SP.Application.UI.MappedColor('#0066CC', new Sys.UI.Point(77, 15)), new SP.Application.UI.MappedColor('#0033CC', new Sys.UI.Point(91, 15)), new SP.Application.UI.MappedColor('#0000FF', new Sys.UI.Point(105, 15)), new SP.Application.UI.MappedColor('#3333FF', new Sys.UI.Point(119, 15)), new SP.Application.UI.MappedColor('#333399', new Sys.UI.Point(133, 15)), new SP.Application.UI.MappedColor('#008080', new Sys.UI.Point(28, 27)), new SP.Application.UI.MappedColor('#009999', new Sys.UI.Point(42, 27)), new SP.Application.UI.MappedColor('#33CCCC', new Sys.UI.Point(56, 27)), new SP.Application.UI.MappedColor('#00CCFF', new Sys.UI.Point(70, 27)), new SP.Application.UI.MappedColor('#0099FF', new Sys.UI.Point(84, 27)), new SP.Application.UI.MappedColor('#0066FF', new Sys.UI.Point(98, 27)), new SP.Application.UI.MappedColor('#3366FF', new Sys.UI.Point(112, 27)), new SP.Application.UI.MappedColor('#3333CC', new Sys.UI.Point(126, 27)), new SP.Application.UI.MappedColor('#666699', new Sys.UI.Point(140, 27)), new SP.Application.UI.MappedColor('#339966', new Sys.UI.Point(21, 39)), new SP.Application.UI.MappedColor('#00CC99', new Sys.UI.Point(35, 39)), new SP.Application.UI.MappedColor('#00FFCC', new Sys.UI.Point(49, 39)), new SP.Application.UI.MappedColor('#00FFFF', new Sys.UI.Point(63, 39)), new SP.Application.UI.MappedColor('#33CCFF', new Sys.UI.Point(77, 39)), new SP.Application.UI.MappedColor('#3399FF', new Sys.UI.Point(91, 39)), new SP.Application.UI.MappedColor('#6699FF', new Sys.UI.Point(105, 39)), new SP.Application.UI.MappedColor('#6666FF', new Sys.UI.Point(119, 39)), new SP.Application.UI.MappedColor('#6600FF', new Sys.UI.Point(133, 39)), new SP.Application.UI.MappedColor('#6600CC', new Sys.UI.Point(147, 39)), new SP.Application.UI.MappedColor('#339933', new Sys.UI.Point(14, 51)), new SP.Application.UI.MappedColor('#00CC66', new Sys.UI.Point(28, 51)), new SP.Application.UI.MappedColor('#00FF99', new Sys.UI.Point(42, 51)), new SP.Application.UI.MappedColor('#66FFCC', new Sys.UI.Point(56, 51)), new SP.Application.UI.MappedColor('#66FFFF', new Sys.UI.Point(70, 51)), new SP.Application.UI.MappedColor('#66CCFF', new Sys.UI.Point(84, 51)), new SP.Application.UI.MappedColor('#99CCFF', new Sys.UI.Point(98, 51)), new SP.Application.UI.MappedColor('#9999FF', new Sys.UI.Point(112, 51)), new SP.Application.UI.MappedColor('#9966FF', new Sys.UI.Point(126, 51)), new SP.Application.UI.MappedColor('#9933FF', new Sys.UI.Point(140, 51)), new SP.Application.UI.MappedColor('#9900FF', new Sys.UI.Point(154, 51)), new SP.Application.UI.MappedColor('#006600', new Sys.UI.Point(7, 63)), new SP.Application.UI.MappedColor('#00CC00', new Sys.UI.Point(21, 63)), new SP.Application.UI.MappedColor('#00FF00', new Sys.UI.Point(35, 63)), new SP.Application.UI.MappedColor('#66FF99', new Sys.UI.Point(49, 63)), new SP.Application.UI.MappedColor('#99FFCC', new Sys.UI.Point(63, 63)), new SP.Application.UI.MappedColor('#CCFFFF', new Sys.UI.Point(77, 63)), new SP.Application.UI.MappedColor('#CCECFF', new Sys.UI.Point(91, 63)), new SP.Application.UI.MappedColor('#CCCCFF', new Sys.UI.Point(105, 63)), new SP.Application.UI.MappedColor('#CC99FF', new Sys.UI.Point(119, 63)), new SP.Application.UI.MappedColor('#CC66FF', new Sys.UI.Point(133, 63)), new SP.Application.UI.MappedColor('#CC00FF', new Sys.UI.Point(147, 63)), new SP.Application.UI.MappedColor('#9900CC', new Sys.UI.Point(161, 63)), new SP.Application.UI.MappedColor('#003300', new Sys.UI.Point(0, 75)), new SP.Application.UI.MappedColor('#008000', new Sys.UI.Point(14, 75)), new SP.Application.UI.MappedColor('#33CC33', new Sys.UI.Point(28, 75)), new SP.Application.UI.MappedColor('#66FF66', new Sys.UI.Point(42, 75)), new SP.Application.UI.MappedColor('#99FF99', new Sys.UI.Point(56, 75)), new SP.Application.UI.MappedColor('#CCFFCC', new Sys.UI.Point(70, 75)), new SP.Application.UI.MappedColor('#FFFFFF', new Sys.UI.Point(84, 75)), new SP.Application.UI.MappedColor('#FFCCFF', new Sys.UI.Point(98, 75)), new SP.Application.UI.MappedColor('#FF99FF', new Sys.UI.Point(112, 75)), new SP.Application.UI.MappedColor('#FF66FF', new Sys.UI.Point(126, 75)), new SP.Application.UI.MappedColor('#FF00FF', new Sys.UI.Point(140, 75)), new SP.Application.UI.MappedColor('#CC00CC', new Sys.UI.Point(154, 75)), new SP.Application.UI.MappedColor('#660066', new Sys.UI.Point(168, 75)), new SP.Application.UI.MappedColor('#336600', new Sys.UI.Point(7, 87)), new SP.Application.UI.MappedColor('#009900', new Sys.UI.Point(21, 87)), new SP.Application.UI.MappedColor('#66FF33', new Sys.UI.Point(35, 87)), new SP.Application.UI.MappedColor('#99FF66', new Sys.UI.Point(49, 87)), new SP.Application.UI.MappedColor('#CCFF99', new Sys.UI.Point(63, 87)), new SP.Application.UI.MappedColor('#FFFFCC', new Sys.UI.Point(77, 87)), new SP.Application.UI.MappedColor('#FFCCCC', new Sys.UI.Point(91, 87)), new SP.Application.UI.MappedColor('#FF99CC', new Sys.UI.Point(105, 87)), new SP.Application.UI.MappedColor('#FF66CC', new Sys.UI.Point(119, 87)), new SP.Application.UI.MappedColor('#FF33CC', new Sys.UI.Point(133, 87)), new SP.Application.UI.MappedColor('#CC0099', new Sys.UI.Point(147, 87)), new SP.Application.UI.MappedColor('#800080', new Sys.UI.Point(161, 87)), new SP.Application.UI.MappedColor('#333300', new Sys.UI.Point(14, 99)), new SP.Application.UI.MappedColor('#669900', new Sys.UI.Point(28, 99)), new SP.Application.UI.MappedColor('#99FF33', new Sys.UI.Point(42, 99)), new SP.Application.UI.MappedColor('#CCFF66', new Sys.UI.Point(56, 99)), new SP.Application.UI.MappedColor('#FFFF99', new Sys.UI.Point(70, 99)), new SP.Application.UI.MappedColor('#FFCC99', new Sys.UI.Point(84, 99)), new SP.Application.UI.MappedColor('#FF9999', new Sys.UI.Point(98, 99)), new SP.Application.UI.MappedColor('#FF6699', new Sys.UI.Point(112, 99)), new SP.Application.UI.MappedColor('#FF3399', new Sys.UI.Point(126, 99)), new SP.Application.UI.MappedColor('#CC3399', new Sys.UI.Point(140, 99)), new SP.Application.UI.MappedColor('#990099', new Sys.UI.Point(154, 99)), new SP.Application.UI.MappedColor('#666633', new Sys.UI.Point(21, 111)), new SP.Application.UI.MappedColor('#99CC00', new Sys.UI.Point(35, 111)), new SP.Application.UI.MappedColor('#CCFF33', new Sys.UI.Point(49, 111)), new SP.Application.UI.MappedColor('#FFFF66', new Sys.UI.Point(63, 111)), new SP.Application.UI.MappedColor('#FFCC66', new Sys.UI.Point(77, 111)), new SP.Application.UI.MappedColor('#FF9966', new Sys.UI.Point(91, 111)), new SP.Application.UI.MappedColor('#FF7C80', new Sys.UI.Point(105, 111)), new SP.Application.UI.MappedColor('#FF0066', new Sys.UI.Point(119, 111)), new SP.Application.UI.MappedColor('#D60093', new Sys.UI.Point(133, 111)), new SP.Application.UI.MappedColor('#993366', new Sys.UI.Point(147, 111)), new SP.Application.UI.MappedColor('#808000', new Sys.UI.Point(28, 123)), new SP.Application.UI.MappedColor('#CCCC00', new Sys.UI.Point(42, 123)), new SP.Application.UI.MappedColor('#FFFF00', new Sys.UI.Point(56, 123)), new SP.Application.UI.MappedColor('#FFCC00', new Sys.UI.Point(70, 123)), new SP.Application.UI.MappedColor('#FF9933', new Sys.UI.Point(84, 123)), new SP.Application.UI.MappedColor('#FF6600', new Sys.UI.Point(98, 123)), new SP.Application.UI.MappedColor('#FF5050', new Sys.UI.Point(112, 123)), new SP.Application.UI.MappedColor('#CC0066', new Sys.UI.Point(126, 123)), new SP.Application.UI.MappedColor('#660033', new Sys.UI.Point(140, 123)), new SP.Application.UI.MappedColor('#996633', new Sys.UI.Point(35, 135)), new SP.Application.UI.MappedColor('#CC9900', new Sys.UI.Point(49, 135)), new SP.Application.UI.MappedColor('#FF9900', new Sys.UI.Point(63, 135)), new SP.Application.UI.MappedColor('#CC6600', new Sys.UI.Point(77, 135)), new SP.Application.UI.MappedColor('#FF3300', new Sys.UI.Point(91, 135)), new SP.Application.UI.MappedColor('#FF0000', new Sys.UI.Point(105, 135)), new SP.Application.UI.MappedColor('#CC0000', new Sys.UI.Point(119, 135)), new SP.Application.UI.MappedColor('#990033', new Sys.UI.Point(133, 135)), new SP.Application.UI.MappedColor('#663300', new Sys.UI.Point(42, 147)), new SP.Application.UI.MappedColor('#996600', new Sys.UI.Point(56, 147)), new SP.Application.UI.MappedColor('#CC3300', new Sys.UI.Point(70, 147)), new SP.Application.UI.MappedColor('#993300', new Sys.UI.Point(84, 147)), new SP.Application.UI.MappedColor('#990000', new Sys.UI.Point(98, 147)), new SP.Application.UI.MappedColor('#800000', new Sys.UI.Point(112, 147)), new SP.Application.UI.MappedColor('#A50021', new Sys.UI.Point(126, 147)), new SP.Application.UI.MappedColor('#F8F8F8', new Sys.UI.Point(35, 175)), new SP.Application.UI.MappedColor('#DDDDDD', new Sys.UI.Point(49, 175)), new SP.Application.UI.MappedColor('#B2B2B2', new Sys.UI.Point(63, 175)), new SP.Application.UI.MappedColor('#808080', new Sys.UI.Point(77, 175)), new SP.Application.UI.MappedColor('#5F5F5F', new Sys.UI.Point(91, 175)), new SP.Application.UI.MappedColor('#333333', new Sys.UI.Point(105, 175)), new SP.Application.UI.MappedColor('#1C1C1C', new Sys.UI.Point(119, 175)), new SP.Application.UI.MappedColor('#080808', new Sys.UI.Point(133, 175)), new SP.Application.UI.MappedColor('#EAEAEA', new Sys.UI.Point(42, 187)), new SP.Application.UI.MappedColor('#C0C0C0', new Sys.UI.Point(56, 187)), new SP.Application.UI.MappedColor('#969696', new Sys.UI.Point(70, 187)), new SP.Application.UI.MappedColor('#777777', new Sys.UI.Point(84, 187)), new SP.Application.UI.MappedColor('#4D4D4D', new Sys.UI.Point(98, 187)), new SP.Application.UI.MappedColor('#292929', new Sys.UI.Point(112, 187)), new SP.Application.UI.MappedColor('#111111', new Sys.UI.Point(126, 187))];
}
SP.Application.UI.MoreColorsPicker.prototype = {
    $1Q_2: null,
    $2u_2: false,
    $J_2: null,
    $3T_2: null,
    $2O_2: null,
    $2Q_2: null,
    $1g_2: null,
    $1h_2: null,

    initialize: function() {
        ULS5Vl: ;
        SP.Application.UI.MoreColorsPicker.callBaseMethod(this, 'initialize');
        this.$1Q_2 = this.get_element().getElementsByTagName('map')[0];
        this.$3T_2 = this.get_element().getElementsByTagName('input')[0];
        this.$J_2 = this.get_element().getElementsByTagName('input')[1];
        this.$J_2.focus();
        this.$1h_2 = this.$2c;
        $addHandler(this.$J_2, 'blur', this.$1h_2);
        var $v_0 = this.get_element().getElementsByTagName('div');
        for (var $v_1 = 0; $v_1 < $v_0.length; ++$v_1) {
            if (Sys.UI.DomElement.containsCssClass($v_0[$v_1], 'new')) {
                this.$2O_2 = $v_0[$v_1];
            } else if (Sys.UI.DomElement.containsCssClass($v_0[$v_1], 'old')) {
                this.$2Q_2 = $v_0[$v_1];
            }
        }
        this.$1g_2 = this.$2b;
        SP.Application.UI.MoreColorsPicker.$3r_2();
        if (!this.$1Q_2.getElementsByTagName('area').length) {
            for (var $v_3 = 0; $v_3 < SP.Application.UI.MoreColorsPicker.$Z_2.length; ++$v_3) {
                this.$31_2(SP.Application.UI.MoreColorsPicker.$Z_2[$v_3]);
            }
            var $v_2 = new SP.Application.UI.MappedColor('#000000', new Sys.UI.Point(154, 175));
            $v_2.$o_0 = true;
            this.$31_2($v_2);
        }
    },

    $31_2: function($p0) {
        var $v_0 = document.createElement('area');
        $v_0.setAttribute('alt', $p0.$m_0.toString());
        $v_0.setAttribute('value', $p0.$m_0.toString());
        $v_0.setAttribute('shape', 'poly');
        $v_0.setAttribute('coords', $p0.buildCoordsAttributeValue());
        $v_0.setAttribute('href', '#');
        $addHandler($v_0, 'click', this.$1g_2);
        this.$1Q_2.appendChild($v_0);
    },

    dispose: function() {
        ULS5Vl: ;
        try {
            $removeHandler(this.$J_2, 'blur', this.$1h_2);
            var $v_0 = this.$1Q_2.getElementsByTagName('area');
            for (var $v_1 = 0; $v_1 < $v_0.length; ++$v_1) {
                $removeHandler($v_0[$v_1], 'click', this.$1g_2);
            }
        } finally {
            SP.Application.UI.MoreColorsPicker.callBaseMethod(this, 'dispose');
        }
    },

    $43_2: function($p0) {
        this.set_colorValue(this.$J_2.value);
    },

    $42_2: function($p0) {
        var $v_0 = $p0.target;
        this.set_colorValue($v_0.getAttribute('value'));
        $p0.preventDefault();
    },

    get_colorValue: function() {
        ULS5Vl: ;
        return this.$J_2.value;
    },
    set_colorValue: function(value) {
        ULS5Vl: ;
        if (!this.$2u_2) {
            this.$2Q_2.style.backgroundColor = value;
            this.$2Q_2.title = value;
            this.$3T_2.value = value;
            this.$2u_2 = true;
        }
        this.$2O_2.style.backgroundColor = value;
        this.$2O_2.title = value;
        this.$J_2.value = value;
        this.raisePropertyChanged('colorValue');
        return value;
    }
}


SP.Application.UI.MappedColor = function(hexColor, position) {
    ULS5Vl: ;
    this.$m_0 = hexColor;
    this.$f_0 = position;
}
SP.Application.UI.MappedColor.$3s_0 = function() {
    ULS5Vl: ;
    if (SP.Application.UI.MappedColor.$P_0) {
        return;
    }
    SP.Application.UI.MappedColor.$P_0 = [new Sys.UI.Point(0, 0), new Sys.UI.Point(2, 0), new Sys.UI.Point(2, -1), new Sys.UI.Point(4, -1), new Sys.UI.Point(4, -2), new Sys.UI.Point(6, -2), new Sys.UI.Point(6, -3), new Sys.UI.Point(8, -3), new Sys.UI.Point(8, -2), new Sys.UI.Point(10, -2), new Sys.UI.Point(10, -1), new Sys.UI.Point(12, -1), new Sys.UI.Point(12, 0), new Sys.UI.Point(13, 0), new Sys.UI.Point(13, 8), new Sys.UI.Point(12, 8), new Sys.UI.Point(12, 9), new Sys.UI.Point(10, 9), new Sys.UI.Point(10, 10), new Sys.UI.Point(8, 10), new Sys.UI.Point(8, 11), new Sys.UI.Point(6, 11), new Sys.UI.Point(6, 10), new Sys.UI.Point(4, 10), new Sys.UI.Point(4, 9), new Sys.UI.Point(2, 9), new Sys.UI.Point(2, 8), new Sys.UI.Point(0, 8)];
}
SP.Application.UI.MappedColor.$3u_0 = function() {
    ULS5Vl: ;
    if (SP.Application.UI.MappedColor.$p_0) {
        return;
    }
    SP.Application.UI.MappedColor.$p_0 = [new Sys.UI.Point(0, 0), new Sys.UI.Point(2, 0), new Sys.UI.Point(2, -1), new Sys.UI.Point(4, -1), new Sys.UI.Point(4, -2), new Sys.UI.Point(6, -2), new Sys.UI.Point(6, -3), new Sys.UI.Point(7, -3), new Sys.UI.Point(7, -4), new Sys.UI.Point(9, -4), new Sys.UI.Point(9, -5), new Sys.UI.Point(11, -5), new Sys.UI.Point(11, -6), new Sys.UI.Point(13, -6), new Sys.UI.Point(13, -7), new Sys.UI.Point(15, -7), new Sys.UI.Point(15, -6), new Sys.UI.Point(17, -6), new Sys.UI.Point(17, -5), new Sys.UI.Point(19, -5), new Sys.UI.Point(19, -4), new Sys.UI.Point(20, -4), new Sys.UI.Point(20, -3), new Sys.UI.Point(22, -3), new Sys.UI.Point(22, -2), new Sys.UI.Point(24, -2), new Sys.UI.Point(24, -1), new Sys.UI.Point(26, -1), new Sys.UI.Point(26, 0), new Sys.UI.Point(27, 0), new Sys.UI.Point(27, 16), new Sys.UI.Point(26, 16), new Sys.UI.Point(26, 17), new Sys.UI.Point(24, 17), new Sys.UI.Point(24, 18), new Sys.UI.Point(22, 18), new Sys.UI.Point(22, 19), new Sys.UI.Point(20, 19), new Sys.UI.Point(20, 20), new Sys.UI.Point(19, 20), new Sys.UI.Point(19, 21), new Sys.UI.Point(17, 21), new Sys.UI.Point(17, 22), new Sys.UI.Point(15, 22), new Sys.UI.Point(15, 23), new Sys.UI.Point(13, 23), new Sys.UI.Point(13, 22), new Sys.UI.Point(11, 22), new Sys.UI.Point(11, 21), new Sys.UI.Point(9, 21), new Sys.UI.Point(9, 20), new Sys.UI.Point(7, 20), new Sys.UI.Point(7, 19), new Sys.UI.Point(6, 19), new Sys.UI.Point(6, 18), new Sys.UI.Point(4, 18), new Sys.UI.Point(4, 17), new Sys.UI.Point(2, 17), new Sys.UI.Point(2, 16), new Sys.UI.Point(0, 16)];
}
SP.Application.UI.MappedColor.prototype = {
    $m_0: null,
    $f_0: null,
    $o_0: false,

    get_hexColor: function() {
        ULS5Vl: ;
        return this.$m_0;
    },

    get_isLarge: function() {
        ULS5Vl: ;
        return this.$o_0;
    },
    set_isLarge: function($p0) {
        this.$o_0 = $p0;
        return $p0;
    },

    buildCoordsAttributeValue: function() {
        ULS5Vl: ;
        SP.Application.UI.MappedColor.$3s_0();
        SP.Application.UI.MappedColor.$3u_0();
        var $v_0 = '';
        if (SP.Application.UI.MappedColor.$P_0.length > 0) {
            var $v_1 = SP.Application.UI.MappedColor.$P_0[0];
            $v_0 += ($v_1.x + this.$f_0.x).toString() + ',' + ($v_1.y + this.$f_0.y).toString();
            var $v_2 = (this.$o_0) ? SP.Application.UI.MappedColor.$p_0 : SP.Application.UI.MappedColor.$P_0;
            for (var $v_3 = 1; $v_3 < $v_2.length; ++$v_3) {
                $v_1 = $v_2[$v_3];
                $v_0 += ' ' + ($v_1.x + this.$f_0.x).toString() + ',' + ($v_1.y + this.$f_0.y).toString();
            }
        }
        return $v_0;
    }
}


SP.Application.UI.MoreColorsPage = function(e) {
    ULS5Vl: ;
    this.$2Z = Function.createDelegate(this, this.$40_2);
    this.$2g = Function.createDelegate(this, this.$45_2);
    this.$2h = Function.createDelegate(this, this.$46_2);
    SP.Application.UI.MoreColorsPage.initializeBase(this, [e]);
}
SP.Application.UI.MoreColorsPage.prototype = {
    $e_2: null,
    $1P_2: null,
    $1e_2: null,
    $3X_2: null,
    $2P_2: null,
    $2t_2: null,

    initialize: function() {
        ULS5Vl: ;
        SP.Application.UI.MoreColorsPage.callBaseMethod(this, 'initialize');
        this.$1P_2 = $get('OkButton');
        this.$1e_2 = $get('CancelButton');
        this.$3X_2 = this.$2h;
        this.$e_2.add_propertyChanged(this.$3X_2);
        var $v_0 = window.self.frameElement;
        if ($v_0) {
            var $v_1 = $v_0.dialogArgs;
            if ($v_1) {
                this.$e_2.set_colorValue($v_1);
            }
        }
        this.$1P_2.setAttribute('onclick', '');
        this.$2P_2 = this.$2g;
        $addHandler(this.$1P_2, 'click', this.$2P_2);
        this.$1e_2.setAttribute('onclick', '');
        this.$2t_2 = this.$2Z;
        $addHandler(this.$1e_2, 'click', this.$2t_2);
    },

    dispose: function() {
        ULS5Vl: ;
        try {
            $removeHandler(this.$1P_2, 'click', this.$2P_2);
        } finally {
            SP.Application.UI.MoreColorsPage.callBaseMethod(this, 'dispose');
        }
    },

    $46_2: function($p0, $p1) {
        if ($p1.get_propertyName() === 'colorValue' && SP.UI.ModalDialog.get_childDialog()) {
            SP.UI.ModalDialog.get_childDialog().set_returnValue(this.$e_2.get_colorValue());
        }
    },

    $45_2: function($p0) {
        $p0.preventDefault();
        $p0.stopPropagation();
        if (SP.UI.ModalDialog.get_childDialog()) {
            SP.UI.ModalDialog.get_childDialog().close(1);
        }
    },

    $40_2: function($p0) {
        $p0.preventDefault();
        $p0.stopPropagation();
        if (SP.UI.ModalDialog.get_childDialog()) {
            SP.UI.ModalDialog.get_childDialog().close(0);
        }
    },

    get_moreColorsPicker: function() {
        ULS5Vl: ;
        return this.$e_2;
    },
    set_moreColorsPicker: function(value) {
        ULS5Vl: ;
        this.$e_2 = value;
        return value;
    }
}


SP.Application.UI.ThemeWebPage = function(e) {
    ULS5Vl: ;
    this.$2k = Function.createDelegate(this, this.onThemeSelectionChanged);
    this.$l_2 = new Sys.EventHandlerList();
    SP.Application.UI.ThemeWebPage.initializeBase(this, [e]);
}
SP.Application.UI.ThemeWebPage.prototype = {
    $h_2: null,
    $1V_2: null,
    $2W_2: null,

    add_themeDisplayUpdated: function(value) {
        ULS5Vl: ;
        this.$l_2.addHandler('__ThemeDisplayUpdated', value);
    },
    remove_themeDisplayUpdated: function(value) {
        ULS5Vl: ;
        this.$l_2.removeHandler('__ThemeDisplayUpdated', value);
    },

    $4C_2: function() {
        ULS5Vl: ;
        var $v_0 = this.$l_2.getHandler('__ThemeDisplayUpdated');
        if ($v_0) {
            $v_0(null, Sys.EventArgs.Empty);
        }
    },

    initialize: function() {
        ULS5Vl: ;
        SP.Application.UI.ThemeWebPage.callBaseMethod(this, 'initialize');
        this.$1V_2 = $get('theme-display');
        this.$2W_2 = this.$2k;
        $addHandler(this.$h_2, 'change', this.$2W_2);
    },

    dispose: function() {
        ULS5Vl: ;
        try {
            $removeHandler(this.$h_2, 'change', this.$2W_2);
        } finally {
            SP.Application.UI.ThemeWebPage.callBaseMethod(this, 'dispose');
        }
    },

    onThemeSelectionChanged: function(evt) {
        ULS5Vl: ;
        this.updateThemeDisplay();
    },

    updateThemeDisplay: function() {
        ULS5Vl: ;
        var $v_0 = window.themes[this.$h_2.value];
        var $v_1 = this.$1V_2.getElementsByTagName('li');
        for (var $v_5 = 0; $v_5 < $v_1.length; ++$v_5) {
            if (Sys.UI.DomElement.containsCssClass($v_1[$v_5], 'color')) {
                var $v_6 = null;
                if ($v_0) {
                    $v_6 = $v_0[$v_1[$v_5].getAttribute('themecolor')].Shades;
                }
                var $v_7 = $v_1[$v_5].getElementsByTagName('li');
                for (var $v_8 = 0; $v_8 < $v_7.length; ++$v_8) {
                    if ($v_6) {
                        $v_7[$v_8].style.backgroundColor = $v_6[$v_8].HtmlColor;
                    } else {
                        $v_7[$v_8].style.backgroundColor = '';
                    }
                }
            }
        }
        var $v_2 = this.$1V_2.getElementsByTagName('a');
        $v_2[0].style.color = ($v_0) ? $v_0.HyperlinkColor.DefaultColor.HtmlColor : '';
        $v_2[1].style.color = ($v_0) ? $v_0.FollowedHyperlinkColor.DefaultColor.HtmlColor : '';
        var $v_3 = this.$1V_2.getElementsByTagName('li');
        $v_3[$v_3.length - 2].style.fontFamily = ($v_0) ? $v_0.MajorFont.LatinFont : '';
        $v_3[$v_3.length - 1].style.fontFamily = ($v_0) ? $v_0.MinorFont.LatinFont : '';
        var $v_4 = $get('accdesc');
        if (null !== $v_4) {
            $v_4.innerHTML = ($v_0) ? SP.Utilities.HttpUtility.htmlEncode($v_0.AccessibleDescription) : '';
        }
        this.$4C_2();
    },

    get_thmxThemes: function() {
        ULS5Vl: ;
        return this.$h_2;
    },
    set_thmxThemes: function(value) {
        ULS5Vl: ;
        this.$h_2 = value;
        return value;
    }
}


SP.Application.UI.WikiPageNameInPlaceEditor = function(ownerDoc, displayElemId, editElemId, editTextBoxId) {
    ULS5Vl: ;
    this.$2a = Function.createDelegate(this, this.$41_0);
    this.$2l = Function.createDelegate(this, this.$4A_0);
    this.$2d = Function.createDelegate(this, this.$44_0);
    this.$18_0 = ownerDoc;
    this.$D_0 = this.$18_0.getElementById(displayElemId);
    this.$1y_0 = this.$18_0.getElementById(editElemId);
    this.$Q_0 = this.$18_0.getElementById(editTextBoxId);
    this.$3B_0 = this.$2d;
    this.$3P_0 = this.$2l;
    this.$34_0 = this.$2a;
}
SP.Application.UI.WikiPageNameInPlaceEditor.prototype = {
    $18_0: null,
    $D_0: null,
    $1y_0: null,
    $Q_0: null,
    $3G_0: null,
    $39_0: false,
    $3B_0: null,
    $3P_0: null,
    $34_0: null,

    editingPageCallback: function() {
        ULS5Vl: ;
        this.$3G_0 = this.$Q_0.value.trim();
    },

    $44_0: function($p0) {
        this.$D_0.className = 'ms-WikiPageNameEditor-DisplayHover';
    },

    $4A_0: function($p0) {
        this.$D_0.className = 'ms-WikiPageNameEditor-DisplayClickable';
    },

    $41_0: function($p0) {
        this.$D_0.style.display = 'none';
        this.$1y_0.style.display = 'inline';
        this.$Q_0.focus();
    },

    savingPageCallback: function() {
        ULS5Vl: ;
        this.$Q_0.value = this.$Q_0.value.trim();
        if (this.$3G_0 === this.$Q_0.value) {
            if (this.$39_0) {
                $removeHandler(this.$D_0, 'mouseover', this.$3B_0);
                $removeHandler(this.$D_0, 'mouseout', this.$3P_0);
                $removeHandler(this.$D_0, 'click', this.$34_0);
                this.$39_0 = false;
            }
            this.$D_0.className = 'ms-WikiPageNameEditor-Display';
            this.$D_0.style.display = 'inline';
            this.$1y_0.style.display = 'none';
        }
    }
}


Type.registerNamespace('SP.UI.ApplicationPages');

SP.UI.ApplicationPages.ISelectorComponent = function() {}
SP.UI.ApplicationPages.ISelectorComponent.registerInterface('SP.UI.ApplicationPages.ISelectorComponent');


SP.UI.ApplicationPages.SelectorType = function() {}
SP.UI.ApplicationPages.SelectorType.prototype = {
    none: 0,
    resource: 1,
    people: 2,
    people_And_Resource: 3,
    event: 4
}
SP.UI.ApplicationPages.SelectorType.registerEnum('SP.UI.ApplicationPages.SelectorType', false);


SP.UI.ApplicationPages.ICalendarController = function() {}
SP.UI.ApplicationPages.ICalendarController.registerInterface('SP.UI.ApplicationPages.ICalendarController');


SP.UI.ApplicationPages.CalendarScope = function() {}
SP.UI.ApplicationPages.CalendarScope.prototype = {
    nothing: 0,
    monthly: 1,
    weeklyGroup: 2,
    daily: 3,
    weekly: 4,
    dailyGroup: 5
}
SP.UI.ApplicationPages.CalendarScope.registerEnum('SP.UI.ApplicationPages.CalendarScope', false);


SP.UI.ApplicationPages.SelectorSelectionEventArgs = function(entities) {
    ULS5Vl: ;
    SP.UI.ApplicationPages.SelectorSelectionEventArgs.initializeBase(this);
    this.$37_1 = entities;
}
SP.UI.ApplicationPages.SelectorSelectionEventArgs.prototype = {
    $37_1: null,

    get_entities: function() {
        ULS5Vl: ;
        return this.$37_1;
    }
}


SP.UI.ApplicationPages.CalendarSelector = function() {
    ULS5Vl: ;
    this.$2Y = Function.createDelegate(this, this.$3j_1);
    this.$T_1 = {};
    SP.UI.ApplicationPages.CalendarSelector.initializeBase(this);
}
SP.UI.ApplicationPages.CalendarSelector.instance = function() {
    ULS5Vl: ;
    return SP.UI.ApplicationPages.CalendarSelector.$3b_1;
}
SP.UI.ApplicationPages.CalendarSelector.prototype = {

    registerSelector: function(selector) {
        ULS5Vl: ;
        selector.set_callback(this.$2Y);
        this.$T_1[this.$1l_1(selector.get_componentType(), selector.get_scopeKey())] = selector;
    },

    getSelector: function(type, scopeKey) {
        ULS5Vl: ;
        var $v_0 = this.$T_1[this.$1l_1(type, scopeKey)];
        if (SP.ScriptUtility.isNullOrUndefined($v_0)) {
            $v_0 = this.$T_1[this.$1l_1(3, scopeKey)];
        }
        return $v_0;
    },

    addHandler: function(scopeKey, people, resource, handler) {
        ULS5Vl: ;
        this.get_events().addHandler(scopeKey, handler);
        var $v_0 = 0;
        if (people) {
            $v_0 |= 2;
        }
        if (resource) {
            $v_0 |= 1;
        }
        if (!people && !resource) {
            $v_0 |= 4;
        }
        this.$T_1[scopeKey] = $v_0;
        this.$1j_1(scopeKey, handler);
    },

    revertTo: function(scopeKey, ent) {
        ULS5Vl: ;
        var $v_0 = this.getSelector(1, scopeKey);
        var $v_1 = this.getSelector(2, scopeKey);
        if ($v_0) {
            $v_0.revertTo(ent);
        }
        if ($v_1) {
            $v_1.revertTo(ent);
        }
        var $v_2 = this.$2y_1(scopeKey);
        this.$1j_1(scopeKey, $v_2);
    },

    removeEntity: function(scopeKey, ent) {
        ULS5Vl: ;
        var $v_0 = this.getSelector(1, scopeKey);
        var $v_1 = this.getSelector(2, scopeKey);
        if ($v_0) {
            $v_0.removeEntity(ent);
        }
        if ($v_1) {
            $v_1.removeEntity(ent);
        }
    },

    $3c_1: function($p0) {
        var $v_0 = new SP.UI.ApplicationPages.ResolveEntity();
        $v_0.entityType = '0';
        Array.add($p0, $v_0);
    },

    $3j_1: function($p0, $p1) {
        var $v_0 = $p0;
        var $v_1 = this.$2y_1($v_0.get_scopeKey());
        this.$1j_1($v_0.get_scopeKey(), $v_1);
    },

    $1j_1: function($p0, $p1) {
        var $v_0 = [];
        if (this.$1f_1($p0, 4)) {
            this.$3c_1($v_0);
        } else {
            var $v_1 = this.getSelector(3, $p0);
            if (!SP.ScriptUtility.isNullOrUndefined($v_1)) {
                Array.addRange($v_0, $v_1.get_selectedEntities());
            } else {
                if (this.$1f_1($p0, 2)) {
                    $v_1 = this.getSelector(2, $p0);
                    if (!SP.ScriptUtility.isNullOrUndefined($v_1)) {
                        Array.addRange($v_0, $v_1.get_selectedEntities());
                    }
                }
                if (this.$1f_1($p0, 1)) {
                    $v_1 = this.getSelector(1, $p0);
                    if (!SP.ScriptUtility.isNullOrUndefined($v_1)) {
                        Array.addRange($v_0, $v_1.get_selectedEntities());
                    }
                }
            }
        }
        if ($p1) {
            $p1(this, new SP.UI.ApplicationPages.SelectorSelectionEventArgs($v_0));
        }
    },

    $2y_1: function($p0) {
        return this.get_events().getHandler($p0);
    },

    $1f_1: function($p0, $p1) {
        var $v_0 = this.$T_1[$p0];
        return ($v_0 & $p1);
    },

    $1l_1: function($p0, $p1) {
        switch ($p0) {
            case 2:
                return '${PPL}_' + $p1;
            case 1:
                return '${RES}_' + $p1;
            case 3:
                return '${PAR}_' + $p1;
        }
        return null;
    }
}


SP.UI.ApplicationPages.BaseSelectorComponent = function(key, type) {
    ULS5Vl: ;
    this.$8_0 = key;
    this.$3O_0 = type;
    this.$B_0 = [];
    var $v_0 = SP.UI.ApplicationPages.CalendarSelector.instance();
    $v_0.registerSelector(this);
}
SP.UI.ApplicationPages.BaseSelectorComponent.prototype = {
    $8_0: null,
    $B_0: null,
    $1p_0: null,
    $3O_0: 0,

    get_scopeKey: function() {
        ULS5Vl: ;
        return this.$8_0;
    },

    get_componentType: function() {
        ULS5Vl: ;
        return this.$3O_0;
    },

    get_selectedEntities: function() {
        ULS5Vl: ;
        return this.$B_0;
    },
    set_selectedEntities: function(value) {
        ULS5Vl: ;
        this.$B_0 = value;
        return value;
    },

    get_callback: function() {
        ULS5Vl: ;
        return this.$1p_0;
    },
    set_callback: function(value) {
        ULS5Vl: ;
        this.$1p_0 = value;
        return value;
    },

    revertTo: function(ent) {
        ULS5Vl: ;
        Array.clear(this.$B_0);
        if (ent) {
            Array.add(this.$B_0, ent);
        }
    },

    removeEntity: function(ent) {
        ULS5Vl: ;
        for (var $v_0 = 0; $v_0 < this.$B_0.length; $v_0++) {
            var $v_1 = this.$B_0[$v_0];
            if (ent.get_key() === $v_1.get_key()) {
                Array.removeAt(this.$B_0, $v_0);
                return;
            }
        }
    },

    setEntity: function(ent) {
        ULS5Vl: ;
        Array.clear(this.$B_0);
        Array.add(this.$B_0, ent);
        this.$1p_0(this, new Sys.EventArgs());
    }
}


SP.UI.ApplicationPages.CalendarInstanceRepository = function() {}
SP.UI.ApplicationPages.CalendarInstanceRepository.registerInstance = function(instanceId, contoller) {
    ULS5Vl: ;
    SP.UI.ApplicationPages.CalendarInstanceRepository.$n_0[instanceId] = contoller;
}
SP.UI.ApplicationPages.CalendarInstanceRepository.lookupInstance = function(instanceId) {
    ULS5Vl: ;
    return SP.UI.ApplicationPages.CalendarInstanceRepository.$n_0[instanceId];
}
SP.UI.ApplicationPages.CalendarInstanceRepository.firstInstance = function() {
    ULS5Vl: ;
    var $$dict_1_0 = SP.UI.ApplicationPages.CalendarInstanceRepository.$n_0;
    for (var $$key_1_1 in $$dict_1_0) {
        var $v_0 = {
            key: $$key_1_1,
            value: $$dict_1_0[$$key_1_1]
        };
        return $v_0.value;
    }
    return null;
}


SP.UI.ApplicationPages.ResolveEntity = function() {}
SP.UI.ApplicationPages.ResolveEntity.prototype = {
    entityType: null,
    displayName: null,
    email: null,
    accountName: null,
    id: null,
    members: null,
    needResolve: false,
    isGroup: false,
    $8_0: null,

    get_key: function() {
        ULS5Vl: ;
        if (this.$8_0) {
            return this.$8_0;
        }
        switch (this.entityType) {
            case '0':
                this.$8_0 = '0;#0';
                break;
            case '1':
                if (this.isGroup) {
                    this.$8_0 = '1;#' + this.id;
                } else if (this.email) {
                    this.$8_0 = '1;#' + this.accountName + ';' + this.email;
                } else {
                    this.$8_0 = '1;#' + this.accountName;
                }
                break;
            case '2':
                this.$8_0 = '2;#' + this.id;
                break;
            case '3':
            default:
                this.$8_0 = '3;#' + this.email;
                break;
        }
        return this.$8_0;
    }
}


SP.UI.ApplicationPages.PeoplePickerWebServiceInterface = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.UI.ApplicationPages.PeoplePickerWebServiceInterface.initializeBase(this, [Context, ObjectPath]);
}
SP.UI.ApplicationPages.PeoplePickerWebServiceInterface.getSearchResultsByHierarchy = function(Context, providerID, hierarchyNodeID, entityTypes, contextUrl) {
    ULS5Vl: ;
    var $v_0;
    var $v_1 = new SP.ClientActionInvokeStaticMethod('{8a000bc7-5d42-4c47-af0b-3dd25b28d26f}', 'GetSearchResultsByHierarchy', [providerID, hierarchyNodeID, entityTypes, contextUrl]);
    Context.addQuery($v_1);
    $v_0 = new SP.StringResult();
    Context.addQueryIdAndResultObject($v_1.get_id(), $v_0);
    return $v_0;
}
SP.UI.ApplicationPages.PeoplePickerWebServiceInterface.getSearchResults = function(Context, searchPattern, providerID, hierarchyNodeID, entityTypes) {
    ULS5Vl: ;
    var $v_0;
    var $v_1 = new SP.ClientActionInvokeStaticMethod('{8a000bc7-5d42-4c47-af0b-3dd25b28d26f}', 'GetSearchResults', [searchPattern, providerID, hierarchyNodeID, entityTypes]);
    Context.addQuery($v_1);
    $v_0 = new SP.StringResult();
    Context.addQueryIdAndResultObject($v_1.get_id(), $v_0);
    return $v_0;
}


Type.registerNamespace('SP.WebParts');

SP.WebParts.PersonalizationScope = function() {}
SP.WebParts.PersonalizationScope.prototype = {
    user: 0,
    shared: 1
}
SP.WebParts.PersonalizationScope.registerEnum('SP.WebParts.PersonalizationScope', false);


SP.WebParts.LimitedWebPartManager = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.WebParts.LimitedWebPartManager.initializeBase(this, [Context, ObjectPath]);
}
SP.WebParts.LimitedWebPartManager.prototype = {

    get_scope: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Scope');
        return ((this.get_objectData().get_properties()['Scope']));
    },

    get_webParts: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['WebParts']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.WebParts.WebPartDefinitionCollection(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'WebParts'));
            this.get_objectData().get_clientObjectProperties()['WebParts'] = $v_0;
        }
        return $v_0;
    },

    get_hasPersonalizedParts: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('HasPersonalizedParts');
        return ((this.get_objectData().get_properties()['HasPersonalizedParts']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.WebParts.LimitedWebPartManager.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Scope;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Scope'] = ($v_0);
            delete parentNode.Scope;
        }
        $v_0 = parentNode.WebParts;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_webParts().fromJson($v_0);
            delete parentNode.WebParts;
        }
        $v_0 = parentNode.HasPersonalizedParts;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['HasPersonalizedParts'] = ($v_0);
            delete parentNode.HasPersonalizedParts;
        }
    },

    addWebPart: function(webPart, zoneId, zoneIndex) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.WebParts.WebPartDefinition(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'AddWebPart', [webPart, zoneId, zoneIndex]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        return $v_0;
    },

    importWebPart: function(webPartXml) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.WebParts.WebPartDefinition(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'ImportWebPart', [webPartXml]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        return $v_0;
    }
}


SP.WebParts.LimitedWebPartManagerPropertyNames = function() {}


SP.WebParts.LimitedWebPartManagerObjectPropertyNames = function() {}


SP.WebParts.WebPart = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.WebParts.WebPart.initializeBase(this, [Context, ObjectPath]);
}
SP.WebParts.WebPart.prototype = {

    get_hidden: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Hidden');
        return ((this.get_objectData().get_properties()['Hidden']));
    },
    set_hidden: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Hidden'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Hidden', value));
        }
        return value;
    },

    get_isClosed: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsClosed');
        return ((this.get_objectData().get_properties()['IsClosed']));
    },

    get_subtitle: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Subtitle');
        return ((this.get_objectData().get_properties()['Subtitle']));
    },

    get_title: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Title');
        return ((this.get_objectData().get_properties()['Title']));
    },
    set_title: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Title'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Title', value));
        }
        return value;
    },

    get_titleUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TitleUrl');
        return ((this.get_objectData().get_properties()['TitleUrl']));
    },
    set_titleUrl: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['TitleUrl'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'TitleUrl', value));
        }
        return value;
    },

    get_zoneIndex: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ZoneIndex');
        return ((this.get_objectData().get_properties()['ZoneIndex']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.WebParts.WebPart.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Hidden;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Hidden'] = ($v_0);
            delete parentNode.Hidden;
        }
        $v_0 = parentNode.IsClosed;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsClosed'] = ($v_0);
            delete parentNode.IsClosed;
        }
        $v_0 = parentNode.Subtitle;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Subtitle'] = ($v_0);
            delete parentNode.Subtitle;
        }
        $v_0 = parentNode.Title;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Title'] = ($v_0);
            delete parentNode.Title;
        }
        $v_0 = parentNode.TitleUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TitleUrl'] = ($v_0);
            delete parentNode.TitleUrl;
        }
        $v_0 = parentNode.ZoneIndex;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ZoneIndex'] = ($v_0);
            delete parentNode.ZoneIndex;
        }
    }
}


SP.WebParts.WebPartPropertyNames = function() {}


SP.WebParts.WebPartDefinition = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.WebParts.WebPartDefinition.initializeBase(this, [Context, ObjectPath]);
}
SP.WebParts.WebPartDefinition.prototype = {

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_webPart: function() {
        ULS5Vl: ;
        var $v_0 = ((this.get_objectData().get_clientObjectProperties()['WebPart']));
        if (SP.ScriptUtility.isUndefined($v_0)) {
            $v_0 = new SP.WebParts.WebPart(this.get_context(), new SP.ObjectPathProperty(this.get_context(), this.get_path(), 'WebPart'));
            this.get_objectData().get_clientObjectProperties()['WebPart'] = $v_0;
        }
        return $v_0;
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.WebParts.WebPartDefinition.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.WebPart;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_webPart().fromJson($v_0);
            delete parentNode.WebPart;
        }
    },

    saveWebPartChanges: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'SaveWebPartChanges', null);
        this.get_context().addQuery($v_0);
    },

    closeWebPart: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'CloseWebPart', null);
        this.get_context().addQuery($v_0);
    },

    openWebPart: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'OpenWebPart', null);
        this.get_context().addQuery($v_0);
    },

    deleteWebPart: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteWebPart', null);
        this.get_context().addQuery($v_0);
    },

    moveWebPartTo: function(zoneID, zoneIndex) {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'MoveWebPartTo', [zoneID, zoneIndex]);
        this.get_context().addQuery($v_0);
    }
}


SP.WebParts.WebPartDefinitionPropertyNames = function() {}


SP.WebParts.WebPartDefinitionObjectPropertyNames = function() {}


SP.WebParts.WebPartDefinitionCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.WebParts.WebPartDefinitionCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.WebParts.WebPartDefinitionCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getById: function(id) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[id.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.WebParts.WebPartDefinition(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [id]));
        $v_1[id.toString()] = $v_0;
        return $v_0;
    }
}


Type.registerNamespace('SP.Workflow');

SP.Workflow.WorkflowAssociation = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Workflow.WorkflowAssociation.initializeBase(this, [Context, ObjectPath]);
}
SP.Workflow.WorkflowAssociation.prototype = {

    $7: function($p0) {
        if ($p0) {
            this.get_objectData().get_properties()['Name'] = $p0.$5_1;
        }
    },

    get_instantiationUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('InstantiationUrl');
        return ((this.get_objectData().get_properties()['InstantiationUrl']));
    },

    get_associationData: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AssociationData');
        return ((this.get_objectData().get_properties()['AssociationData']));
    },
    set_associationData: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AssociationData'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AssociationData', value));
        }
        return value;
    },

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_baseId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('BaseId');
        return ((this.get_objectData().get_properties()['BaseId']));
    },

    get_webId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('WebId');
        return ((this.get_objectData().get_properties()['WebId']));
    },

    get_listId: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('ListId');
        return ((this.get_objectData().get_properties()['ListId']));
    },

    get_internalName: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('InternalName');
        return ((this.get_objectData().get_properties()['InternalName']));
    },

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },
    set_name: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Name'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Name', value));
        }
        return value;
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },
    set_description: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Description'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Description', value));
        }
        return value;
    },

    get_taskListTitle: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('TaskListTitle');
        return ((this.get_objectData().get_properties()['TaskListTitle']));
    },
    set_taskListTitle: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['TaskListTitle'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'TaskListTitle', value));
        }
        return value;
    },

    get_historyListTitle: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('HistoryListTitle');
        return ((this.get_objectData().get_properties()['HistoryListTitle']));
    },
    set_historyListTitle: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['HistoryListTitle'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'HistoryListTitle', value));
        }
        return value;
    },

    get_allowManual: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowManual');
        return ((this.get_objectData().get_properties()['AllowManual']));
    },
    set_allowManual: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AllowManual'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AllowManual', value));
        }
        return value;
    },

    get_autoStartCreate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AutoStartCreate');
        return ((this.get_objectData().get_properties()['AutoStartCreate']));
    },
    set_autoStartCreate: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AutoStartCreate'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AutoStartCreate', value));
        }
        return value;
    },

    get_autoStartChange: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AutoStartChange');
        return ((this.get_objectData().get_properties()['AutoStartChange']));
    },
    set_autoStartChange: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['AutoStartChange'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'AutoStartChange', value));
        }
        return value;
    },

    get_isDeclarative: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsDeclarative');
        return ((this.get_objectData().get_properties()['IsDeclarative']));
    },

    get_enabled: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Enabled');
        return ((this.get_objectData().get_properties()['Enabled']));
    },
    set_enabled: function(value) {
        ULS5Vl: ;
        this.get_objectData().get_properties()['Enabled'] = value;
        if ((this.get_context())) {
            this.get_context().addQuery(new SP.ClientActionSetProperty(this, 'Enabled', value));
        }
        return value;
    },

    get_modified: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Modified');
        return ((this.get_objectData().get_properties()['Modified']));
    },

    get_created: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Created');
        return ((this.get_objectData().get_properties()['Created']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Workflow.WorkflowAssociation.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.InstantiationUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['InstantiationUrl'] = ($v_0);
            delete parentNode.InstantiationUrl;
        }
        $v_0 = parentNode.AssociationData;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AssociationData'] = ($v_0);
            delete parentNode.AssociationData;
        }
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.BaseId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['BaseId'] = ($v_0);
            delete parentNode.BaseId;
        }
        $v_0 = parentNode.WebId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['WebId'] = ($v_0);
            delete parentNode.WebId;
        }
        $v_0 = parentNode.ListId;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['ListId'] = ($v_0);
            delete parentNode.ListId;
        }
        $v_0 = parentNode.InternalName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['InternalName'] = ($v_0);
            delete parentNode.InternalName;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.TaskListTitle;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['TaskListTitle'] = ($v_0);
            delete parentNode.TaskListTitle;
        }
        $v_0 = parentNode.HistoryListTitle;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['HistoryListTitle'] = ($v_0);
            delete parentNode.HistoryListTitle;
        }
        $v_0 = parentNode.AllowManual;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowManual'] = ($v_0);
            delete parentNode.AllowManual;
        }
        $v_0 = parentNode.AutoStartCreate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AutoStartCreate'] = ($v_0);
            delete parentNode.AutoStartCreate;
        }
        $v_0 = parentNode.AutoStartChange;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AutoStartChange'] = ($v_0);
            delete parentNode.AutoStartChange;
        }
        $v_0 = parentNode.IsDeclarative;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsDeclarative'] = ($v_0);
            delete parentNode.IsDeclarative;
        }
        $v_0 = parentNode.Enabled;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Enabled'] = ($v_0);
            delete parentNode.Enabled;
        }
        $v_0 = parentNode.Modified;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Modified'] = ($v_0);
            delete parentNode.Modified;
        }
        $v_0 = parentNode.Created;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Created'] = ($v_0);
            delete parentNode.Created;
        }
    },

    update: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'Update', null);
        this.get_context().addQuery($v_0);
        this.refreshLoad();
    },

    deleteObject: function() {
        ULS5Vl: ;
        var $v_0 = new SP.ClientActionInvokeMethod(this, 'DeleteObject', null);
        this.get_context().addQuery($v_0);
        this.removeFromParentCollection();
    }
}


SP.Workflow.WorkflowAssociationPropertyNames = function() {}


SP.Workflow.WorkflowAssociationCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Workflow.WorkflowAssociationCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.Workflow.WorkflowAssociationCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getById: function(associationId) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Workflow.WorkflowAssociation(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [associationId]));
        return $v_0;
    },

    add: function(parameters) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = new SP.Workflow.WorkflowAssociation(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'Add', [parameters]));
        $v_0.get_path().setPendingReplace();
        var $v_1 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_1.get_id(), $v_0);
        this.get_context().addQuery($v_1);
        this.addChild($v_0);
        $v_0.$7(parameters);
        return $v_0;
    },

    getByName: function(name) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByName']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByName'] = $v_1;
        }
        $v_0 = (($v_1[name]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Workflow.WorkflowAssociation(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByName', [name]));
        $v_1[name] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    }
}


SP.Workflow.WorkflowAssociationCreationInformation = function() {
    ULS5Vl: ;
    SP.Workflow.WorkflowAssociationCreationInformation.initializeBase(this);
}
SP.Workflow.WorkflowAssociationCreationInformation.prototype = {
    $2H_1: null,
    $5_1: null,
    $2G_1: null,
    $1t_1: null,
    $22_1: null,
    $1s_1: null,

    get_template: function() {
        ULS5Vl: ;
        return this.$2H_1;
    },
    set_template: function(value) {
        ULS5Vl: ;
        this.$2H_1 = value;
        return value;
    },

    get_name: function() {
        ULS5Vl: ;
        return this.$5_1;
    },
    set_name: function(value) {
        ULS5Vl: ;
        this.$5_1 = value;
        return value;
    },

    get_taskList: function() {
        ULS5Vl: ;
        return this.$2G_1;
    },
    set_taskList: function(value) {
        ULS5Vl: ;
        this.$2G_1 = value;
        return value;
    },

    get_contentTypeAssociationTaskListName: function() {
        ULS5Vl: ;
        return this.$1t_1;
    },
    set_contentTypeAssociationTaskListName: function(value) {
        ULS5Vl: ;
        this.$1t_1 = value;
        return value;
    },

    get_historyList: function() {
        ULS5Vl: ;
        return this.$22_1;
    },
    set_historyList: function(value) {
        ULS5Vl: ;
        this.$22_1 = value;
        return value;
    },

    get_contentTypeAssociationHistoryListName: function() {
        ULS5Vl: ;
        return this.$1s_1;
    },
    set_contentTypeAssociationHistoryListName: function(value) {
        ULS5Vl: ;
        this.$1s_1 = value;
        return value;
    },

    get_typeId: function() {
        ULS5Vl: ;
        return '{3c812f4f-8465-41cb-b298-bd33b2604a51}';
    },

    writeToXml: function(writer, serializationContext) {
        ULS5Vl: ;
        if (!writer) {
            throw Error.argumentNull('writer');
        }
        if (!serializationContext) {
            throw Error.argumentNull('serializationContext');
        }
        var $v_0 = ['Template', 'Name', 'TaskList', 'ContentTypeAssociationTaskListName', 'HistoryList', 'ContentTypeAssociationHistoryListName'];
        SP.DataConvert.writePropertiesToXml(writer, this, $v_0, serializationContext);
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        var $v_0;
        $v_0 = parentNode.Template;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2H_1.fromJson($v_0);
            delete parentNode.Template;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$5_1 = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.TaskList;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$2G_1.fromJson($v_0);
            delete parentNode.TaskList;
        }
        $v_0 = parentNode.ContentTypeAssociationTaskListName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1t_1 = ($v_0);
            delete parentNode.ContentTypeAssociationTaskListName;
        }
        $v_0 = parentNode.HistoryList;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$22_1.fromJson($v_0);
            delete parentNode.HistoryList;
        }
        $v_0 = parentNode.ContentTypeAssociationHistoryListName;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.$1s_1 = ($v_0);
            delete parentNode.ContentTypeAssociationHistoryListName;
        }
    }
}


SP.Workflow.WorkflowTemplate = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Workflow.WorkflowTemplate.initializeBase(this, [Context, ObjectPath]);
}
SP.Workflow.WorkflowTemplate.prototype = {

    get_id: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Id');
        return ((this.get_objectData().get_properties()['Id']));
    },

    get_isDeclarative: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('IsDeclarative');
        return ((this.get_objectData().get_properties()['IsDeclarative']));
    },

    get_name: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Name');
        return ((this.get_objectData().get_properties()['Name']));
    },

    get_associationUrl: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AssociationUrl');
        return ((this.get_objectData().get_properties()['AssociationUrl']));
    },

    get_description: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('Description');
        return ((this.get_objectData().get_properties()['Description']));
    },

    get_allowManual: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AllowManual');
        return ((this.get_objectData().get_properties()['AllowManual']));
    },

    get_permissionsManual: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('PermissionsManual');
        return ((this.get_objectData().get_properties()['PermissionsManual']));
    },

    get_autoStartCreate: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AutoStartCreate');
        return ((this.get_objectData().get_properties()['AutoStartCreate']));
    },

    get_autoStartChange: function() {
        ULS5Vl: ;
        this.checkUninitializedProperty('AutoStartChange');
        return ((this.get_objectData().get_properties()['AutoStartChange']));
    },

    initPropertiesFromJson: function(parentNode) {
        ULS5Vl: ;
        SP.Workflow.WorkflowTemplate.callBaseMethod(this, 'initPropertiesFromJson', [parentNode]);
        var $v_0;
        $v_0 = parentNode.Id;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Id'] = ($v_0);
            delete parentNode.Id;
        }
        $v_0 = parentNode.IsDeclarative;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['IsDeclarative'] = ($v_0);
            delete parentNode.IsDeclarative;
        }
        $v_0 = parentNode.Name;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Name'] = ($v_0);
            delete parentNode.Name;
        }
        $v_0 = parentNode.AssociationUrl;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AssociationUrl'] = ($v_0);
            delete parentNode.AssociationUrl;
        }
        $v_0 = parentNode.Description;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['Description'] = ($v_0);
            delete parentNode.Description;
        }
        $v_0 = parentNode.AllowManual;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AllowManual'] = ($v_0);
            delete parentNode.AllowManual;
        }
        $v_0 = parentNode.PermissionsManual;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['PermissionsManual'] = ((SP.DataConvert.fixupType(this.get_context(), $v_0)));
            delete parentNode.PermissionsManual;
        }
        $v_0 = parentNode.AutoStartCreate;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AutoStartCreate'] = ($v_0);
            delete parentNode.AutoStartCreate;
        }
        $v_0 = parentNode.AutoStartChange;
        if (!SP.ScriptUtility.isUndefined($v_0)) {
            this.get_objectData().get_properties()['AutoStartChange'] = ($v_0);
            delete parentNode.AutoStartChange;
        }
    }
}


SP.Workflow.WorkflowTemplatePropertyNames = function() {}


SP.Workflow.WorkflowTemplateCollection = function(Context, ObjectPath) {
    ULS5Vl: ;
    SP.Workflow.WorkflowTemplateCollection.initializeBase(this, [Context, ObjectPath]);
}
SP.Workflow.WorkflowTemplateCollection.prototype = {

    itemAt: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    get_item: function(index) {
        ULS5Vl: ;
        return this.getItemAtIndex(index);
    },

    getById: function(templateId) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetById']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetById'] = $v_1;
        }
        $v_0 = (($v_1[templateId.toString()]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Workflow.WorkflowTemplate(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetById', [templateId]));
        $v_1[templateId.toString()] = $v_0;
        return $v_0;
    },

    getByName: function(name) {
        ULS5Vl: ;
        var $v_0;
        var $v_1 = ((this.get_objectData().get_methodReturnObjects()['GetByName']));
        if (SP.ScriptUtility.isNullOrUndefined($v_1)) {
            $v_1 = {};
            this.get_objectData().get_methodReturnObjects()['GetByName'] = $v_1;
        }
        $v_0 = (($v_1[name]));
        if (!SP.ScriptUtility.isNullOrUndefined($v_0)) {
            return $v_0;
        }
        $v_0 = new SP.Workflow.WorkflowTemplate(this.get_context(), new SP.ObjectPathMethod(this.get_context(), this.get_path(), 'GetByName', [name]));
        $v_1[name] = $v_0;
        var $v_2 = new SP.ObjectIdentityQuery($v_0.get_path());
        this.get_context().addQueryIdAndResultObject($v_2.get_id(), $v_0);
        this.get_context().addQuery($v_2);
        return $v_0;
    }
}


SP.ClientContext.registerClass('SP.ClientContext', SP.ClientRuntimeContext);
SP.PageContextInfo.registerClass('SP.PageContextInfo');
SP.ULS.registerClass('SP.ULS');
SP.BasePermissions.registerClass('SP.BasePermissions', SP.ClientValueObject);
SP.CamlQuery.registerClass('SP.CamlQuery', SP.ClientValueObject);
SP.Change.registerClass('SP.Change', SP.ClientObject);
SP.ChangePropertyNames.registerClass('SP.ChangePropertyNames');
SP.ChangeAlert.registerClass('SP.ChangeAlert', SP.Change);
SP.ChangeAlertPropertyNames.registerClass('SP.ChangeAlertPropertyNames');
SP.ChangeCollection.registerClass('SP.ChangeCollection', SP.ClientObjectCollection);
SP.ChangeContentType.registerClass('SP.ChangeContentType', SP.Change);
SP.ChangeContentTypePropertyNames.registerClass('SP.ChangeContentTypePropertyNames');
SP.ChangeField.registerClass('SP.ChangeField', SP.Change);
SP.ChangeFieldPropertyNames.registerClass('SP.ChangeFieldPropertyNames');
SP.ChangeFile.registerClass('SP.ChangeFile', SP.Change);
SP.ChangeFilePropertyNames.registerClass('SP.ChangeFilePropertyNames');
SP.ChangeFolder.registerClass('SP.ChangeFolder', SP.Change);
SP.ChangeFolderPropertyNames.registerClass('SP.ChangeFolderPropertyNames');
SP.ChangeGroup.registerClass('SP.ChangeGroup', SP.Change);
SP.ChangeGroupPropertyNames.registerClass('SP.ChangeGroupPropertyNames');
SP.ChangeItem.registerClass('SP.ChangeItem', SP.Change);
SP.ChangeItemPropertyNames.registerClass('SP.ChangeItemPropertyNames');
SP.ChangeList.registerClass('SP.ChangeList', SP.Change);
SP.ChangeListPropertyNames.registerClass('SP.ChangeListPropertyNames');
SP.ChangeQuery.registerClass('SP.ChangeQuery', SP.ClientValueObject);
SP.ChangeSite.registerClass('SP.ChangeSite', SP.Change);
SP.ChangeToken.registerClass('SP.ChangeToken', SP.ClientValueObject);
SP.ChangeUser.registerClass('SP.ChangeUser', SP.Change);
SP.ChangeUserPropertyNames.registerClass('SP.ChangeUserPropertyNames');
SP.ChangeView.registerClass('SP.ChangeView', SP.Change);
SP.ChangeViewPropertyNames.registerClass('SP.ChangeViewPropertyNames');
SP.ChangeWeb.registerClass('SP.ChangeWeb', SP.Change);
SP.ChangeWebPropertyNames.registerClass('SP.ChangeWebPropertyNames');
SP.ContentType.registerClass('SP.ContentType', SP.ClientObject);
SP.ContentTypePropertyNames.registerClass('SP.ContentTypePropertyNames');
SP.ContentTypeObjectPropertyNames.registerClass('SP.ContentTypeObjectPropertyNames');
SP.ContentTypeCollection.registerClass('SP.ContentTypeCollection', SP.ClientObjectCollection);
SP.ContentTypeCreationInformation.registerClass('SP.ContentTypeCreationInformation', SP.ClientValueObject);
SP.ContentTypeId.registerClass('SP.ContentTypeId', SP.ClientValueObject);
SP.Feature.registerClass('SP.Feature', SP.ClientObject);
SP.FeaturePropertyNames.registerClass('SP.FeaturePropertyNames');
SP.FeatureCollection.registerClass('SP.FeatureCollection', SP.ClientObjectCollection);
SP.Field.registerClass('SP.Field', SP.ClientObject);
SP.FieldPropertyNames.registerClass('SP.FieldPropertyNames');
SP.FieldCalculated.registerClass('SP.FieldCalculated', SP.Field);
SP.FieldCalculatedPropertyNames.registerClass('SP.FieldCalculatedPropertyNames');
SP.FieldCalculatedErrorValue.registerClass('SP.FieldCalculatedErrorValue', SP.ClientValueObject);
SP.FieldMultiChoice.registerClass('SP.FieldMultiChoice', SP.Field);
SP.FieldChoice.registerClass('SP.FieldChoice', SP.FieldMultiChoice);
SP.FieldChoicePropertyNames.registerClass('SP.FieldChoicePropertyNames');
SP.FieldCollection.registerClass('SP.FieldCollection', SP.ClientObjectCollection);
SP.FieldCollectionPropertyNames.registerClass('SP.FieldCollectionPropertyNames');
SP.FieldComputed.registerClass('SP.FieldComputed', SP.Field);
SP.FieldComputedPropertyNames.registerClass('SP.FieldComputedPropertyNames');
SP.FieldNumber.registerClass('SP.FieldNumber', SP.Field);
SP.FieldCurrency.registerClass('SP.FieldCurrency', SP.FieldNumber);
SP.FieldCurrencyPropertyNames.registerClass('SP.FieldCurrencyPropertyNames');
SP.FieldDateTime.registerClass('SP.FieldDateTime', SP.Field);
SP.FieldDateTimePropertyNames.registerClass('SP.FieldDateTimePropertyNames');
SP.FieldGuid.registerClass('SP.FieldGuid', SP.Field);
SP.FieldLink.registerClass('SP.FieldLink', SP.ClientObject);
SP.FieldLinkPropertyNames.registerClass('SP.FieldLinkPropertyNames');
SP.FieldLinkCollection.registerClass('SP.FieldLinkCollection', SP.ClientObjectCollection);
SP.FieldLinkCreationInformation.registerClass('SP.FieldLinkCreationInformation', SP.ClientValueObject);
SP.FieldLookup.registerClass('SP.FieldLookup', SP.Field);
SP.FieldLookupPropertyNames.registerClass('SP.FieldLookupPropertyNames');
SP.FieldLookupValue.registerClass('SP.FieldLookupValue', SP.ClientValueObject);
SP.FieldMultiChoicePropertyNames.registerClass('SP.FieldMultiChoicePropertyNames');
SP.FieldMultiLineText.registerClass('SP.FieldMultiLineText', SP.Field);
SP.FieldMultiLineTextPropertyNames.registerClass('SP.FieldMultiLineTextPropertyNames');
SP.FieldNumberPropertyNames.registerClass('SP.FieldNumberPropertyNames');
SP.FieldRatingScale.registerClass('SP.FieldRatingScale', SP.FieldMultiChoice);
SP.FieldRatingScalePropertyNames.registerClass('SP.FieldRatingScalePropertyNames');
SP.FieldRatingScaleQuestionAnswer.registerClass('SP.FieldRatingScaleQuestionAnswer', SP.ClientValueObject);
SP.FieldStringValues.registerClass('SP.FieldStringValues', SP.ClientObject);
SP.FieldText.registerClass('SP.FieldText', SP.Field);
SP.FieldTextPropertyNames.registerClass('SP.FieldTextPropertyNames');
SP.FieldUrl.registerClass('SP.FieldUrl', SP.Field);
SP.FieldUrlPropertyNames.registerClass('SP.FieldUrlPropertyNames');
SP.FieldUrlValue.registerClass('SP.FieldUrlValue', SP.ClientValueObject);
SP.FieldUser.registerClass('SP.FieldUser', SP.FieldLookup);
SP.FieldUserPropertyNames.registerClass('SP.FieldUserPropertyNames');
SP.FieldUserValue.registerClass('SP.FieldUserValue', SP.ClientValueObject);
SP.File.registerClass('SP.File', SP.ClientObject);
SP.FilePropertyNames.registerClass('SP.FilePropertyNames');
SP.FileObjectPropertyNames.registerClass('SP.FileObjectPropertyNames');
SP.FileCollection.registerClass('SP.FileCollection', SP.ClientObjectCollection);
SP.FileVersion.registerClass('SP.FileVersion', SP.ClientObject);
SP.FileVersionPropertyNames.registerClass('SP.FileVersionPropertyNames');
SP.FileVersionObjectPropertyNames.registerClass('SP.FileVersionObjectPropertyNames');
SP.FileVersionCollection.registerClass('SP.FileVersionCollection', SP.ClientObjectCollection);
SP.Folder.registerClass('SP.Folder', SP.ClientObject);
SP.FolderPropertyNames.registerClass('SP.FolderPropertyNames');
SP.FolderObjectPropertyNames.registerClass('SP.FolderObjectPropertyNames');
SP.FolderCollection.registerClass('SP.FolderCollection', SP.ClientObjectCollection);
SP.Form.registerClass('SP.Form', SP.ClientObject);
SP.FormPropertyNames.registerClass('SP.FormPropertyNames');
SP.FormCollection.registerClass('SP.FormCollection', SP.ClientObjectCollection);
SP.Principal.registerClass('SP.Principal', SP.ClientObject);
SP.Group.registerClass('SP.Group', SP.Principal);
SP.GroupPropertyNames.registerClass('SP.GroupPropertyNames');
SP.GroupObjectPropertyNames.registerClass('SP.GroupObjectPropertyNames');
SP.GroupCollection.registerClass('SP.GroupCollection', SP.ClientObjectCollection);
SP.GroupCreationInformation.registerClass('SP.GroupCreationInformation', SP.ClientValueObject);
SP.SecurableObject.registerClass('SP.SecurableObject', SP.ClientObject);
SP.List.registerClass('SP.List', SP.SecurableObject);
SP.ListPropertyNames.registerClass('SP.ListPropertyNames');
SP.ListObjectPropertyNames.registerClass('SP.ListObjectPropertyNames');
SP.ListCollection.registerClass('SP.ListCollection', SP.ClientObjectCollection);
SP.ListCreationInformation.registerClass('SP.ListCreationInformation', SP.ClientValueObject);
SP.ListDataSource.registerClass('SP.ListDataSource', SP.ClientValueObject);
SP.ListDataValidationExceptionValue.registerClass('SP.ListDataValidationExceptionValue', SP.ClientValueObject);
SP.ListDataValidationFailure.registerClass('SP.ListDataValidationFailure', SP.ClientValueObject);
SP.ListItem.registerClass('SP.ListItem', SP.SecurableObject);
SP.ListItemPropertyNames.registerClass('SP.ListItemPropertyNames');
SP.ListItemObjectPropertyNames.registerClass('SP.ListItemObjectPropertyNames');
SP.ListItemCollection.registerClass('SP.ListItemCollection', SP.ClientObjectCollection);
SP.ListItemCollectionPropertyNames.registerClass('SP.ListItemCollectionPropertyNames');
SP.ListItemCollectionPosition.registerClass('SP.ListItemCollectionPosition', SP.ClientValueObject);
SP.ListItemCreationInformation.registerClass('SP.ListItemCreationInformation', SP.ClientValueObject);
SP.ListTemplate.registerClass('SP.ListTemplate', SP.ClientObject);
SP.ListTemplatePropertyNames.registerClass('SP.ListTemplatePropertyNames');
SP.ListTemplateCollection.registerClass('SP.ListTemplateCollection', SP.ClientObjectCollection);
SP.Navigation.registerClass('SP.Navigation', SP.ClientObject);
SP.NavigationPropertyNames.registerClass('SP.NavigationPropertyNames');
SP.NavigationObjectPropertyNames.registerClass('SP.NavigationObjectPropertyNames');
SP.NavigationNode.registerClass('SP.NavigationNode', SP.ClientObject);
SP.NavigationNodePropertyNames.registerClass('SP.NavigationNodePropertyNames');
SP.NavigationNodeObjectPropertyNames.registerClass('SP.NavigationNodeObjectPropertyNames');
SP.NavigationNodeCollection.registerClass('SP.NavigationNodeCollection', SP.ClientObjectCollection);
SP.NavigationNodeCreationInformation.registerClass('SP.NavigationNodeCreationInformation', SP.ClientValueObject);
SP.PrincipalPropertyNames.registerClass('SP.PrincipalPropertyNames');
SP.PropertyValues.registerClass('SP.PropertyValues', SP.ClientObject);
SP.RecycleBinItem.registerClass('SP.RecycleBinItem', SP.ClientObject);
SP.RecycleBinItemPropertyNames.registerClass('SP.RecycleBinItemPropertyNames');
SP.RecycleBinItemObjectPropertyNames.registerClass('SP.RecycleBinItemObjectPropertyNames');
SP.RecycleBinItemCollection.registerClass('SP.RecycleBinItemCollection', SP.ClientObjectCollection);
SP.RelatedField.registerClass('SP.RelatedField', SP.ClientObject);
SP.RelatedFieldPropertyNames.registerClass('SP.RelatedFieldPropertyNames');
SP.RelatedFieldObjectPropertyNames.registerClass('SP.RelatedFieldObjectPropertyNames');
SP.RelatedFieldCollection.registerClass('SP.RelatedFieldCollection', SP.ClientObjectCollection);
SP.RelatedFieldExtendedData.registerClass('SP.RelatedFieldExtendedData', SP.ClientObject);
SP.RelatedFieldExtendedDataPropertyNames.registerClass('SP.RelatedFieldExtendedDataPropertyNames');
SP.RelatedFieldExtendedDataCollection.registerClass('SP.RelatedFieldExtendedDataCollection', SP.ClientObjectCollection);
SP.RequestContext.registerClass('SP.RequestContext', SP.ClientObject);
SP.RequestContextObjectPropertyNames.registerClass('SP.RequestContextObjectPropertyNames');
SP.RoleAssignment.registerClass('SP.RoleAssignment', SP.ClientObject);
SP.RoleAssignmentObjectPropertyNames.registerClass('SP.RoleAssignmentObjectPropertyNames');
SP.RoleAssignmentCollection.registerClass('SP.RoleAssignmentCollection', SP.ClientObjectCollection);
SP.RoleDefinition.registerClass('SP.RoleDefinition', SP.ClientObject);
SP.RoleDefinitionPropertyNames.registerClass('SP.RoleDefinitionPropertyNames');
SP.RoleDefinitionBindingCollection.registerClass('SP.RoleDefinitionBindingCollection', SP.ClientObjectCollection);
SP.RoleDefinitionCollection.registerClass('SP.RoleDefinitionCollection', SP.ClientObjectCollection);
SP.RoleDefinitionCreationInformation.registerClass('SP.RoleDefinitionCreationInformation', SP.ClientValueObject);
SP.SecurableObjectPropertyNames.registerClass('SP.SecurableObjectPropertyNames');
SP.SecurableObjectObjectPropertyNames.registerClass('SP.SecurableObjectObjectPropertyNames');
SP.Site.registerClass('SP.Site', SP.ClientObject);
SP.SitePropertyNames.registerClass('SP.SitePropertyNames');
SP.SiteObjectPropertyNames.registerClass('SP.SiteObjectPropertyNames');
SP.SubwebQuery.registerClass('SP.SubwebQuery', SP.ClientValueObject);
SP.UsageInfo.registerClass('SP.UsageInfo', SP.ClientValueObject);
SP.User.registerClass('SP.User', SP.Principal);
SP.UserPropertyNames.registerClass('SP.UserPropertyNames');
SP.UserCollection.registerClass('SP.UserCollection', SP.ClientObjectCollection);
SP.UserCreationInformation.registerClass('SP.UserCreationInformation', SP.ClientValueObject);
SP.UserCustomAction.registerClass('SP.UserCustomAction', SP.ClientObject);
SP.UserCustomActionPropertyNames.registerClass('SP.UserCustomActionPropertyNames');
SP.UserCustomActionCollection.registerClass('SP.UserCustomActionCollection', SP.ClientObjectCollection);
SP.View.registerClass('SP.View', SP.ClientObject);
SP.ViewPropertyNames.registerClass('SP.ViewPropertyNames');
SP.ViewObjectPropertyNames.registerClass('SP.ViewObjectPropertyNames');
SP.ViewCollection.registerClass('SP.ViewCollection', SP.ClientObjectCollection);
SP.ViewCreationInformation.registerClass('SP.ViewCreationInformation', SP.ClientValueObject);
SP.ViewFieldCollection.registerClass('SP.ViewFieldCollection', SP.ClientObjectCollection);
SP.ViewFieldCollectionPropertyNames.registerClass('SP.ViewFieldCollectionPropertyNames');
SP.Web.registerClass('SP.Web', SP.SecurableObject);
SP.WebPropertyNames.registerClass('SP.WebPropertyNames');
SP.WebObjectPropertyNames.registerClass('SP.WebObjectPropertyNames');
SP.WebCollection.registerClass('SP.WebCollection', SP.ClientObjectCollection);
SP.WebCreationInformation.registerClass('SP.WebCreationInformation', SP.ClientValueObject);
SP.WebTemplate.registerClass('SP.WebTemplate', SP.ClientObject);
SP.WebTemplatePropertyNames.registerClass('SP.WebTemplatePropertyNames');
SP.WebTemplateCollection.registerClass('SP.WebTemplateCollection', SP.ClientObjectCollection);
SP.UI.PopoutMenu.registerClass('SP.UI.PopoutMenu', null, Sys.IDisposable);
SP.UI.Notify.registerClass('SP.UI.Notify');
SP.UI.Status.registerClass('SP.UI.Status');
SP.UI.Menu.registerClass('SP.UI.Menu');
SP.UI.MenuTest.registerClass('SP.UI.MenuTest');
SP.UI.AspMenu.registerClass('SP.UI.AspMenu', Sys.UI.Control);
SP.Utilities.Utility.registerClass('SP.Utilities.Utility', SP.ClientObject);
SP.Utilities.MobileUtility.registerClass('SP.Utilities.MobileUtility', SP.ClientObject);
SP.Utilities.PrincipalInfo.registerClass('SP.Utilities.PrincipalInfo', SP.ClientValueObject);
SP.Application.UI.FormsInfo.registerClass('SP.Application.UI.FormsInfo');
SP.Application.UI.DefaultFormsInformation.registerClass('SP.Application.UI.DefaultFormsInformation');
SP.Application.UI.DefaultFormsMenuBuilder.registerClass('SP.Application.UI.DefaultFormsMenuBuilder');
SP.Application.UI.BrowserUtility.registerClass('SP.Application.UI.BrowserUtility');
SP.Application.UI.ViewSelectorGroups.registerClass('SP.Application.UI.ViewSelectorGroups');
SP.Application.UI.ViewSelectorMenuItem.registerClass('SP.Application.UI.ViewSelectorMenuItem');
SP.Application.UI.ViewSelectorSubMenu.registerClass('SP.Application.UI.ViewSelectorSubMenu');
SP.Application.UI.ServerMenus.registerClass('SP.Application.UI.ServerMenus');
SP.Application.UI.ViewSelectorMenuBuilder.registerClass('SP.Application.UI.ViewSelectorMenuBuilder');
SP.Application.UI.MoreColorsPicker.registerClass('SP.Application.UI.MoreColorsPicker', Sys.UI.Control);
SP.Application.UI.MappedColor.registerClass('SP.Application.UI.MappedColor');
SP.Application.UI.MoreColorsPage.registerClass('SP.Application.UI.MoreColorsPage', Sys.UI.Control);
SP.Application.UI.ThemeWebPage.registerClass('SP.Application.UI.ThemeWebPage', Sys.UI.Control);
SP.Application.UI.WikiPageNameInPlaceEditor.registerClass('SP.Application.UI.WikiPageNameInPlaceEditor');
SP.UI.ApplicationPages.SelectorSelectionEventArgs.registerClass('SP.UI.ApplicationPages.SelectorSelectionEventArgs', Sys.EventArgs);
SP.UI.ApplicationPages.CalendarSelector.registerClass('SP.UI.ApplicationPages.CalendarSelector', Sys.Component);
SP.UI.ApplicationPages.BaseSelectorComponent.registerClass('SP.UI.ApplicationPages.BaseSelectorComponent', null, SP.UI.ApplicationPages.ISelectorComponent);
SP.UI.ApplicationPages.CalendarInstanceRepository.registerClass('SP.UI.ApplicationPages.CalendarInstanceRepository');
SP.UI.ApplicationPages.ResolveEntity.registerClass('SP.UI.ApplicationPages.ResolveEntity');
SP.UI.ApplicationPages.PeoplePickerWebServiceInterface.registerClass('SP.UI.ApplicationPages.PeoplePickerWebServiceInterface', SP.ClientObject);
SP.WebParts.LimitedWebPartManager.registerClass('SP.WebParts.LimitedWebPartManager', SP.ClientObject);
SP.WebParts.LimitedWebPartManagerPropertyNames.registerClass('SP.WebParts.LimitedWebPartManagerPropertyNames');
SP.WebParts.LimitedWebPartManagerObjectPropertyNames.registerClass('SP.WebParts.LimitedWebPartManagerObjectPropertyNames');
SP.WebParts.WebPart.registerClass('SP.WebParts.WebPart', SP.ClientObject);
SP.WebParts.WebPartPropertyNames.registerClass('SP.WebParts.WebPartPropertyNames');
SP.WebParts.WebPartDefinition.registerClass('SP.WebParts.WebPartDefinition', SP.ClientObject);
SP.WebParts.WebPartDefinitionPropertyNames.registerClass('SP.WebParts.WebPartDefinitionPropertyNames');
SP.WebParts.WebPartDefinitionObjectPropertyNames.registerClass('SP.WebParts.WebPartDefinitionObjectPropertyNames');
SP.WebParts.WebPartDefinitionCollection.registerClass('SP.WebParts.WebPartDefinitionCollection', SP.ClientObjectCollection);
SP.Workflow.WorkflowAssociation.registerClass('SP.Workflow.WorkflowAssociation', SP.ClientObject);
SP.Workflow.WorkflowAssociationPropertyNames.registerClass('SP.Workflow.WorkflowAssociationPropertyNames');
SP.Workflow.WorkflowAssociationCollection.registerClass('SP.Workflow.WorkflowAssociationCollection', SP.ClientObjectCollection);
SP.Workflow.WorkflowAssociationCreationInformation.registerClass('SP.Workflow.WorkflowAssociationCreationInformation', SP.ClientValueObject);
SP.Workflow.WorkflowTemplate.registerClass('SP.Workflow.WorkflowTemplate', SP.ClientObject);
SP.Workflow.WorkflowTemplatePropertyNames.registerClass('SP.Workflow.WorkflowTemplatePropertyNames');
SP.Workflow.WorkflowTemplateCollection.registerClass('SP.Workflow.WorkflowTemplateCollection', SP.ClientObjectCollection);
SP.ClientContext.$1S_1 = null;
SP.PageContextInfo.$1T_0 = null;
SP.ULS.$2T_0 = false;
SP.ULS.$W_0 = false;
SP.ULS.$1R_0 = false;
SP.ULS.$E_0 = null;
SP.ULS.$1U_0 = false;
SP.ULS.$H_0 = '';
SP.ULS.$2U_0 = 0;
SP.ULS.$2V_0 = [];
SP.ChangePropertyNames.changeType = 'ChangeType';
SP.ChangePropertyNames.siteId = 'SiteId';
SP.ChangePropertyNames.time = 'Time';
SP.ChangePropertyNames.changeToken = 'ChangeToken';
SP.ChangeAlertPropertyNames.webId = 'WebId';
SP.ChangeAlertPropertyNames.alertId = 'AlertId';
SP.ChangeContentTypePropertyNames.webId = 'WebId';
SP.ChangeContentTypePropertyNames.contentTypeId = 'ContentTypeId';
SP.ChangeFieldPropertyNames.webId = 'WebId';
SP.ChangeFieldPropertyNames.fieldId = 'FieldId';
SP.ChangeFilePropertyNames.webId = 'WebId';
SP.ChangeFilePropertyNames.uniqueId = 'UniqueId';
SP.ChangeFolderPropertyNames.webId = 'WebId';
SP.ChangeFolderPropertyNames.uniqueId = 'UniqueId';
SP.ChangeGroupPropertyNames.groupId = 'GroupId';
SP.ChangeItemPropertyNames.webId = 'WebId';
SP.ChangeItemPropertyNames.listId = 'ListId';
SP.ChangeItemPropertyNames.itemId = 'ItemId';
SP.ChangeListPropertyNames.webId = 'WebId';
SP.ChangeListPropertyNames.listId = 'ListId';
SP.ChangeUserPropertyNames.userId = 'UserId';
SP.ChangeUserPropertyNames.activate = 'Activate';
SP.ChangeViewPropertyNames.webId = 'WebId';
SP.ChangeViewPropertyNames.listId = 'ListId';
SP.ChangeViewPropertyNames.viewId = 'ViewId';
SP.ChangeWebPropertyNames.webId = 'WebId';
SP.ContentTypePropertyNames.displayFormTemplateName = 'DisplayFormTemplateName';
SP.ContentTypePropertyNames.editFormTemplateName = 'EditFormTemplateName';
SP.ContentTypePropertyNames.newFormTemplateName = 'NewFormTemplateName';
SP.ContentTypePropertyNames.newFormUrl = 'NewFormUrl';
SP.ContentTypePropertyNames.editFormUrl = 'EditFormUrl';
SP.ContentTypePropertyNames.displayFormUrl = 'DisplayFormUrl';
SP.ContentTypePropertyNames.id = 'Id';
SP.ContentTypePropertyNames.readOnly = 'ReadOnly';
SP.ContentTypePropertyNames.name = 'Name';
SP.ContentTypePropertyNames.description = 'Description';
SP.ContentTypePropertyNames.hidden = 'Hidden';
SP.ContentTypePropertyNames.scope = 'Scope';
SP.ContentTypePropertyNames.group = 'Group';
SP.ContentTypePropertyNames.documentTemplateUrl = 'DocumentTemplateUrl';
SP.ContentTypePropertyNames.documentTemplate = 'DocumentTemplate';
SP.ContentTypePropertyNames.schemaXml = 'SchemaXml';
SP.ContentTypeObjectPropertyNames.fieldLinks = 'FieldLinks';
SP.ContentTypeObjectPropertyNames.workflowAssociations = 'WorkflowAssociations';
SP.ContentTypeObjectPropertyNames.parent = 'Parent';
SP.ContentTypeObjectPropertyNames.fields = 'Fields';
SP.FeaturePropertyNames.definitionId = 'DefinitionId';
SP.FieldPropertyNames.typeDisplayName = 'TypeDisplayName';
SP.FieldPropertyNames.typeShortDescription = 'TypeShortDescription';
SP.FieldPropertyNames.internalName = 'InternalName';
SP.FieldPropertyNames.id = 'Id';
SP.FieldPropertyNames.enforceUniqueValues = 'EnforceUniqueValues';
SP.FieldPropertyNames.title = 'Title';
SP.FieldPropertyNames.description = 'Description';
SP.FieldPropertyNames.group = 'Group';
SP.FieldPropertyNames.defaultValue = 'DefaultValue';
SP.FieldPropertyNames.validationFormula = 'ValidationFormula';
SP.FieldPropertyNames.validationMessage = 'ValidationMessage';
SP.FieldPropertyNames.fieldTypeKind = 'FieldTypeKind';
SP.FieldPropertyNames.typeAsString = 'TypeAsString';
SP.FieldPropertyNames.fromBaseType = 'FromBaseType';
SP.FieldPropertyNames.sealed = 'Sealed';
SP.FieldPropertyNames.canBeDeleted = 'CanBeDeleted';
SP.FieldPropertyNames.required = 'Required';
SP.FieldPropertyNames.readOnlyField = 'ReadOnlyField';
SP.FieldPropertyNames.hidden = 'Hidden';
SP.FieldPropertyNames.direction = 'Direction';
SP.FieldPropertyNames.sortable = 'Sortable';
SP.FieldPropertyNames.filterable = 'Filterable';
SP.FieldPropertyNames.schemaXml = 'SchemaXml';
SP.FieldPropertyNames.staticName = 'StaticName';
SP.FieldPropertyNames.scope = 'Scope';
SP.FieldCalculatedPropertyNames.formula = 'Formula';
SP.FieldCalculatedPropertyNames.outputType = 'OutputType';
SP.FieldCalculatedPropertyNames.dateFormat = 'DateFormat';
SP.FieldChoicePropertyNames.editFormat = 'EditFormat';
SP.FieldCollectionPropertyNames.schemaXml = 'SchemaXml';
SP.FieldComputedPropertyNames.enableLookup = 'EnableLookup';
SP.FieldCurrencyPropertyNames.currencyLocaleId = 'CurrencyLocaleId';
SP.FieldDateTimePropertyNames.dateTimeCalendarType = 'DateTimeCalendarType';
SP.FieldDateTimePropertyNames.displayFormat = 'DisplayFormat';
SP.FieldLinkPropertyNames.id = 'Id';
SP.FieldLinkPropertyNames.required = 'Required';
SP.FieldLinkPropertyNames.hidden = 'Hidden';
SP.FieldLinkPropertyNames.name = 'Name';
SP.FieldLookupPropertyNames.lookupWebId = 'LookupWebId';
SP.FieldLookupPropertyNames.lookupList = 'LookupList';
SP.FieldLookupPropertyNames.lookupField = 'LookupField';
SP.FieldLookupPropertyNames.relationshipDeleteBehavior = 'RelationshipDeleteBehavior';
SP.FieldLookupPropertyNames.isRelationship = 'IsRelationship';
SP.FieldLookupPropertyNames.allowMultipleValues = 'AllowMultipleValues';
SP.FieldLookupPropertyNames.primaryFieldId = 'PrimaryFieldId';
SP.FieldMultiChoicePropertyNames.fillInChoice = 'FillInChoice';
SP.FieldMultiChoicePropertyNames.choices = 'Choices';
SP.FieldMultiChoicePropertyNames.mappings = 'Mappings';
SP.FieldMultiLineTextPropertyNames.wikiLinking = 'WikiLinking';
SP.FieldMultiLineTextPropertyNames.numberOfLines = 'NumberOfLines';
SP.FieldMultiLineTextPropertyNames.allowHyperlink = 'AllowHyperlink';
SP.FieldMultiLineTextPropertyNames.restrictedMode = 'RestrictedMode';
SP.FieldMultiLineTextPropertyNames.richText = 'RichText';
SP.FieldMultiLineTextPropertyNames.appendOnly = 'AppendOnly';
SP.FieldNumberPropertyNames.minimumValue = 'MinimumValue';
SP.FieldNumberPropertyNames.maximumValue = 'MaximumValue';
SP.FieldRatingScalePropertyNames.gridStartNumber = 'GridStartNumber';
SP.FieldRatingScalePropertyNames.gridEndNumber = 'GridEndNumber';
SP.FieldRatingScalePropertyNames.rangeCount = 'RangeCount';
SP.FieldRatingScalePropertyNames.gridTextRangeLow = 'GridTextRangeLow';
SP.FieldRatingScalePropertyNames.gridTextRangeAverage = 'GridTextRangeAverage';
SP.FieldRatingScalePropertyNames.gridTextRangeHigh = 'GridTextRangeHigh';
SP.FieldRatingScalePropertyNames.gridNAOptionText = 'GridNAOptionText';
SP.FieldTextPropertyNames.maxLength = 'MaxLength';
SP.FieldUrlPropertyNames.displayFormat = 'DisplayFormat';
SP.FieldUserPropertyNames.presence = 'Presence';
SP.FieldUserPropertyNames.allowDisplay = 'AllowDisplay';
SP.FieldUserPropertyNames.selectionMode = 'SelectionMode';
SP.FieldUserPropertyNames.selectionGroup = 'SelectionGroup';
SP.FilePropertyNames.exists = 'Exists';
SP.FilePropertyNames.title = 'Title';
SP.FilePropertyNames.timeCreated = 'TimeCreated';
SP.FilePropertyNames.timeLastModified = 'TimeLastModified';
SP.FilePropertyNames.customizedPageStatus = 'CustomizedPageStatus';
SP.FilePropertyNames.eTag = 'ETag';
SP.FilePropertyNames.checkOutType = 'CheckOutType';
SP.FilePropertyNames.checkInComment = 'CheckInComment';
SP.FilePropertyNames.uiVersion = 'UIVersion';
SP.FilePropertyNames.majorVersion = 'MajorVersion';
SP.FilePropertyNames.minorVersion = 'MinorVersion';
SP.FilePropertyNames.uiVersionLabel = 'UIVersionLabel';
SP.FilePropertyNames.serverRelativeUrl = 'ServerRelativeUrl';
SP.FilePropertyNames.name = 'Name';
SP.FilePropertyNames.level = 'Level';
SP.FileObjectPropertyNames.author = 'Author';
SP.FileObjectPropertyNames.modifiedBy = 'ModifiedBy';
SP.FileObjectPropertyNames.lockedByUser = 'LockedByUser';
SP.FileObjectPropertyNames.checkedOutByUser = 'CheckedOutByUser';
SP.FileObjectPropertyNames.versions = 'Versions';
SP.FileObjectPropertyNames.listItemAllFields = 'ListItemAllFields';
SP.FileVersionPropertyNames.created = 'Created';
SP.FileVersionPropertyNames.id = 'ID';
SP.FileVersionPropertyNames.versionLabel = 'VersionLabel';
SP.FileVersionPropertyNames.url = 'Url';
SP.FileVersionPropertyNames.isCurrentVersion = 'IsCurrentVersion';
SP.FileVersionPropertyNames.checkInComment = 'CheckInComment';
SP.FileVersionObjectPropertyNames.createdBy = 'CreatedBy';
SP.FolderPropertyNames.itemCount = 'ItemCount';
SP.FolderPropertyNames.name = 'Name';
SP.FolderPropertyNames.serverRelativeUrl = 'ServerRelativeUrl';
SP.FolderPropertyNames.welcomePage = 'WelcomePage';
SP.FolderPropertyNames.uniqueContentTypeOrder = 'UniqueContentTypeOrder';
SP.FolderPropertyNames.contentTypeOrder = 'ContentTypeOrder';
SP.FolderObjectPropertyNames.parentFolder = 'ParentFolder';
SP.FolderObjectPropertyNames.files = 'Files';
SP.FolderObjectPropertyNames.folders = 'Folders';
SP.FormPropertyNames.serverRelativeUrl = 'ServerRelativeUrl';
SP.FormPropertyNames.id = 'Id';
SP.FormPropertyNames.formType = 'FormType';
SP.GroupPropertyNames.ownerTitle = 'OwnerTitle';
SP.GroupPropertyNames.description = 'Description';
SP.GroupPropertyNames.onlyAllowMembersViewMembership = 'OnlyAllowMembersViewMembership';
SP.GroupPropertyNames.allowMembersEditMembership = 'AllowMembersEditMembership';
SP.GroupPropertyNames.allowRequestToJoinLeave = 'AllowRequestToJoinLeave';
SP.GroupPropertyNames.autoAcceptRequestToJoinLeave = 'AutoAcceptRequestToJoinLeave';
SP.GroupPropertyNames.requestToJoinLeaveEmailSetting = 'RequestToJoinLeaveEmailSetting';
SP.GroupPropertyNames.canCurrentUserViewMembership = 'CanCurrentUserViewMembership';
SP.GroupPropertyNames.canCurrentUserEditMembership = 'CanCurrentUserEditMembership';
SP.GroupPropertyNames.canCurrentUserManageGroup = 'CanCurrentUserManageGroup';
SP.GroupObjectPropertyNames.owner = 'Owner';
SP.GroupObjectPropertyNames.users = 'Users';
SP.ListPropertyNames.parentWebUrl = 'ParentWebUrl';
SP.ListPropertyNames.dataSource = 'DataSource';
SP.ListPropertyNames.hasExternalDataSource = 'HasExternalDataSource';
SP.ListPropertyNames.created = 'Created';
SP.ListPropertyNames.lastItemModifiedDate = 'LastItemModifiedDate';
SP.ListPropertyNames.lastItemDeletedDate = 'LastItemDeletedDate';
SP.ListPropertyNames.id = 'Id';
SP.ListPropertyNames.description = 'Description';
SP.ListPropertyNames.isSiteAssetsLibrary = 'IsSiteAssetsLibrary';
SP.ListPropertyNames.title = 'Title';
SP.ListPropertyNames.direction = 'Direction';
SP.ListPropertyNames.schemaXml = 'SchemaXml';
SP.ListPropertyNames.baseType = 'BaseType';
SP.ListPropertyNames.imageUrl = 'ImageUrl';
SP.ListPropertyNames.itemCount = 'ItemCount';
SP.ListPropertyNames.baseTemplate = 'BaseTemplate';
SP.ListPropertyNames.defaultContentApprovalWorkflowId = 'DefaultContentApprovalWorkflowId';
SP.ListPropertyNames.templateFeatureId = 'TemplateFeatureId';
SP.ListPropertyNames.defaultViewUrl = 'DefaultViewUrl';
SP.ListPropertyNames.defaultEditFormUrl = 'DefaultEditFormUrl';
SP.ListPropertyNames.defaultNewFormUrl = 'DefaultNewFormUrl';
SP.ListPropertyNames.defaultDisplayFormUrl = 'DefaultDisplayFormUrl';
SP.ListPropertyNames.enableAttachments = 'EnableAttachments';
SP.ListPropertyNames.serverTemplateCanCreateFolders = 'ServerTemplateCanCreateFolders';
SP.ListPropertyNames.enableFolderCreation = 'EnableFolderCreation';
SP.ListPropertyNames.enableModeration = 'EnableModeration';
SP.ListPropertyNames.enableVersioning = 'EnableVersioning';
SP.ListPropertyNames.forceCheckout = 'ForceCheckout';
SP.ListPropertyNames.enableMinorVersions = 'EnableMinorVersions';
SP.ListPropertyNames.draftVersionVisibility = 'DraftVersionVisibility';
SP.ListPropertyNames.hidden = 'Hidden';
SP.ListPropertyNames.isApplicationList = 'IsApplicationList';
SP.ListPropertyNames.isCatalog = 'IsCatalog';
SP.ListPropertyNames.allowContentTypes = 'AllowContentTypes';
SP.ListPropertyNames.documentTemplateUrl = 'DocumentTemplateUrl';
SP.ListPropertyNames.contentTypesEnabled = 'ContentTypesEnabled';
SP.ListPropertyNames.multipleDataList = 'MultipleDataList';
SP.ListPropertyNames.onQuickLaunch = 'OnQuickLaunch';
SP.ListPropertyNames.browserFileHandling = 'BrowserFileHandling';
SP.ListPropertyNames.noCrawl = 'NoCrawl';
SP.ListPropertyNames.validationFormula = 'ValidationFormula';
SP.ListPropertyNames.validationMessage = 'ValidationMessage';
SP.ListPropertyNames.effectiveBasePermissions = 'EffectiveBasePermissions';
SP.ListObjectPropertyNames.parentWeb = 'ParentWeb';
SP.ListObjectPropertyNames.fields = 'Fields';
SP.ListObjectPropertyNames.views = 'Views';
SP.ListObjectPropertyNames.userCustomActions = 'UserCustomActions';
SP.ListObjectPropertyNames.forms = 'Forms';
SP.ListObjectPropertyNames.workflowAssociations = 'WorkflowAssociations';
SP.ListObjectPropertyNames.rootFolder = 'RootFolder';
SP.ListObjectPropertyNames.contentTypes = 'ContentTypes';
SP.ListItemPropertyNames.id = 'Id';
SP.ListItemPropertyNames.displayName = 'DisplayName';
SP.ListItemPropertyNames.fileSystemObjectType = 'FileSystemObjectType';
SP.ListItemPropertyNames.effectiveBasePermissions = 'EffectiveBasePermissions';
SP.ListItemObjectPropertyNames.parentList = 'ParentList';
SP.ListItemObjectPropertyNames.fieldValuesAsHtml = 'FieldValuesAsHtml';
SP.ListItemObjectPropertyNames.fieldValuesAsText = 'FieldValuesAsText';
SP.ListItemObjectPropertyNames.fieldValuesForEdit = 'FieldValuesForEdit';
SP.ListItemObjectPropertyNames.file = 'File';
SP.ListItemObjectPropertyNames.contentType = 'ContentType';
SP.ListItemCollectionPropertyNames.listItemCollectionPosition = 'ListItemCollectionPosition';
SP.ListTemplatePropertyNames.name = 'Name';
SP.ListTemplatePropertyNames.internalName = 'InternalName';
SP.ListTemplatePropertyNames.description = 'Description';
SP.ListTemplatePropertyNames.baseType = 'BaseType';
SP.ListTemplatePropertyNames.featureId = 'FeatureId';
SP.ListTemplatePropertyNames.listTemplateTypeKind = 'ListTemplateTypeKind';
SP.ListTemplatePropertyNames.imageUrl = 'ImageUrl';
SP.ListTemplatePropertyNames.hidden = 'Hidden';
SP.ListTemplatePropertyNames.unique = 'Unique';
SP.ListTemplatePropertyNames.onQuickLaunch = 'OnQuickLaunch';
SP.ListTemplatePropertyNames.allowsFolderCreation = 'AllowsFolderCreation';
SP.ListTemplatePropertyNames.isCustomTemplate = 'IsCustomTemplate';
SP.NavigationPropertyNames.useShared = 'UseShared';
SP.NavigationObjectPropertyNames.topNavigationBar = 'TopNavigationBar';
SP.NavigationObjectPropertyNames.quickLaunch = 'QuickLaunch';
SP.NavigationNodePropertyNames.title = 'Title';
SP.NavigationNodePropertyNames.id = 'Id';
SP.NavigationNodePropertyNames.url = 'Url';
SP.NavigationNodeObjectPropertyNames.children = 'Children';
SP.PrincipalPropertyNames.principalType = 'PrincipalType';
SP.PrincipalPropertyNames.title = 'Title';
SP.PrincipalPropertyNames.loginName = 'LoginName';
SP.PrincipalPropertyNames.id = 'Id';
SP.RecycleBinItemPropertyNames.id = 'Id';
SP.RecycleBinItemPropertyNames.itemState = 'ItemState';
SP.RecycleBinItemPropertyNames.itemType = 'ItemType';
SP.RecycleBinItemPropertyNames.title = 'Title';
SP.RecycleBinItemPropertyNames.dirName = 'DirName';
SP.RecycleBinItemPropertyNames.leafName = 'LeafName';
SP.RecycleBinItemPropertyNames.deletedDate = 'DeletedDate';
SP.RecycleBinItemPropertyNames.size = 'Size';
SP.RecycleBinItemObjectPropertyNames.author = 'Author';
SP.RecycleBinItemObjectPropertyNames.deletedBy = 'DeletedBy';
SP.RelatedFieldPropertyNames.webId = 'WebId';
SP.RelatedFieldPropertyNames.listId = 'ListId';
SP.RelatedFieldPropertyNames.fieldId = 'FieldId';
SP.RelatedFieldPropertyNames.relationshipDeleteBehavior = 'RelationshipDeleteBehavior';
SP.RelatedFieldObjectPropertyNames.lookupList = 'LookupList';
SP.RelatedFieldExtendedDataPropertyNames.webId = 'WebId';
SP.RelatedFieldExtendedDataPropertyNames.listId = 'ListId';
SP.RelatedFieldExtendedDataPropertyNames.fieldId = 'FieldId';
SP.RelatedFieldExtendedDataPropertyNames.resolvedListTitle = 'ResolvedListTitle';
SP.RelatedFieldExtendedDataPropertyNames.listImageUrl = 'ListImageUrl';
SP.RelatedFieldExtendedDataPropertyNames.toolTipDescription = 'ToolTipDescription';
SP.RequestContextObjectPropertyNames.web = 'Web';
SP.RequestContextObjectPropertyNames.site = 'Site';
SP.RoleAssignmentObjectPropertyNames.member = 'Member';
SP.RoleAssignmentObjectPropertyNames.roleDefinitionBindings = 'RoleDefinitionBindings';
SP.RoleDefinitionPropertyNames.id = 'Id';
SP.RoleDefinitionPropertyNames.name = 'Name';
SP.RoleDefinitionPropertyNames.description = 'Description';
SP.RoleDefinitionPropertyNames.roleTypeKind = 'RoleTypeKind';
SP.RoleDefinitionPropertyNames.hidden = 'Hidden';
SP.RoleDefinitionPropertyNames.order = 'Order';
SP.RoleDefinitionPropertyNames.basePermissions = 'BasePermissions';
SP.SecurableObjectPropertyNames.hasUniqueRoleAssignments = 'HasUniqueRoleAssignments';
SP.SecurableObjectObjectPropertyNames.roleAssignments = 'RoleAssignments';
SP.SitePropertyNames.id = 'Id';
SP.SitePropertyNames.serverRelativeUrl = 'ServerRelativeUrl';
SP.SitePropertyNames.url = 'Url';
SP.SitePropertyNames.usage = 'Usage';
SP.SitePropertyNames.uiVersionConfigurationEnabled = 'UIVersionConfigurationEnabled';
SP.SitePropertyNames.maxItemsPerThrottledOperation = 'MaxItemsPerThrottledOperation';
SP.SitePropertyNames.allowDesigner = 'AllowDesigner';
SP.SitePropertyNames.allowRevertFromTemplate = 'AllowRevertFromTemplate';
SP.SitePropertyNames.allowMasterPageEditing = 'AllowMasterPageEditing';
SP.SitePropertyNames.showUrlStructure = 'ShowUrlStructure';
SP.SiteObjectPropertyNames.features = 'Features';
SP.SiteObjectPropertyNames.userCustomActions = 'UserCustomActions';
SP.SiteObjectPropertyNames.rootWeb = 'RootWeb';
SP.SiteObjectPropertyNames.recycleBin = 'RecycleBin';
SP.UserPropertyNames.email = 'Email';
SP.UserCustomActionPropertyNames.name = 'Name';
SP.UserCustomActionPropertyNames.title = 'Title';
SP.UserCustomActionPropertyNames.description = 'Description';
SP.UserCustomActionPropertyNames.scope = 'Scope';
SP.UserCustomActionPropertyNames.sequence = 'Sequence';
SP.UserCustomActionPropertyNames.id = 'Id';
SP.UserCustomActionPropertyNames.imageUrl = 'ImageUrl';
SP.UserCustomActionPropertyNames.registrationType = 'RegistrationType';
SP.UserCustomActionPropertyNames.registrationId = 'RegistrationId';
SP.UserCustomActionPropertyNames.url = 'Url';
SP.UserCustomActionPropertyNames.location = 'Location';
SP.UserCustomActionPropertyNames.scriptSrc = 'ScriptSrc';
SP.UserCustomActionPropertyNames.scriptBlock = 'ScriptBlock';
SP.UserCustomActionPropertyNames.group = 'Group';
SP.UserCustomActionPropertyNames.commandUIExtension = 'CommandUIExtension';
SP.UserCustomActionPropertyNames.versionOfUserCustomAction = 'VersionOfUserCustomAction';
SP.UserCustomActionPropertyNames.rights = 'Rights';
SP.ViewPropertyNames.id = 'Id';
SP.ViewPropertyNames.title = 'Title';
SP.ViewPropertyNames.viewType = 'ViewType';
SP.ViewPropertyNames.imageUrl = 'ImageUrl';
SP.ViewPropertyNames.moderationType = 'ModerationType';
SP.ViewPropertyNames.serverRelativeUrl = 'ServerRelativeUrl';
SP.ViewPropertyNames.hidden = 'Hidden';
SP.ViewPropertyNames.readOnlyView = 'ReadOnlyView';
SP.ViewPropertyNames.requiresClientIntegration = 'RequiresClientIntegration';
SP.ViewPropertyNames.editorModified = 'EditorModified';
SP.ViewPropertyNames.threaded = 'Threaded';
SP.ViewPropertyNames.scope = 'Scope';
SP.ViewPropertyNames.includeRootFolder = 'IncludeRootFolder';
SP.ViewPropertyNames.defaultView = 'DefaultView';
SP.ViewPropertyNames.mobileView = 'MobileView';
SP.ViewPropertyNames.mobileDefaultView = 'MobileDefaultView';
SP.ViewPropertyNames.contentTypeId = 'ContentTypeId';
SP.ViewPropertyNames.defaultViewForContentType = 'DefaultViewForContentType';
SP.ViewPropertyNames.personalView = 'PersonalView';
SP.ViewPropertyNames.orderedView = 'OrderedView';
SP.ViewPropertyNames.viewQuery = 'ViewQuery';
SP.ViewPropertyNames.method = 'Method';
SP.ViewPropertyNames.viewProjectedFields = 'ViewProjectedFields';
SP.ViewPropertyNames.viewJoins = 'ViewJoins';
SP.ViewPropertyNames.rowLimit = 'RowLimit';
SP.ViewPropertyNames.paged = 'Paged';
SP.ViewPropertyNames.toolbar = 'Toolbar';
SP.ViewPropertyNames.toolbarTemplateName = 'ToolbarTemplateName';
SP.ViewPropertyNames.formats = 'Formats';
SP.ViewPropertyNames.aggregations = 'Aggregations';
SP.ViewPropertyNames.aggregationsStatus = 'AggregationsStatus';
SP.ViewPropertyNames.htmlSchemaXml = 'HtmlSchemaXml';
SP.ViewPropertyNames.styleId = 'StyleId';
SP.ViewPropertyNames.baseViewId = 'BaseViewId';
SP.ViewPropertyNames.viewData = 'ViewData';
SP.ViewObjectPropertyNames.viewFields = 'ViewFields';
SP.ViewFieldCollectionPropertyNames.schemaXml = 'SchemaXml';
SP.WebPropertyNames.description = 'Description';
SP.WebPropertyNames.created = 'Created';
SP.WebPropertyNames.lastItemModifiedDate = 'LastItemModifiedDate';
SP.WebPropertyNames.recycleBinEnabled = 'RecycleBinEnabled';
SP.WebPropertyNames.title = 'Title';
SP.WebPropertyNames.serverRelativeUrl = 'ServerRelativeUrl';
SP.WebPropertyNames.id = 'Id';
SP.WebPropertyNames.syndicationEnabled = 'SyndicationEnabled';
SP.WebPropertyNames.allowRssFeeds = 'AllowRssFeeds';
SP.WebPropertyNames.quickLaunchEnabled = 'QuickLaunchEnabled';
SP.WebPropertyNames.treeViewEnabled = 'TreeViewEnabled';
SP.WebPropertyNames.language = 'Language';
SP.WebPropertyNames.uiVersion = 'UIVersion';
SP.WebPropertyNames.uiVersionConfigurationEnabled = 'UIVersionConfigurationEnabled';
SP.WebPropertyNames.allowDesignerForCurrentUser = 'AllowDesignerForCurrentUser';
SP.WebPropertyNames.allowRevertFromTemplateForCurrentUser = 'AllowRevertFromTemplateForCurrentUser';
SP.WebPropertyNames.allowMasterPageEditingForCurrentUser = 'AllowMasterPageEditingForCurrentUser';
SP.WebPropertyNames.showUrlStructureForCurrentUser = 'ShowUrlStructureForCurrentUser';
SP.WebPropertyNames.effectiveBasePermissions = 'EffectiveBasePermissions';
SP.WebObjectPropertyNames.lists = 'Lists';
SP.WebObjectPropertyNames.rootFolder = 'RootFolder';
SP.WebObjectPropertyNames.folders = 'Folders';
SP.WebObjectPropertyNames.webs = 'Webs';
SP.WebObjectPropertyNames.features = 'Features';
SP.WebObjectPropertyNames.workflowTemplates = 'WorkflowTemplates';
SP.WebObjectPropertyNames.workflowAssociations = 'WorkflowAssociations';
SP.WebObjectPropertyNames.listTemplates = 'ListTemplates';
SP.WebObjectPropertyNames.currentUser = 'CurrentUser';
SP.WebObjectPropertyNames.allProperties = 'AllProperties';
SP.WebObjectPropertyNames.navigation = 'Navigation';
SP.WebObjectPropertyNames.contentTypes = 'ContentTypes';
SP.WebObjectPropertyNames.availableContentTypes = 'AvailableContentTypes';
SP.WebObjectPropertyNames.fields = 'Fields';
SP.WebObjectPropertyNames.availableFields = 'AvailableFields';
SP.WebObjectPropertyNames.userCustomActions = 'UserCustomActions';
SP.WebObjectPropertyNames.siteUserInfoList = 'SiteUserInfoList';
SP.WebObjectPropertyNames.siteGroups = 'SiteGroups';
SP.WebObjectPropertyNames.roleDefinitions = 'RoleDefinitions';
SP.WebObjectPropertyNames.associatedOwnerGroup = 'AssociatedOwnerGroup';
SP.WebObjectPropertyNames.associatedMemberGroup = 'AssociatedMemberGroup';
SP.WebObjectPropertyNames.associatedVisitorGroup = 'AssociatedVisitorGroup';
SP.WebTemplatePropertyNames.lcid = 'Lcid';
SP.WebTemplatePropertyNames.id = 'Id';
SP.WebTemplatePropertyNames.title = 'Title';
SP.WebTemplatePropertyNames.name = 'Name';
SP.WebTemplatePropertyNames.isHidden = 'IsHidden';
SP.WebTemplatePropertyNames.description = 'Description';
SP.WebTemplatePropertyNames.imageUrl = 'ImageUrl';
SP.WebTemplatePropertyNames.isRootWebOnly = 'IsRootWebOnly';
SP.WebTemplatePropertyNames.isSubWebOnly = 'IsSubWebOnly';
SP.WebTemplatePropertyNames.displayCategory = 'DisplayCategory';
SP.UI.PopoutMenu.$I_0 = false;
SP.UI.PopoutMenu.$1Z_0 = false;
SP.UI.PopoutMenu._activePopoutMenuInstance = null;
SP.UI.MenuTest.$X_0 = null;
SP.Application.UI.MoreColorsPicker.$Z_2 = null;
SP.Application.UI.MappedColor.$P_0 = null;
SP.Application.UI.MappedColor.$p_0 = null;
SP.UI.ApplicationPages.CalendarSelector.$3b_1 = new SP.UI.ApplicationPages.CalendarSelector();
SP.UI.ApplicationPages.CalendarInstanceRepository.$n_0 = {};
SP.UI.ApplicationPages.ResolveEntity.typE_EVENT = '0';
SP.UI.ApplicationPages.ResolveEntity.typE_USER = '1';
SP.UI.ApplicationPages.ResolveEntity.typE_RESOURCE = '2';
SP.UI.ApplicationPages.ResolveEntity.typE_EXCHANGE = '3';
SP.WebParts.LimitedWebPartManagerPropertyNames.scope = 'Scope';
SP.WebParts.LimitedWebPartManagerPropertyNames.hasPersonalizedParts = 'HasPersonalizedParts';
SP.WebParts.LimitedWebPartManagerObjectPropertyNames.webParts = 'WebParts';
SP.WebParts.WebPartPropertyNames.hidden = 'Hidden';
SP.WebParts.WebPartPropertyNames.isClosed = 'IsClosed';
SP.WebParts.WebPartPropertyNames.subtitle = 'Subtitle';
SP.WebParts.WebPartPropertyNames.title = 'Title';
SP.WebParts.WebPartPropertyNames.titleUrl = 'TitleUrl';
SP.WebParts.WebPartPropertyNames.zoneIndex = 'ZoneIndex';
SP.WebParts.WebPartDefinitionPropertyNames.id = 'Id';
SP.WebParts.WebPartDefinitionObjectPropertyNames.webPart = 'WebPart';
SP.Workflow.WorkflowAssociationPropertyNames.instantiationUrl = 'InstantiationUrl';
SP.Workflow.WorkflowAssociationPropertyNames.associationData = 'AssociationData';
SP.Workflow.WorkflowAssociationPropertyNames.id = 'Id';
SP.Workflow.WorkflowAssociationPropertyNames.baseId = 'BaseId';
SP.Workflow.WorkflowAssociationPropertyNames.webId = 'WebId';
SP.Workflow.WorkflowAssociationPropertyNames.listId = 'ListId';
SP.Workflow.WorkflowAssociationPropertyNames.internalName = 'InternalName';
SP.Workflow.WorkflowAssociationPropertyNames.name = 'Name';
SP.Workflow.WorkflowAssociationPropertyNames.description = 'Description';
SP.Workflow.WorkflowAssociationPropertyNames.taskListTitle = 'TaskListTitle';
SP.Workflow.WorkflowAssociationPropertyNames.historyListTitle = 'HistoryListTitle';
SP.Workflow.WorkflowAssociationPropertyNames.allowManual = 'AllowManual';
SP.Workflow.WorkflowAssociationPropertyNames.autoStartCreate = 'AutoStartCreate';
SP.Workflow.WorkflowAssociationPropertyNames.autoStartChange = 'AutoStartChange';
SP.Workflow.WorkflowAssociationPropertyNames.isDeclarative = 'IsDeclarative';
SP.Workflow.WorkflowAssociationPropertyNames.enabled = 'Enabled';
SP.Workflow.WorkflowAssociationPropertyNames.modified = 'Modified';
SP.Workflow.WorkflowAssociationPropertyNames.created = 'Created';
SP.Workflow.WorkflowTemplatePropertyNames.id = 'Id';
SP.Workflow.WorkflowTemplatePropertyNames.isDeclarative = 'IsDeclarative';
SP.Workflow.WorkflowTemplatePropertyNames.name = 'Name';
SP.Workflow.WorkflowTemplatePropertyNames.associationUrl = 'AssociationUrl';
SP.Workflow.WorkflowTemplatePropertyNames.description = 'Description';
SP.Workflow.WorkflowTemplatePropertyNames.allowManual = 'AllowManual';
SP.Workflow.WorkflowTemplatePropertyNames.permissionsManual = 'PermissionsManual';
SP.Workflow.WorkflowTemplatePropertyNames.autoStartCreate = 'AutoStartCreate';
SP.Workflow.WorkflowTemplatePropertyNames.autoStartChange = 'AutoStartChange';

if (typeof(Sys) != "undefined" && Sys && Sys.Application) {
    Sys.Application.notifyScriptLoaded();
}
NotifyScriptLoadedAndExecuteWaitingJobs("sp.js");


/***** End Insert                           ***************/

// fix function reference
window.escapeUrlForCallback = escapeUrlForCallback;



/* SharePoint claims based authentication code (see https://github.com/lstak/node-sharepoint)   */
var fs = require('fs'),
    qs = require('querystring'),
    xml2js = require('xml2js'),
    http = require('http'),
    https = require('https'),
    urlparse = require('url').parse,
    samlRequestTemplate = fs.readFileSync(__dirname + '/SAML.xml', 'utf8');

var escapeXml = function(s) {
    var XML_CHAR_MAP = {
        '<': '&lt;',
        '>': '&gt;',
        '&': '&amp;',
        '"': '&quot;',
        "'": '&apos;'
    };
    return s.replace(/[<>&"']/g, function(ch) {
        return XML_CHAR_MAP[ch];
    });
}

var buildSamlRequest = function(params) {
    var key,
        saml = samlRequestTemplate;

    for (key in params) {
        saml = saml.replace('[' + key + ']', escapeXml(params[key]))
    }

    return saml;
}

var parseXml = function(xml, callback) {
    var parser = new xml2js.Parser({
        emptyTag: '' // use empty string as value when tag empty
    });

    parser.on('end', function(js) {
        callback && callback(js)
    });

    parser.parseString(xml);
};

var parseCookie = function(txt) {
    var properties = txt.split('; '),
        cookie = {};

    properties.forEach(function(property, index) {
        var idx = property.indexOf('='),
            name = (idx > 0 ? property.substring(0, idx) : property),
            value = (idx > 0 ? property.substring(idx + 1) : undefined);

        if (index == 0) {
            cookie.name = name,
            cookie.value = value
        } else {
            cookie[name] = value
        }

    })

    return cookie;
};

var parseCookies = function(txts) {
    var cookies = []

    if (txts) {
        txts.forEach(function(txt) {
            var cookie = parseCookie(txt);
            cookies.push(cookie)
        })
    };

    return cookies;
}


var getCookie = function(cookies, name) {
    var cookie,
        i = 0,
        len = cookies.length;

    for (; i < len; i++) {
        cookie = cookies[i]
        if (cookie.name == name) {
            return cookie
        }
    }

    return undefined;

}

    function requestToken(params, callback) {
        var samlRequest = buildSamlRequest({
            username: params.username,
            password: params.password,
            endpoint: params.endpoint
        });

        var options = {
            method: 'POST',
            host: params.sts.host,
            path: params.sts.path,
            headers: {
                'Content-Length': samlRequest.length
            }
        };


        var req = https.request(options, function(res) {
            var xml = '';

            res.setEncoding('utf8');
            res.on('data', function(chunk) {
                xml += chunk;
            })

            res.on('end', function() {
                parseXml(xml, function(js) {
                    var saml_envelope = js['S:Envelope'];
                    var saml_body = saml_envelope['S:Body'];
                    // extract token
                    var rstr = saml_body[0]['wst:RequestSecurityTokenResponse'];
                    var rst = rstr[0]['wst:RequestedSecurityToken'];
                    var bst = rst[0]['wsse:BinarySecurityToken'];
                    var token = bst[0]['_'];
                    //var token = js['S:Body']['wst:RequestSecurityTokenResponse']['wst:RequestedSecurityToken']['wsse:BinarySecurityToken']['#'];

                    // Now we have the token, we need to submit it to SPO
                    submitToken({
                        token: token,
                        endpoint: params.endpoint
                    }, callback)
                })
            })
        });

        req.end(samlRequest);
    }

    function submitToken(params, callback) {
        var token = params.token,
            url = urlparse(params.endpoint),
            ssl = (url.protocol == 'https:');

        var options = {
            method: 'POST',
            host: url.hostname,
            path: url.path,
            headers: {
                // E accounts require a user agent string
                'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)'
            },
            secureProtocol: "SSLv3_method"
        }
        options.agent = new https.Agent(options);

        var protocol = (ssl ? https : http);
        var req = protocol.request(options, function(res) {
            var xml = '';
            res.setEncoding('utf8');
            res.on('data', function(chunk) {
                xml += chunk;
            })

            res.on('end', function() {
                var cookies = parseCookies(res.headers['set-cookie'])
                //console.log(JSON.stringify(cookies));
                callback(null, {
                    FedAuth: getCookie(cookies, 'FedAuth').value,
                    rtFa: getCookie(cookies, 'rtFa').value
                })
            })
        })

        req.end(token);
    }


    function signin(username, password, callback) {
        var self = this;

        var options = {
            username: username,
            password: password,
            sts: self.sts,
            endpoint: self.url.protocol + '//' + self.url.hostname + self.login
        }


        requestToken(options, function(err, data) {
            self.FedAuth = data.FedAuth;
            self.rtFa = data.rtFa;

            requestDigest(data, callback);

        })
    }



    // get Digest vale using sites.asmx web service
    function requestDigest(params, callback) {

        var payload =
            "<?xml version=\"1.0\" encoding=\"utf-8\"?>" +
            "<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">" +
            "  <soap:Body>" +
            "    <GetUpdatedFormDigest xmlns=\"http://schemas.microsoft.com/sharepoint/soap/\" />" +
            "  </soap:Body>" +
            "</soap:Envelope>";

        var options = {
            method: 'POST',
            host: 'company.sharepoint.com',
            path: '/_vti_bin/sites.asmx',
            headers: {
                'Content-type': 'text/xml',
                'Cookie': 'FedAuth=' + params.FedAuth + '; rtFa=' + params.rtFa,
                'Content-length': payload.length
            },
            secureProtocol: "SSLv3_method"
        }
        options.agent = new https.Agent(options);

        var req = https.request(options, function(res) {
            var responseText = '';
            res.setEncoding('utf8');
            res.on('data', function(chunk) {
                responseText += chunk;
            })

            res.on('end', function() {
                //console.log('XML: ', responseText);

                if ((responseText == null) || (responseText.length <= 0)) {
                    return;
                }
                var startTag = '<GetUpdatedFormDigestResult>';
                var endTag = '</GetUpdatedFormDigestResult>';
                var startTagIndex = responseText.indexOf(startTag);
                var endTagIndex = responseText.indexOf(endTag, startTagIndex + startTag.length);
                var newFormDigest = null;
                if ((startTagIndex >= 0) && (endTagIndex > startTagIndex)) {
                    var newFormDigest = responseText.substring(startTagIndex + startTag.length, endTagIndex);
                }
                if ((newFormDigest == null) || (newFormDigest.length <= 0)) {
                    return;
                }

                formdigest.value = newFormDigest;
                callback();
            })
        })

        req.end(payload);
    }



    // constructor for SharePoint Online client
SPO = function(url) {
    this.url = urlparse(url);
    this.host = this.url.host;
    this.path = this.url.path;

    // External Security Token Service for SPO
    this.sts = {
        host: 'login.microsoftonline.com',
        path: '/extSTS.srf'
    };

    // Form to submit SAML token
    this.login = '/_forms/default.aspx?wa=wsignin1.0';
};

SPO.prototype = {
    signin: signin
};


var client = new SPO('https://company.sharepoint.com');

client.signin("user@company.com", "PASSWORD", function() {
    //console.log("Signed");
    // make sure the XMLHtpRequest includes the authentication cookies
    XMLHttpRequest.authcookies = 'FedAuth=' + client.FedAuth + '; rtFa=' + client.rtFa;

    // as of this point, you can use the CSOM service as if you are in a browser......
    // for example, we will request the properties of the site 'teamsite'.
    //console.log(new Date().toISOString());
    var ctx = new SP.ClientContext("/4qa"),
        web = ctx.get_web(),
        list = web.get_lists().getByTitle('Contacts'),
        items = list.getItems('');

    ctx.load(web);
    ctx.load(items);
    ctx.executeQueryAsync(function() {
        //console.log(new Date().toISOString());
        var properties = web.get_objectData().get_properties();
        console.log(properties);

        //console.log(new Date().toISOString());
        var listEnumerator = items.getEnumerator();
        while (listEnumerator.moveNext()) {
            var item = listEnumerator.get_current();
            console.log("Contact: ", item.get_fieldValues())
        }
    })

});